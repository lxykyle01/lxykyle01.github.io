<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://lxykyle01.github.io/</id>
    <title>MY SITE</title>
    <updated>2021-08-25T17:33:03.918Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://lxykyle01.github.io/"/>
    <link rel="self" href="https://lxykyle01.github.io/atom.xml"/>
    <subtitle>ASAP</subtitle>
    <logo>https://lxykyle01.github.io/images/avatar.png</logo>
    <icon>https://lxykyle01.github.io/favicon.ico</icon>
    <rights>All rights reserved 2021, MY SITE</rights>
    <entry>
        <title type="html"><![CDATA[123]]></title>
        <id>https://lxykyle01.github.io/post/123/</id>
        <link href="https://lxykyle01.github.io/post/123/">
        </link>
        <updated>2021-08-25T10:08:55.000Z</updated>
        <content type="html"><![CDATA[<p>&lt;!doctype html&gt;</p>
<html>
<head>
<meta charset='UTF-8'><meta name='viewport' content='width=device-width initial-scale=1'>
<style type='text/css'>html {overflow-x: initial !important;}:root { --bg-color:#ffffff; --text-color:#333333; --select-text-bg-color:#B5D6FC; --select-text-font-color:auto; --monospace:"Lucida Console",Consolas,"Courier",monospace; --title-bar-height:20px; }
.mac-os-11 { --title-bar-height:28px; }
html { font-size: 14px; background-color: var(--bg-color); color: var(--text-color); font-family: "Helvetica Neue", Helvetica, Arial, sans-serif; -webkit-font-smoothing: antialiased; }
body { margin: 0px; padding: 0px; height: auto; inset: 0px; font-size: 1rem; line-height: 1.42857; overflow-x: hidden; background: inherit; tab-size: 4; }
iframe { margin: auto; }
a.url { word-break: break-all; }
a:active, a:hover { outline: 0px; }
.in-text-selection, ::selection { text-shadow: none; background: var(--select-text-bg-color); color: var(--select-text-font-color); }
#write { margin: 0px auto; height: auto; width: inherit; word-break: normal; overflow-wrap: break-word; position: relative; white-space: normal; overflow-x: visible; padding-top: 36px; }
#write.first-line-indent p { text-indent: 2em; }
#write.first-line-indent li p, #write.first-line-indent p * { text-indent: 0px; }
#write.first-line-indent li { margin-left: 2em; }
.for-image #write { padding-left: 8px; padding-right: 8px; }
body.typora-export { padding-left: 30px; padding-right: 30px; }
.typora-export .footnote-line, .typora-export li, .typora-export p { white-space: pre-wrap; }
.typora-export .task-list-item input { pointer-events: none; }
@media screen and (max-width: 500px) {
  body.typora-export { padding-left: 0px; padding-right: 0px; }
  #write { padding-left: 20px; padding-right: 20px; }
  .CodeMirror-sizer { margin-left: 0px !important; }
  .CodeMirror-gutters { display: none !important; }
}
#write li > figure:last-child { margin-bottom: 0.5rem; }
#write ol, #write ul { position: relative; }
img { max-width: 100%; vertical-align: middle; image-orientation: from-image; }
button, input, select, textarea { color: inherit; font: inherit; }
input[type="checkbox"], input[type="radio"] { line-height: normal; padding: 0px; }
*, ::after, ::before { box-sizing: border-box; }
#write h1, #write h2, #write h3, #write h4, #write h5, #write h6, #write p, #write pre { width: inherit; }
#write h1, #write h2, #write h3, #write h4, #write h5, #write h6, #write p { position: relative; }
p { line-height: inherit; }
h1, h2, h3, h4, h5, h6 { break-after: avoid-page; break-inside: avoid; orphans: 4; }
p { orphans: 4; }
h1 { font-size: 2rem; }
h2 { font-size: 1.8rem; }
h3 { font-size: 1.6rem; }
h4 { font-size: 1.4rem; }
h5 { font-size: 1.2rem; }
h6 { font-size: 1rem; }
.md-math-block, .md-rawblock, h1, h2, h3, h4, h5, h6, p { margin-top: 1rem; margin-bottom: 1rem; }
.hidden { display: none; }
.md-blockmeta { color: rgb(204, 204, 204); font-weight: 700; font-style: italic; }
a { cursor: pointer; }
sup.md-footnote { padding: 2px 4px; background-color: rgba(238, 238, 238, 0.7); color: rgb(85, 85, 85); border-radius: 4px; cursor: pointer; }
sup.md-footnote a, sup.md-footnote a:hover { color: inherit; text-transform: inherit; text-decoration: inherit; }
#write input[type="checkbox"] { cursor: pointer; width: inherit; height: inherit; }
figure { overflow-x: auto; margin: 1.2em 0px; max-width: calc(100% + 16px); padding: 0px; }
figure > table { margin: 0px; }
tr { break-inside: avoid; break-after: auto; }
thead { display: table-header-group; }
table { border-collapse: collapse; border-spacing: 0px; width: 100%; overflow: auto; break-inside: auto; text-align: left; }
table.md-table td { min-width: 32px; }
.CodeMirror-gutters { border-right: 0px; background-color: inherit; }
.CodeMirror-linenumber { user-select: none; }
.CodeMirror { text-align: left; }
.CodeMirror-placeholder { opacity: 0.3; }
.CodeMirror pre { padding: 0px 4px; }
.CodeMirror-lines { padding: 0px; }
div.hr:focus { cursor: none; }
#write pre { white-space: pre-wrap; }
#write.fences-no-line-wrapping pre { white-space: pre; }
#write pre.ty-contain-cm { white-space: normal; }
.CodeMirror-gutters { margin-right: 4px; }
.md-fences { font-size: 0.9rem; display: block; break-inside: avoid; text-align: left; overflow: visible; white-space: pre; background: inherit; position: relative !important; }
.md-fences-adv-panel { width: 100%; margin-top: 10px; text-align: center; padding-top: 0px; padding-bottom: 8px; overflow-x: auto; }
#write .md-fences.mock-cm { white-space: pre-wrap; }
.md-fences.md-fences-with-lineno { padding-left: 0px; }
#write.fences-no-line-wrapping .md-fences.mock-cm { white-space: pre; overflow-x: auto; }
.md-fences.mock-cm.md-fences-with-lineno { padding-left: 8px; }
.CodeMirror-line, twitterwidget { break-inside: avoid; }
.footnotes { opacity: 0.8; font-size: 0.9rem; margin-top: 1em; margin-bottom: 1em; }
.footnotes + .footnotes { margin-top: 0px; }
.md-reset { margin: 0px; padding: 0px; border: 0px; outline: 0px; vertical-align: top; background: 0px 0px; text-decoration: none; text-shadow: none; float: none; position: static; width: auto; height: auto; white-space: nowrap; cursor: inherit; -webkit-tap-highlight-color: transparent; line-height: normal; font-weight: 400; text-align: left; box-sizing: content-box; direction: ltr; }
li div { padding-top: 0px; }
blockquote { margin: 1rem 0px; }
li .mathjax-block, li p { margin: 0.5rem 0px; }
li blockquote { margin: 1rem 0px; }
li { margin: 0px; position: relative; }
blockquote > :last-child { margin-bottom: 0px; }
blockquote > :first-child, li > :first-child { margin-top: 0px; }
.footnotes-area { color: rgb(136, 136, 136); margin-top: 0.714rem; padding-bottom: 0.143rem; white-space: normal; }
#write .footnote-line { white-space: pre-wrap; }
@media print {
  body, html { border: 1px solid transparent; height: 99%; break-after: avoid; break-before: avoid; font-variant-ligatures: no-common-ligatures; }
  #write { margin-top: 0px; padding-top: 0px; border-color: transparent !important; }
  .typora-export * { -webkit-print-color-adjust: exact; }
  .typora-export #write { break-after: avoid; }
  .typora-export #write::after { height: 0px; }
  .is-mac table { break-inside: avoid; }
  .typora-export-show-outline .typora-export-sidebar { display: none; }
}
.footnote-line { margin-top: 0.714em; font-size: 0.7em; }
a img, img a { cursor: pointer; }
pre.md-meta-block { font-size: 0.8rem; min-height: 0.8rem; white-space: pre-wrap; background: rgb(204, 204, 204); display: block; overflow-x: hidden; }
p > .md-image:only-child:not(.md-img-error) img, p > img:only-child { display: block; margin: auto; }
#write.first-line-indent p > .md-image:only-child:not(.md-img-error) img { left: -2em; position: relative; }
p > .md-image:only-child { display: inline-block; width: 100%; }
#write .MathJax_Display { margin: 0.8em 0px 0px; }
.md-math-block { width: 100%; }
.md-math-block:not(:empty)::after { display: none; }
.MathJax_ref { fill: currentcolor; }
[contenteditable="true"]:active, [contenteditable="true"]:focus, [contenteditable="false"]:active, [contenteditable="false"]:focus { outline: 0px; box-shadow: none; }
.md-task-list-item { position: relative; list-style-type: none; }
.task-list-item.md-task-list-item { padding-left: 0px; }
.md-task-list-item > input { position: absolute; top: 0px; left: 0px; margin-left: -1.2em; margin-top: calc(1em - 10px); border: none; }
.math { font-size: 1rem; }
.md-toc { min-height: 3.58rem; position: relative; font-size: 0.9rem; border-radius: 10px; }
.md-toc-content { position: relative; margin-left: 0px; }
.md-toc-content::after, .md-toc::after { display: none; }
.md-toc-item { display: block; color: rgb(65, 131, 196); }
.md-toc-item a { text-decoration: none; }
.md-toc-inner:hover { text-decoration: underline; }
.md-toc-inner { display: inline-block; cursor: pointer; }
.md-toc-h1 .md-toc-inner { margin-left: 0px; font-weight: 700; }
.md-toc-h2 .md-toc-inner { margin-left: 2em; }
.md-toc-h3 .md-toc-inner { margin-left: 4em; }
.md-toc-h4 .md-toc-inner { margin-left: 6em; }
.md-toc-h5 .md-toc-inner { margin-left: 8em; }
.md-toc-h6 .md-toc-inner { margin-left: 10em; }
@media screen and (max-width: 48em) {
  .md-toc-h3 .md-toc-inner { margin-left: 3.5em; }
  .md-toc-h4 .md-toc-inner { margin-left: 5em; }
  .md-toc-h5 .md-toc-inner { margin-left: 6.5em; }
  .md-toc-h6 .md-toc-inner { margin-left: 8em; }
}
a.md-toc-inner { font-size: inherit; font-style: inherit; font-weight: inherit; line-height: inherit; }
.footnote-line a:not(.reversefootnote) { color: inherit; }
.md-attr { display: none; }
.md-fn-count::after { content: "."; }
code, pre, samp, tt { font-family: var(--monospace); }
kbd { margin: 0px 0.1em; padding: 0.1em 0.6em; font-size: 0.8em; color: rgb(36, 39, 41); background: rgb(255, 255, 255); border: 1px solid rgb(173, 179, 185); border-radius: 3px; box-shadow: rgba(12, 13, 14, 0.2) 0px 1px 0px, rgb(255, 255, 255) 0px 0px 0px 2px inset; white-space: nowrap; vertical-align: middle; }
.md-comment { color: rgb(162, 127, 3); opacity: 0.8; font-family: var(--monospace); }
code { text-align: left; vertical-align: initial; }
a.md-print-anchor { white-space: pre !important; border-width: initial !important; border-style: none !important; border-color: initial !important; display: inline-block !important; position: absolute !important; width: 1px !important; right: 0px !important; outline: 0px !important; background: 0px 0px !important; text-decoration: initial !important; text-shadow: initial !important; }
.os-windows.monocolor-emoji .md-emoji { font-family: "Segoe UI Symbol", sans-serif; }
.md-diagram-panel > svg { max-width: 100%; }
[lang="flow"] svg, [lang="mermaid"] svg { max-width: 100%; height: auto; }
[lang="mermaid"] .node text { font-size: 1rem; }
table tr th { border-bottom: 0px; }
video { max-width: 100%; display: block; margin: 0px auto; }
iframe { max-width: 100%; width: 100%; border: none; }
.highlight td, .highlight tr { border: 0px; }
mark { background: rgb(255, 255, 0); color: rgb(0, 0, 0); }
.md-html-inline .md-plain, .md-html-inline strong, mark .md-inline-math, mark strong { color: inherit; }
.md-expand mark .md-meta { opacity: 0.3 !important; }
mark .md-meta { color: rgb(0, 0, 0); }
@media print {
  .typora-export h1, .typora-export h2, .typora-export h3, .typora-export h4, .typora-export h5, .typora-export h6 { break-inside: avoid; }
}
.md-diagram-panel .messageText { stroke: none !important; }
.md-diagram-panel .start-state { fill: var(--node-fill); }
.md-diagram-panel .edgeLabel rect { opacity: 1 !important; }
.md-require-zoom-fix { height: auto; margin-top: 16px; margin-bottom: 16px; }
.md-require-zoom-fix foreignobject { font-size: var(--mermaid-font-zoom); }
.md-fences.md-fences-math { font-size: 1em; }
.md-fences-advanced:not(.md-focus) { padding: 0px; white-space: nowrap; border: 0px; }
.md-fences-advanced:not(.md-focus) { background: inherit; }
.typora-export-show-outline .typora-export-content { max-width: 1440px; margin: auto; display: flex; flex-direction: row; }
.typora-export-sidebar { width: 300px; font-size: 0.8rem; margin-top: 80px; margin-right: 18px; }
.typora-export-show-outline #write { --webkit-flex:2; flex: 2 1 0%; }
.typora-export-sidebar .outline-content { position: fixed; top: 0px; max-height: 100%; overflow: hidden auto; padding-bottom: 30px; padding-top: 60px; width: 300px; }
@media screen and (max-width: 1024px) {
  .typora-export-sidebar, .typora-export-sidebar .outline-content { width: 240px; }
}
@media screen and (max-width: 800px) {
  .typora-export-sidebar { display: none; }
}
.outline-content li, .outline-content ul { margin-left: 0px; margin-right: 0px; padding-left: 0px; padding-right: 0px; list-style: none; }
.outline-content ul { margin-top: 0px; margin-bottom: 0px; }
.outline-content strong { font-weight: 400; }
.outline-expander { width: 1rem; height: 1.42857rem; position: relative; display: table-cell; vertical-align: middle; cursor: pointer; padding-left: 4px; }
.outline-expander::before { content: ""; position: relative; font-family: Ionicons; display: inline-block; font-size: 8px; vertical-align: middle; }
.outline-item { padding-top: 3px; padding-bottom: 3px; cursor: pointer; }
.outline-expander:hover::before { content: ""; }
.outline-h1 > .outline-item { padding-left: 0px; }
.outline-h2 > .outline-item { padding-left: 1em; }
.outline-h3 > .outline-item { padding-left: 2em; }
.outline-h4 > .outline-item { padding-left: 3em; }
.outline-h5 > .outline-item { padding-left: 4em; }
.outline-h6 > .outline-item { padding-left: 5em; }
.outline-label { cursor: pointer; display: table-cell; vertical-align: middle; text-decoration: none; color: inherit; }
.outline-label:hover { text-decoration: underline; }
.outline-item:hover { border-color: rgb(245, 245, 245); background-color: var(--item-hover-bg-color); }
.outline-item:hover { margin-left: -28px; margin-right: -28px; border-left: 28px solid transparent; border-right: 28px solid transparent; }
.outline-item-single .outline-expander::before, .outline-item-single .outline-expander:hover::before { display: none; }
.outline-item-open > .outline-item > .outline-expander::before { content: ""; }
.outline-children { display: none; }
.info-panel-tab-wrapper { display: none; }
.outline-item-open > .outline-children { display: block; }
.typora-export .outline-item { padding-top: 1px; padding-bottom: 1px; }
.typora-export .outline-item:hover { margin-right: -8px; border-right: 8px solid transparent; }
.typora-export .outline-expander::before { content: "+"; font-family: inherit; top: -1px; }
.typora-export .outline-expander:hover::before, .typora-export .outline-item-open > .outline-item > .outline-expander::before { content: "−"; }
.typora-export-collapse-outline .outline-children { display: none; }
.typora-export-collapse-outline .outline-item-open > .outline-children, .typora-export-no-collapse-outline .outline-children { display: block; }
.typora-export-no-collapse-outline .outline-expander::before { content: "" !important; }
.typora-export-show-outline .outline-item-active > .outline-item .outline-label { font-weight: 700; }
.md-inline-math-container mjx-container { zoom: 0.95; }


.CodeMirror { height: auto; }
.CodeMirror.cm-s-inner { background: inherit; }
.CodeMirror-scroll { overflow: auto hidden; z-index: 3; }
.CodeMirror-gutter-filler, .CodeMirror-scrollbar-filler { background-color: rgb(255, 255, 255); }
.CodeMirror-gutters { border-right: 1px solid rgb(221, 221, 221); background: inherit; white-space: nowrap; }
.CodeMirror-linenumber { padding: 0px 3px 0px 5px; text-align: right; color: rgb(153, 153, 153); }
.cm-s-inner .cm-keyword { color: rgb(119, 0, 136); }
.cm-s-inner .cm-atom, .cm-s-inner.cm-atom { color: rgb(34, 17, 153); }
.cm-s-inner .cm-number { color: rgb(17, 102, 68); }
.cm-s-inner .cm-def { color: rgb(0, 0, 255); }
.cm-s-inner .cm-variable { color: rgb(0, 0, 0); }
.cm-s-inner .cm-variable-2 { color: rgb(0, 85, 170); }
.cm-s-inner .cm-variable-3 { color: rgb(0, 136, 85); }
.cm-s-inner .cm-string { color: rgb(170, 17, 17); }
.cm-s-inner .cm-property { color: rgb(0, 0, 0); }
.cm-s-inner .cm-operator { color: rgb(152, 26, 26); }
.cm-s-inner .cm-comment, .cm-s-inner.cm-comment { color: rgb(170, 85, 0); }
.cm-s-inner .cm-string-2 { color: rgb(255, 85, 0); }
.cm-s-inner .cm-meta { color: rgb(85, 85, 85); }
.cm-s-inner .cm-qualifier { color: rgb(85, 85, 85); }
.cm-s-inner .cm-builtin { color: rgb(51, 0, 170); }
.cm-s-inner .cm-bracket { color: rgb(153, 153, 119); }
.cm-s-inner .cm-tag { color: rgb(17, 119, 0); }
.cm-s-inner .cm-attribute { color: rgb(0, 0, 204); }
.cm-s-inner .cm-header, .cm-s-inner.cm-header { color: rgb(0, 0, 255); }
.cm-s-inner .cm-quote, .cm-s-inner.cm-quote { color: rgb(0, 153, 0); }
.cm-s-inner .cm-hr, .cm-s-inner.cm-hr { color: rgb(153, 153, 153); }
.cm-s-inner .cm-link, .cm-s-inner.cm-link { color: rgb(0, 0, 204); }
.cm-negative { color: rgb(221, 68, 68); }
.cm-positive { color: rgb(34, 153, 34); }
.cm-header, .cm-strong { font-weight: 700; }
.cm-del { text-decoration: line-through; }
.cm-em { font-style: italic; }
.cm-link { text-decoration: underline; }
.cm-error { color: red; }
.cm-invalidchar { color: red; }
.cm-constant { color: rgb(38, 139, 210); }
.cm-defined { color: rgb(181, 137, 0); }
div.CodeMirror span.CodeMirror-matchingbracket { color: rgb(0, 255, 0); }
div.CodeMirror span.CodeMirror-nonmatchingbracket { color: rgb(255, 34, 34); }
.cm-s-inner .CodeMirror-activeline-background { background: inherit; }
.CodeMirror { position: relative; overflow: hidden; }
.CodeMirror-scroll { height: 100%; outline: 0px; position: relative; box-sizing: content-box; background: inherit; }
.CodeMirror-sizer { position: relative; }
.CodeMirror-gutter-filler, .CodeMirror-hscrollbar, .CodeMirror-scrollbar-filler, .CodeMirror-vscrollbar { position: absolute; z-index: 6; display: none; outline: 0px; }
.CodeMirror-vscrollbar { right: 0px; top: 0px; overflow: hidden; }
.CodeMirror-hscrollbar { bottom: 0px; left: 0px; overflow: auto hidden; }
.CodeMirror-scrollbar-filler { right: 0px; bottom: 0px; }
.CodeMirror-gutter-filler { left: 0px; bottom: 0px; }
.CodeMirror-gutters { position: absolute; left: 0px; top: 0px; padding-bottom: 10px; z-index: 3; overflow-y: hidden; }
.CodeMirror-gutter { white-space: normal; height: 100%; box-sizing: content-box; padding-bottom: 30px; margin-bottom: -32px; display: inline-block; }
.CodeMirror-gutter-wrapper { position: absolute; z-index: 4; background: 0px 0px !important; border: none !important; }
.CodeMirror-gutter-background { position: absolute; top: 0px; bottom: 0px; z-index: 4; }
.CodeMirror-gutter-elt { position: absolute; cursor: default; z-index: 4; }
.CodeMirror-lines { cursor: text; }
.CodeMirror pre { border-radius: 0px; border-width: 0px; background: 0px 0px; font-family: inherit; font-size: inherit; margin: 0px; white-space: pre; overflow-wrap: normal; color: inherit; z-index: 2; position: relative; overflow: visible; }
.CodeMirror-wrap pre { overflow-wrap: break-word; white-space: pre-wrap; word-break: normal; }
.CodeMirror-code pre { border-right: 30px solid transparent; width: fit-content; }
.CodeMirror-wrap .CodeMirror-code pre { border-right: none; width: auto; }
.CodeMirror-linebackground { position: absolute; inset: 0px; z-index: 0; }
.CodeMirror-linewidget { position: relative; z-index: 2; overflow: auto; }
.CodeMirror-wrap .CodeMirror-scroll { overflow-x: hidden; }
.CodeMirror-measure { position: absolute; width: 100%; height: 0px; overflow: hidden; visibility: hidden; }
.CodeMirror-measure pre { position: static; }
.CodeMirror div.CodeMirror-cursor { position: absolute; visibility: hidden; border-right: none; width: 0px; }
.CodeMirror div.CodeMirror-cursor { visibility: hidden; }
.CodeMirror-focused div.CodeMirror-cursor { visibility: inherit; }
.cm-searching { background: rgba(255, 255, 0, 0.4); }
span.cm-underlined { text-decoration: underline; }
span.cm-strikethrough { text-decoration: line-through; }
.cm-tw-syntaxerror { color: rgb(255, 255, 255); background-color: rgb(153, 0, 0); }
.cm-tw-deleted { text-decoration: line-through; }
.cm-tw-header5 { font-weight: 700; }
.cm-tw-listitem:first-child { padding-left: 10px; }
.cm-tw-box { border-style: solid; border-right-width: 1px; border-bottom-width: 1px; border-left-width: 1px; border-color: inherit; border-top-width: 0px !important; }
.cm-tw-underline { text-decoration: underline; }
@media print {
  .CodeMirror div.CodeMirror-cursor { visibility: hidden; }
}




/* 防止用户自定义背景颜色对网页的影响，添加让用户可以自定义字体 */
html {
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  text-rendering: optimizelegibility;
  -webkit-font-smoothing: initial;
}

/* 如果你的项目仅支持 IE9+ | Chrome | Firefox 等，推荐在 <html> 中添加 .borderbox 这个 class */
html.borderbox *,
html.borderbox *:before,
html.borderbox *:after {
  -moz-box-sizing: border-box;
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
}

/* 内外边距通常让各个浏览器样式的表现位置不同 */
body,
dl,
dt,
dd,
li,
h1,
h2,
h3,
h4,
h5,
h6,
pre,
code,
form,
fieldset,
legend,
input,
textarea,
p,
blockquote,
th,
td,
hr,
button,
article,
aside,
details,
figcaption,
figure,
footer,
header,
menu,
nav,
section {
  margin: 0;
  padding: 0;
}

/* 重设 HTML5 标签, IE 需要在 js 中 createElement(TAG) */
article,
aside,
details,
figcaption,
figure,
footer,
header,
menu,
nav,
section {
  display: block;
}

/* HTML5 媒体文件跟 img 保持一致 */
audio,
canvas,
video {
  display: inline-block;
}

/* 要注意表单元素并不继承父级 font 的问题 */
body,
button,
input,
select,
textarea {
  font: 300 1em/1.8 PingFang SC, Lantinghei SC, Microsoft Yahei, Hiragino Sans GB, Microsoft Sans Serif, WenQuanYi Micro Hei, sans-serif;
}

button::-moz-focus-inner,
input::-moz-focus-inner {
  padding: 0;
  border: 0;
}

/* 去掉各Table cell 的边距并让其边重合 */
table {
  border-collapse: collapse;
  border-spacing: 0;
}

/* 去除默认边框 */
fieldset,
img {
  border: 0;
}

/* 块/段落引用 */
blockquote {
  position: relative;
  font-weight: 400;
  padding-left: 1em;
  margin: 1em 3em 1em 2em;
}

@media only screen and (max-width: 640px) {
  blockquote {
    margin: 1em 0;
  }
}

/* Firefox 以外，元素没有下划线，需添加 */
acronym,
abbr {
  border-bottom: 1px dotted;
  font-variant: normal;
  text-decoration: none;
}

/* 添加鼠标问号，进一步确保应用的语义是正确的（要知道，交互他们也有洁癖，如果你不去掉，那得多花点口舌） */
abbr {
  cursor: help;
}

/* 一致的 del 样式 */
del {
  text-decoration: line-through;
}

address,
caption,
cite,
code,
dfn,
em,
th,
var {
  font-style: normal;
  font-weight: 400;
}


/* 对齐是排版最重要的因素, 别让什么都居中 */
caption,
th {
  text-align: left;
}

q:before,
q:after {
  content: '';
}

/* 统一上标和下标 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
}

:root sub,
:root sup {
  vertical-align: baseline;
  /* for ie9 and other modern browsers */
}

sup {
  top: -0.5em;
}

sub {
  bottom: -0.25em;
}

/* 让链接在 hover 状态下显示下划线 */
a {
  color: #1abc9c;
}

a:hover {
  text-decoration: underline;
}

/* 默认不显示下划线，保持页面简洁 */
ins,
a {
  text-decoration: none;
}

/* 专名号：虽然 u 已经重回 html5 Draft，但在所有浏览器中都是可以使用的，
 * 要做到更好，向后兼容的话，添加 class="typo-u" 来显示专名号
 * 关于 <u> 标签：http://www.whatwg.org/specs/web-apps/current-work/multipage/text-level-semantics.html#the-u-element
 * 被放弃的是 4，之前一直搞错 http://www.w3.org/TR/html401/appendix/changes.html#idx-deprecated
 * 一篇关于 <u> 标签的很好文章：http://html5doctor.com/u-element/
 */
u,
.typo-u {
  text-decoration: underline;
}

/* 标记，类似于手写的荧光笔的作用 */
mark {
  background: #fffdd1;
  padding: 2px;
  margin: 0 5px;
}

/* 代码片断 */
pre,
code,
pre tt {
  font-family: Courier, 'Courier New', monospace;
}

pre {
  background: #f8f8f8;
  border: 1px solid #ddd;
  padding: 1em 1.5em;
  display: block;
  -webkit-overflow-scrolling: touch;
}

/* 一致化 horizontal rule */
hr {
  border: none;
  border-bottom: 1px solid #cfcfcf;
  margin-bottom: 0.8em;
  height: 10px;
}

/* 底部印刷体、版本等标记 */
small,
.typo-small,
/* 图片说明 */
figcaption {
  font-size: 0.9em;
  color: #888;
}

strong,
b {
  font-weight: bold;
}

/* 可拖动文件添加拖动手势 */
[draggable] {
  cursor: move;
}

h1,
h2,
h3,
h4,
h5,
h6 {
  font-family: PingFang SC, Verdana, Helvetica Neue, Microsoft Yahei, Hiragino Sans GB, Microsoft Sans Serif, WenQuanYi Micro Hei, sans-serif;
  font-weight: 100;
  line-height: 1.35;
}

/* Responsive images */
img {
  max-width: 100%;
}


/* 防止用户自定义背景颜色对网页的影响，添加让用户可以自定义字体 */
html {
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  text-rendering: optimizelegibility;
  -webkit-font-smoothing: initial;
}

/* 如果你的项目仅支持 IE9+ | Chrome | Firefox 等，推荐在 <html> 中添加 .borderbox 这个 class */
html.borderbox *,
html.borderbox *:before,
html.borderbox *:after {
  -moz-box-sizing: border-box;
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
}

/* 内外边距通常让各个浏览器样式的表现位置不同 */
body,
dl,
dt,
dd,
li,
h1,
h2,
h3,
h4,
h5,
h6,
pre,
code,
form,
fieldset,
legend,
input,
textarea,
p,
blockquote,
th,
td,
hr,
button,
article,
aside,
details,
figcaption,
figure,
footer,
header,
menu,
nav,
section {
  margin: 0;
  padding: 0;
}

/* 重设 HTML5 标签, IE 需要在 js 中 createElement(TAG) */
article,
aside,
details,
figcaption,
figure,
footer,
header,
menu,
nav,
section {
  display: block;
}

/* HTML5 媒体文件跟 img 保持一致 */
audio,
canvas,
video {
  display: inline-block;
}

/* 要注意表单元素并不继承父级 font 的问题 */
body,
button,
input,
select,
textarea {
  font: 300 1em/1.8 PingFang SC, Lantinghei SC, Microsoft Yahei, Hiragino Sans GB, Microsoft Sans Serif, WenQuanYi Micro Hei, sans-serif;
}

button::-moz-focus-inner,
input::-moz-focus-inner {
  padding: 0;
  border: 0;
}

/* 去掉各Table cell 的边距并让其边重合 */
table {
  border-collapse: collapse;
  border-spacing: 0;
}

/* 去除默认边框 */
fieldset,
img {
  border: 0;
}

/* 块/段落引用 */
blockquote {
  position: relative;
  font-weight: 400;
  padding-left: 1em;
  margin: 1em 3em 1em 2em;
}

@media only screen and (max-width: 640px) {
  blockquote {
    margin: 1em 0;
  }
}

/* Firefox 以外，元素没有下划线，需添加 */
acronym,
abbr {
  border-bottom: 1px dotted;
  font-variant: normal;
  text-decoration: none;
}

/* 添加鼠标问号，进一步确保应用的语义是正确的（要知道，交互他们也有洁癖，如果你不去掉，那得多花点口舌） */
abbr {
  cursor: help;
}

/* 一致的 del 样式 */
del {
  text-decoration: line-through;
}

address,
caption,
cite,
code,
dfn,
em,
th,
var {
  font-style: normal;
  font-weight: 400;
}


/* 对齐是排版最重要的因素, 别让什么都居中 */
caption,
th {
  text-align: left;
}

q:before,
q:after {
  content: '';
}

/* 统一上标和下标 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
}

:root sub,
:root sup {
  vertical-align: baseline;
  /* for ie9 and other modern browsers */
}

sup {
  top: -0.5em;
}

sub {
  bottom: -0.25em;
}

/* 让链接在 hover 状态下显示下划线 */
a {
  color: #1abc9c;
}

a:hover {
  text-decoration: underline;
}

/* 默认不显示下划线，保持页面简洁 */
ins,
a {
  text-decoration: none;
}

/* 专名号：虽然 u 已经重回 html5 Draft，但在所有浏览器中都是可以使用的，
 * 要做到更好，向后兼容的话，添加 class="typo-u" 来显示专名号
 * 关于 <u> 标签：http://www.whatwg.org/specs/web-apps/current-work/multipage/text-level-semantics.html#the-u-element
 * 被放弃的是 4，之前一直搞错 http://www.w3.org/TR/html401/appendix/changes.html#idx-deprecated
 * 一篇关于 <u> 标签的很好文章：http://html5doctor.com/u-element/
 */
u,
.typo-u {
  text-decoration: underline;
}

/* 标记，类似于手写的荧光笔的作用 */
mark {
  background: #fffdd1;
  padding: 2px;
  margin: 0 5px;
}

/* 代码片断 */
pre,
code,
pre tt {
  font-family: Courier, 'Courier New', monospace;
}

pre {
  background: #f8f8f8;
  border: 1px solid #ddd;
  padding: 1em 1.5em;
  display: block;
  -webkit-overflow-scrolling: touch;
}

/* 一致化 horizontal rule */
hr {
  border: none;
  border-bottom: 1px solid #cfcfcf;
  margin-bottom: 0.8em;
  height: 10px;
}

/* 底部印刷体、版本等标记 */
small,
.typo-small,
/* 图片说明 */
figcaption {
  font-size: 0.9em;
  color: #888;
}

strong,
b {
  font-weight: bold;
}

/* 可拖动文件添加拖动手势 */
[draggable] {
  cursor: move;
}

h1,
h2,
h3,
h4,
h5,
h6 {
  font-family: PingFang SC, Verdana, Helvetica Neue, Microsoft Yahei, Hiragino Sans GB, Microsoft Sans Serif, WenQuanYi Micro Hei, sans-serif;
  font-weight: 100;
  line-height: 1.35;
}

/* Responsive images */
img {
  max-width: 100%;
}
.active-tab-files .info-panel-tab,
.active-tab-outline .info-panel-tab {
    color: var(--active-file-text-color);
}

.file-list-item:hover {
    background: var(--item-hover-bg-color);
    color: var(--item-hover-text-color);
}

.file-node-content:hover {
    background: var(--active-file-bg-color);
    color: var(--active-file-text-color);
}

.ty-search-item-line {
    font-family: var(--font-family);
}

.ty-file-search-match-text {
    background: var(--bg-code-block);
}

/*搜索*/
#file-library-search-input {
    padding-left: 0.4em;
}

.dropdown-menu,
.context-menu.dropdown-menu>li>a:focus {
    background-color: var(--active-bg);
}

.context-menu.dropdown-menu>.active>a,
.context-menu.dropdown-menu>li>a:hover,
.menu-style-btn.active {
    color: var(--primary-color);
}

/* 源代码模式 */
#typora-source {
    background: var(--bg-color);
    color: var(--color-code);
    line-height: 1.5rem;
}

/* notification */
#md-notification {
    border-radius: 5px;
    background: transparent !important;
}

#md-notification::after {
    content: "";
    display: block;
    position: absolute;
    left: 0;
    z-index: -111;
    backdrop-filter: blur(5px);
    top: 0;
    width: 100%;
    min-height: 5rem;
    -webkit-font-smoothing: antialiased;
    transition: opacity 1.2s cubic-bezier(0.77, 0, 0.175, 1);
}

/* focus mode */
.on-focus-mode #top-titlebar,
.on-focus-mode #top-titlebar * {
    background: var(--focus-cont-bg);
}

.on-focus-mode content,
.on-focus-mode #write {
    background: var(--focus-cont-bg);
}

.on-focus-mode .md-focus {
    padding: 1rem;
    box-shadow: var(--focus-shadow);
    background: var(--focus-para-bg);
    background-blend-mode: overlay;
    border-radius: 5px;
}

.megamenu-menu {
    box-shadow: 2px 2px 5px 0 #33333380;
}

.megamenu-menu-list li {
    line-height: 48px;
}

.megamenu-menu-list li a {
    line-height: 48px;
    height: 48px;
}

.megamenu-menu,
#megamenu-menu-list {
    background: #333;
}

.megamenu-menu-list li a.active,
.megamenu-menu-list:not(.saved) li a:hover {
    background: #00000033;
}

/* bugfix */
.megamenu-opened .megamenu-menu {
    left: -1px !important;
}

.megamenu-menu-list .saved #m-saved {
    display: block;
}

.megamenu-content {
    background: var(--bg-color) !important;
}

.megamenu-content h1,
.megamenu-content h2 {
    font-size: 2.5rem;
    margin: 2rem auto;
}

.megamenu-content img {
    box-shadow: none;
}

.megamenu-content .long-btn {
    text-align: left;
}

.megamenu-content #megamenu-section-about tr {
    background: var(--bg-write);
}

.megamenu-content #megamenu-section-theme #theme-preview-grid {
    max-width: 90%;
}

.megamenu-content #megamenu-section-theme #theme-preview-grid .theme-preview-div {
    width: 15rem;
    border: 4px solid #99999950;
}

.megamenu-content #megamenu-section-theme #theme-preview-grid .theme-preview-div:hover {
    border-color: #80aaff80;
}

.megamenu-content #megamenu-section-theme #theme-preview-grid .theme-preview-div .theme-preview-content {
    width: auto;
}

.megamenu-content #megamenu-section-theme #theme-preview-grid .theme-preview-div.active,
.megamenu-content #megamenu-section-theme #theme-preview-grid .theme-preview-div.active:hover {
    border-color: var(--primary-color);
}

.nav-group-item.active {
    background: var(--side-bar-bg-color) !important;
    color: var(--theme-color);
}

#top-titlebar,
#top-titlebar * {
    background-color: var(--bg-color);
    color: var(--color-text);
}

#top-titlebar {
    height: 28px;
    font-family: var(--font-family);
}

::-webkit-scrollbar-corner {
    display: none;
    background: transparent;
}

::-webkit-scrollbar-thumb {
    background: rgba(0, 0, 0, 0.05);
    background-clip: padding-box;
}

[draggable] {
    cursor: pointer;
}

.unibody-window,
.ty-preferences .windows,
uni-preference-panel,
.megamenu-content * :not(.fa) {
    font-family: var(--font-family);
}

#md-searchpanel.searchpanel-replace-mode {
    max-height: 80px;
}

.unibody-window #md-searchpanel .btn {
    line-height: 30px;
}

.cm-s-inner .CodeMirror-cursor {
    border-left: solid var(--color-link) !important;
}

#recent-file-panel tbody tr:nth-child(2n-1) {
    background-color: transparent;
}
/* animation */
#write td,
#megamenu-content td,
.file-list-item,
.megamenu-menu li,
.btn,
.long-btn {
  position: relative;
  overflow: hidden;
}

#write td:after,
#megamenu-content td:after,
.file-list-item:after,
.megamenu-menu li:after,
.btn:after,
.long-btn:after {
  content: "";
  display: block;
  position: absolute;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  pointer-events: none;
  background-image: radial-gradient(circle, #666 10%, transparent 10.01%);
  background-repeat: no-repeat;
  background-position: 50%;
  transform: scale(10, 10);
  opacity: 0;
  transition: transform 0.3s, opacity 0.5s;
}

#write td:active:after,
#megamenu-content td:active:after,
.file-list-item:active:after,
.megamenu-menu li:active:after,
.btn:active:after,
.long-btn:active:after {
  transform: scale(0, 0);
  opacity: 0.3;
  transition: 0s;
}

#typora-sidebar #outline-content .outline-h1>.outline-item,
#typora-sidebar .outline-title-wrapper,
#typora-sidebar .outline-item-wrapper.outline-h1>.outline-item,
#typora-sidebar .file-library-node,
#typora-sidebar .file-library-node .file-node-background,
#typora-sidebar #ty-sidebar-footer .sidebar-footer-item {
  transition: background 0.4s;
}

/* 大纲目录自动编号 */
.sidebar-content {
    counter-reset: h1;
  }
  
  .outline-h1 {
    counter-increment: h1;
    counter-reset: h2;
  }
  
  .outline-h2 {
    counter-increment: h2;
    counter-reset: h3;
  }
  
  .outline-h3 {
    counter-increment: h3;
    counter-reset: h4;
  }
  
  .outline-h4 {
    counter-increment: h4;
    counter-reset: h5;
  }
  
  .outline-h5 {
    counter-increment: h5;
    counter-reset: h6;
  }
  
  .outline-h1>.outline-item>.outline-label:before {
    content: "章"counter(h1) " ";
  }
  
  .outline-h2>.outline-item>.outline-label:before {
    content: "节"counter(h2) " ";
  }
  
  .outline-h3>.outline-item>.outline-label:before {
    content: counter(h3) " ";
  }
  
  .outline-h4>.outline-item>.outline-label:before {
    content: counter(h3) "."counter(h4) " ";
  }
  
  .outline-h5>.outline-item>.outline-label:before {
    content: counter(h3) "."counter(h4) "."counter(h5) " ";
  }
  
  .outline-h6>.outline-item>.outline-label:before {
    counter-increment: h6;
    content: counter(h3) "."counter(h4) "."counter(h5) "."counter(h6) " ";
  }
  
@media screen and (max-width: 600px) {
  #write {
    padding: 2rem;
    line-height: 1.5rem;
  }

  #write h1,
  #write h2 {
    font-size: 1.5rem;
    text-align: left;
  }

  #write h3,
  #write h4,
  #write h5,
  #write h6 {
    font-size: 1rem;
  }

  #write h1,
  #write h2,
  #write h3,
  #write h4,
  #write h5,
  #write h6 {
    margin: 1.5rem 0;
  }

  #write h1:before,
  #write h2:before,
  #write h3:before,
  #write h4:before,
  #write h5:before,
  #write h6:before {
    display: inline;
    border: none;
    top: 0;
    margin-right: 1rem;
    background: none;
    color: var(--theme-color);
  }

  #write h1::after,
  #write h2::after,
  #write h3::after,
  #write h4::after,
  #write h5::after,
  #write h6::after {
    border: none;
  }

  #write h1::before {
    content: "#";
  }

  #write h2::before {
    content: "##";
  }

  #write p+p {
    margin: 1rem auto;
  }

  #write pre.md-fences {
    padding: 1rem;
    box-shadow: none;
  }

  #write blockquote {
    background: var(--bg-quote);
    padding: 1rem;
    border-radius: 0;
    box-shadow: none;
  }

  #write blockquote blockquote {
    padding-left: 1rem;
    margin: 1rem auto;
  }

  #write blockquote em,
  #write blockquote strong,
  #write blockquote mark {
    font-family: var(--font-quota);
  }

  #write blockquote h6:first-child:before {
    left: -1rem;
  }

  #write blockquote h6:first-child span:first-child:before {
    left: -30px;
  }
}

@media screen and (max-width: 800px) {
  .md-toc {
    padding: 0;
    margin: 0 !important;
    max-width: 100%;
  }

  .md-toc::before {
    display: block;
    position: relative;
    left: 0 !important;
    margin-top: 4rem;
    margin-bottom: 0;
    padding: 0;
    background: none;
  }

  .md-toc .md-toc-content {
    top: 0;
    left: 0;
  }

  .md-toc .md-toc-content .md-toc-h1 {
    margin-top: 2rem;
  }
}

@media screen and (max-width: 1000px) {
  #write {
    margin: 0;
  }

  footer.ty-footer {
    background: var(--color-bg);
    border-top: 1px solid var(--color-bg);
  }
}

@media screen and (min-width: 1300px) {
  #write {
    box-shadow: var(--base-shadow);
    border-radius: 5px;
    border: 1px solid rgba(0, 0, 0,0.2);
  }
}

@media print {
  html {
    margin: 0;
    padding: 1cm;
  }

  #write {
    margin: 0;
    padding: 0;
  }

  #write * {
    -webkit-text-stroke: 0px;
  }
}
@media print {

    html,
    body,
    content,
    #write {
        margin: 0;
        padding: 0;
    }

    #write * {
        -webkit-text-stroke: 0px;
    }
}@import url();
@import url();
@import url();
@import url();
@import url();
@import url();

:root {
  --theme-color: hsl(0, 100%, 75%);
  --theme-color-weak: hsl(0, 100%, 95%);
  --color-text: #333;
  --text-color: var(--color-text);
  --color-em: #0d0d0d;
  --color-strong: #0d0d0d;
  --color-weak: #4d4d4d;
  --color-weakest: #808080;
  --md-char-color: var(--theme-color);
  --meta-content-color: var(--theme-color);

  --color-title: var(--color-em);
  --color-title-h1: var(--color-em);
  --color-title-h2: var(--color-em);
  --color-title-h3: var(--color-em);
  --color-title-h4: var(--color-em);
  --color-title-h5: var(--color-em);
  --color-title-h6: var(--color-em);

  --color-quote: var(--color-weak);
  --color-code: var(--color-weak);
  --color-link: var(--theme-color);
  --color-italic: var(--color-em);
  --color-strong: var(--color-strong);
  --color-highlight: var(--color-text);
  --color-strike: var(--color-weakest);
  --color-footnote: var(--color-weakest);

  --thead-color: var(--color-em);
  --tbody-color-opt: var(--color-text);
  --tbody-color: var(--color-text);
  --color-thead-hover: var(--theme-color);
  --color-tbody-hover: var(--theme-color);

  --link-hover-color: #ffb3b3;
  --link-hover-bg: none;

  /* background setting */
  --bg-contents: #ffffff;
  --bg-write: #ffffff;
  --bg-color: var(--bg-contents);
  --bg-title: none;
  --bg-title-h1: none;
  --bg-title-h2: none;
  --bg-title-h3: none;
  --bg-title-h4: none;
  --bg-title-h5: none;
  --bg-title-h6: none;

  --bg-quote: #f7f7f7;
  --bg-code: #ffe5e5;
  --bg-code-block: #f2f2f2;
  --bg-link: none;
  --bg-italic: none;
  --bg-strong: none;
  --bg-highlight: #f2ff80;
  --bg-strike: none;
  --bg-footnote: none;

  --bg-thead: #e8e8e8;
  --bg-tbody-opt: #ededed;
  --bg-tbody: #fcfcfc;
  --bg-thead-hover: var(--bg-contents);
  --bg-tbody-hover: var(--bg-contents);

  --focus-cont-bg: hsl(0, 0%, 95%);
  --focus-para-bg: hsl(0, 0%, 100%);

  --window-border: 1px solid #f2f2f2;
  --base-border: 1px solid #ffb3b3;
  --base-borderl: 4px solid #ffb3b3;
  --base-borderb: 1px dashed #ffb3b3;
  --opt-borderb: 1px dashed #4da0ff;

  /* box-shadow */
  --text-shadow: none;
  --block-shadow: none;
  --img-shadow: 0px 8px 16px 1px #0000004d;
  --block-shadow-opt: var(--block-shadow);
  --block-shadow-weak: 0 8px 16px 0 #0000001a;
  --block-shadow-strong: #00000033 0px 25px 56px 0px, #0000001a 0px 5px 15px 0px;
  --focus-shadow: 0 8px 16px 0 #0000001a;

  /* margin setting:top;right;bottom;left */
  --margin-h1: 2rem auto 3rem;
  --margin-h2: 2rem auto 1rem;
  --margin-h3: 2rem auto 1rem;
  --margin-h4: 2rem auto 1rem;
  --margin-h5: 2rem auto 1rem;
  --margin-h6: 2rem auto 1rem;

  --margin-text: 0.5rem auto;
  --margin-block: 1rem auto;

  /* padding-setting */
  --padding-text: 1px 4px;
  --padding-block: 1rem;

  --base-margin: 1rem auto;
  --base-padding: 1px 4px;
  --opt-padding: 1rem;

  --font-weight: 400;
  --font-size: 1rem;
  --line-height: 1.75rem;
  --font-family: var(--font-hei);

  --text-font: 300 1rem/1.5rem var(--font-hei);
  --text-font-size: 1rem;
  --font-title: var(--font-hei);
  --font-title-h1: 300 3rem/4.5rem var(--font-title);
  --font-title-h2: 300 2rem/3rem var(--font-title);
  --font-title-h3: 600 1.75rem/2.625rem var(--font-title);
  --font-title-h4: 600 1.5rem/2.25rem var(--font-hei);
  --font-title-h5: 600 1.25rem/1.875rem var(--font-hei);
  --font-title-h6: 600 1.25rem/1.875rem var(--font-hei);

  --font-quote: 400 1.2rem/1.8rem var(--font-kai);
  --font-code: 300 0.9rem/1.35rem var(--font-mono);
  --font-footnote: 400 1.1rem/1.65rem var(--font-kai);

  --font-hei: -apple-system, "Raleway Medium", "Noto Sans", "Helvetica Neue", Helvetica, "Nimbus Sans L", Arial, "Liberation Sans", "Noto Sans CJK SC", "PingFang SC", "Hiragino Sans GB", "Source Han Sans SC", "Source Han Sans CN", "Microsoft YaHei", "Wenquanyi Micro Hei", "WenQuanYi Zen Hei", "ST Heiti", SimHei, "WenQuanYi Zen Hei Sharp", sans-serif;
  --font-song: "Lora", Georgia, "Nimbus Roman No9 L", "Noto Serif CJK SC", "Songti SC", "Source Han Serif SC", "Source Han Serif CN", STSong, "AR PL New Sung", "AR PL SungtiL GB", NSimSun, SimSun, "TW\-Sung", "WenQuanYi Bitmap Song", "AR PL UMing CN", "AR PL UMing HK", "AR PL UMing TW", "AR PL UMing TW MBE", PMingLiU, MingLiU, serif;
  --font-kai: "EB Garamond", Baskerville, Georgia, "Liberation Serif", "Kaiti SC", STKaiti, "AR PL UKai CN", "AR PL UKai HK", "AR PL UKai TW", "AR PL UKai TW MBE", "AR PL KaitiM GB", KaiTi, KaiTi_GB2312, DFKai-SB, "TW\-Kai", curve, serif;
  --font-mono: "Cascadia code", Monaco, "Deja Vu Sans Mono", Consolas, "Lucida Console", "Andale Mono", Courier, sans-serif;
  --monospace: var(--font-mono);

  --mermaid-alt-font-family: var(--base-font) !important;
  --mermaid-font-family: var(--base-font) !important;

  --blur-text-color: hsl(0, 100%, 90%);
  --active-file-bg-color: hsl(0, 0%, 90%);
  /* 文件列表 当前文件激活 背景色*/
  --active-file-text-color: hsl(0, 100%, 75%);
  --active-file-border-color: hsl(0, 100%, 75%);
  /* 树形结构下文件激活边框色 */
  --side-bar-bg-color: hsl(0, 0%, 95%);
  /*文件 大纲 侧边栏 背景色*/
  --item-hover-bg-color: hsl(0, 0%, 90%);
  /* 打开文文件夹、正文菜单、最近使用 hover 效果 */
  --item-hover-text-color: hsl(0, 100%, 75%);
  --primary-color: hsl(0, 100%, 75%);
  /* color of primary buttons */
  --primary-btn-border-color: hsl(0, 100%, 75%);
  --primary-btn-text-color: hsl(0, 0%, 100%);
  --select-text-bg-color: hsl(0, 100%, 85%);
  --select-text-font-color: hsl(0, 0%, 100%);
  --active-bg: hsl(0, 0%, 95%);
  --window-border: var(--bg-color);
  --control-text-color: var(--color-title);
  --control-text-hover-color: var(--color-text);
}

html,
body,
content,
#write {
  font-size: 16px;
  font-size: var(--font-size);
  font-weight: var(--font-weight);
  font-family: var(--font-family);
  line-height: var(--line-height);
  background: var(--bg-contents);
  color: var(--color-text);
  text-align: justify;
}

content {
  min-width: 400px;
}

#write {
  background: var(--bg-write);
  max-width: 914px;
  min-width: 400px;
  -webkit-font-smoothing: antialiased;
  min-height: calc(100vh - 6em);
  margin: 2rem auto;
  padding: 2rem;
}

#write * {
  -webkit-text-stroke: 0.25px;
}

/* title setting */

#write h1 *,
#write h2 *,
#write h3 *,
#write h4 *,
#write h5 *,
#write h6 * {
  color: var(--color-title) !important;
  text-decoration: none !important;
  border-bottom: none !important;
}

#write h1,
#write h2 {
  text-transform: uppercase;
}

#write h1 {
  background: var(--bg-title-h1);
  color: var(--color-title-h1);
  font: var(--font-title-h1);
  margin: var(--margin-h1);
}

#write h2 {
  background: var(--bg-title-h2);
  color: var(--color-title-h2);
  font: var(--font-title-h2);
  margin: var(--margin-h2);
}

#write h3 {
  background: var(--bg-title-h3);
  color: var(--color-title-h3);
  font: var(--font-title-h3);
  margin: var(--margin-h3);
}

#write h4 {
  background: var(--bg-title-h4);
  color: var(--color-title-h4);
  font: var(--font-title-h4);
  margin: var(--margin-h4);
}

#write h5 {
  background: var(--bg-title-h5);
  color: var(--color-title-h5);
  font: var(--font-title-h5);
  margin: var(--margin-h5);
}

#write h6 {
  background: var(--bg-title-h6);
  color: var(--color-title-h6);
  font: var(--font-title-h6);
  margin: var(--margin-h6);
}

#write h1::after {
  content: "";
  display: block;
  border-bottom: 1px solid var(--color-link);
  position: relative;
  top: 1rem;
  width: 50%;
}

#write h2 span.md-plain:hover {
  background: linear-gradient(to bottom, transparent 60%, hsl(0, 100%, 95%) 0) no-repeat;
}

h3,
h4,
h5,
h6 {
  position: relative;
}

#write h3:hover::before {
  content: "H3";
}

#write h4:hover::before {
  content: "H4";
}

#write h5:hover::before {
  content: "H5";
}

#write h6:hover::before {
  content: "H6";
}

#write h3:hover::before,
#write h4:hover::before,
#write h5:hover::before,
#write h6:hover::before {
  position: absolute;
  left: -2rem;
  font-size: 0.9rem !important;
  text-align: center;
  vertical-align: middle;
  margin-right: 0.5rem;
  border-radius: 5px;
  color: var(--theme-color);
}


/* block-element setting */

blockquote,
pre.md-fences,
figure>table,
#write img {
  margin: var(--margin-block);
  padding: var(--padding-block);
  border-radius: 5px;
}

p+p {
  margin: var(--margin-text);
  line-height: var(--line-height);
}

ul,
ol {
  margin: var(--base-margin);
  padding-left: 2rem;
}

/* blockquote setting */

blockquote {
  background: var(--bg-quote);
  font: var(--font-quote);
  color: var(--color-quote);
  font-size: 1.2rem;
  box-shadow: var(--block-shadow);
  border: none;
}

blockquote blockquote {
  padding: 0;
  padding-left: 1rem;
  border-left: var(--base-borderl);
  border-radius: 0;
  box-shadow: none;
}

blockquote pre.md-fences {
  box-shadow: none;
}

blockquote p {
  font: var(--font-quote);
  color: var(--color-quote);
  line-height: var(--line-height);
}

blockquote h6 {
  padding-left: 1rem;
  margin: 1rem auto !important;
}

blockquote h6:before {
  top: -15px;
  content: "" !important;
  position: absolute;
  width: 4px;
  height: 60px;
  background: #e16b6b;
  left: -15px;
}

blockquote h6 span:first-child:before {
  content: "!";
  position: absolute;
  left: -25px;
  top: 2px;
  width: 25px;
  height: 25px;
  border-radius: 25px;
  background: var(--theme-color);
  display: block;
  text-align: center;
  font-family: Poppins, sans-serif;
  color: white;
  font-size: large;
  font-weight: 600;
}

blockquote h6 span[md-inline="strong"]:first-child:before {
  content: "i";
  z-index: 1;
  background: #38a3fd;
}

/* list setting */

ul li::marker,
ol li::marker {
  color: hsl(0, 100%, 75%);
}

ul {
  list-style: disc;
}

ul ul {
  list-style: circle;
}

ol {
  list-style: decimal-leading-zero;
}

ol ol {
  list-style: lower-roman;
}

ol ol,
ul ul,
ol ul,
ul ol {
  margin-top: 0.5rem;
}

/* todo list */

.task-list-item input:before {
  content: "";
  position: relative;
  top: -1px;
  left: -5px;
  width: 20px;
  height: 20px;
  display: inline-block;
  vertical-align: middle;
  text-align: center;
  border: var(--base-border);
  background-color: var(--bg-write);
  margin-left: 0;
  margin-top: -0.5rem;
  border-radius: 50%;
  -webkit-transition: background-color 200ms ease-in-out;
  transition: background-color 200ms ease-in-out;
}

.task-list-item input::after {
  content: "";
  position: absolute;
  top: -1px;
  left: -2px;
  width: 1rem;
  height: 0.5rem;
  border: 2px solid #fff;
  border-top: 0;
  border-right: 0;
  -webkit-transform: rotate(-45deg);
  transform: rotate(-45deg);
  opacity: 0;
  -webkit-transition: opacity 200ms ease-in-out;
  transition: opacity 200ms ease-in-out;
}

.task-list-item input:checked::before {
  background: var(--theme-color) !important;
  border: none;
}

.task-list-item input:checked::after {
  opacity: 1;
}

.task-list-item {
  list-style: none;
}

.task-list-item p {
  text-indent: 5px !important;
}

.task-list-item input:checked:before,
.task-list-item input[checked]:before {
  content: " ";
}

.md-task-list-item.task-list-done {
  text-decoration: line-through;
  color: var(--color-footnote);
}

blockquote .task-list-item input::before {
  top: -3px;
}

#write img {
  padding: 0;
  box-shadow: var(--img-shadow);
}

img[alt|="no-shadow"] {
  box-shadow: none !important;
}

img[alt|="normal"] {
  margin: 0 !important;
  box-shadow: none !important;
}

hr {
  border: none;
  border-bottom: var(--base-border);
  margin: 3rem auto;
  height: 1px;
  width: 50%;
}

hr .pb {
  page-break-after: always;
  border-bottom: none;
}

/* inline-element setting */

code,
mark,
kbd,
samp,
tt,
var,
#write a,
strong,
em {
  padding: var(--padding-text);
}

a,
ins {
  background: var(--bg-link);
  color: var(--color-link);
}

#write a,
#write ins {
  text-decoration: none;
  border-bottom: var(--base-borderb);
}

#write a:hover,
#write ins:hover {
  border-bottom-color: var(--color-link);
  color: var(--link-hover-color);
  text-decoration: none;
}

#write strong {
  background: var(--bg-strong);
  color: var(--color-strong);
}

#write em {
  background: var(--bg-italic);
  color: var(--color-italic);
  border-bottom: var(--opt-borderb);
}

em,
strong,
em strong,
strong em {
  font-size: inherit;
}

em strong,
strong em {
  font-weight: 800 !important;
}

del {
  color: var(--color-strike);
  background: var(--bg-strike);
}

#write mark {
  background: var(--bg-highlight);
  color: var(--color-highlight);
}

/* code & code-block setting */

#write pre.md-meta-block,
#write pre.md-fences,
code,
kbd,
samp,
tt,
var {
  font: var(--font-code);
  background: var(--bg-code);
  color: var(--color-code);
  border-radius: 5px;
}

/* 代码块下的标题颜色过深。修改为浅蓝 */
.cm-s-inner .cm-header,
.cm-s-inner.cm-header {
  color: hsl(215, 100%, 75%);
}

.cm-s-inner .CodeMirror-cursors,
.CodeMirror div.CodeMirror-cursor {
  background-color: #ff8080 !important;
  border-left: 2px solid #ff8080 !important;
  width: 2px !important;
}

/* code-block setting */

#write pre.md-meta-block,
#write pre.md-fences {
  font: var(--font-code);
  border-radius: 5px;
  background: var(--bg-code-block);
  color: var(--color-code);
}

pre.md-meta-block {
  min-height: 30px;
  position: sticky;
  margin-top: -1.5rem;
  margin-bottom: 2rem;
}

pre {
  white-space: pre;
}

pre.md-fences {
  display: block;
  -webkit-overflow-scrolling: touch;
  box-shadow: var(--block-shadow);
  white-space: pre;
}

code {
  background-color: var(--bg-code);
  color: var(--color-code);
}

details {
  -webkit-box-shadow: 0 2px 6px rgb(0 0 0%);
  box-shadow: 0 2px 6px rgb(0 0 0%);
  transition: all 0.2s ease;
  border: 1px solid transparent;
  border-radius: 4px;
  padding: 1rem;
  background: var(--bg-quote);
}

/* table setting */

figure.md-table-fig {
  margin-top: 28px;
}

figure>table {
  width: 98%;
}

table th,
table td {
  padding: 0.5rem 1rem;
}

table thead tr {
  background: var(--bg-thead) !important;
}

table th {
  font-weight: 800;
}

table thead tr:hover {
  background: var(--bg-thead-hover) !important;
  color: var(--color-thead-hover);
}

table caption {
  border-bottom: none;
}

table tr {
  background: var(--bg-tbody);
  color: var(--tbody-color);
  border: 1px solid var(--bg-thead);
}

table tr:nth-child(2n) {
  background: var(--bg-tbody-opt);
  color: var(--tbody-color-opt);
}

table tr:hover {
  background: var(--bg-tbody-hover);
  color: var(--color-tbody-hover);
}

table tr,
#write table td,
#write table th {
  border: 1px solid var(--theme-color-weak);
}

/*表格大小设置输入框(数字居中)*/
#write .md-grid-board-wrap input {
  text-align: center !important;
}

/*表格大小设置面板中的方框*/
#write .md-grid-board.md-reset>tbody>tr>td>a {
  border: 1px solid;
  margin: 0px;
}

sup.md-footnote {
  padding: var(--base-padding);
  color: var(--color-footnote);
  cursor: pointer;
  font-size: 0.75rem;
}

.md-meta {
  font-family: var(--font-code);
  color: var(--md-char-color);
}

.md-expand .md-meta.md-before,
.md-expand .md-meta.md-after {
  padding-left: 5px;
  padding-right: 5px;
}

.md-image>.md-meta {
  padding-left: 0.5rem;
  padding-right: 0.5rem;
  color: var(--meta-content-color);
}

.md-image>.md-meta:first-of-type:before {
  padding-left: 4px;
}

.md-image>img {
  margin-top: 2px;
}@import url();
@import url();

:root {
  --theme-color: #ff8080;
  --theme-color-weak: #ffe5e5;
  --color-text: rgba(0, 0, 0, 0.650);
  --text-color: var(--color-text);
  --color-em: rgba(0, 0, 0, 0.650);
  --color-strong: rgba(0, 0, 0, 0.800);
  --color-weak: rgba(17, 17, 17, 0.650);
  --color-weakest: rgba(51, 51, 51, 0.650);
  --color-title: var(--color-em);
  --color-title-h1: var(--color-em);
  --color-title-h2: var(--color-em);
  --color-title-h3: var(--color-em);
  --color-title-h4: var(--color-em);
  --color-title-h5: var(--color-em);
  --color-title-h6: var(--color-em);
  --color-quote: var(--color-weak);
  --color-code: var(--color-weak);
  --color-link: var(--color-weak);
  --color-italic: var(--color-em);
  --color-strong: var(--color-strong);
  --color-highlight: var(--color-text);
  --color-strike: var(--color-weakest);
  --color-footnote: var(--color-weakest);
  --thead-color: var(--color-em);
  --tbody-color-opt: var(--color-text);
  --tbody-color: var(--color-text);
  --color-thead-hover: var(--theme-color);
  --color-tbody-hover: var(--theme-color);
  --link-hover-color: #ffb3b3;
  --link-hover-bg: none;
  /* background setting */
  --bg-contents: #fff;
  --bg-write: #fff;
  --bg-color: var(--bg-contents);
  --bg-title: none;
  --bg-title-h1: none;
  --bg-title-h2: none;
  --bg-title-h3: none;
  --bg-title-h4: none;
  --bg-title-h5: none;
  --bg-title-h6: none;
  --bg-quote: #fff;
  --bg-code: #f2ff80;
  --bg-code-block: #fff;
  --bg-link: none;
  --bg-italic: none;
  --bg-strong: none;
  --bg-highlight: #f2ff80;
  --bg-strike: none;
  --bg-footnote: none;
  --bg-thead: #fff;
  --bg-tbody-opt: #f6f7fa;
  --bg-tbody: #fff;
  --bg-thead-hover: var(--bg-contents);
  --bg-tbody-hover: var(--bg-contents);
  --focus-cont-bg: hsl(0, 0%, 95%);
  --focus-para-bg: hsl(0, 0%, 100%);
  --window-border: 1px solid #333;
  --base-border: 1px solid #333;
  --base-borderl: 4px solid var(--theme-color);
  --base-borderb: 1px dashed var(--theme-color);
  --opt-borderb: 1px dashed var(--theme-color);
  /* box-shadow */
  --text-shadow: none;
  --block-shadow: none;
  --img-shadow: none;
  --block-shadow-opt: var(--block-shadow);
  --block-shadow-weak: none;
  --block-shadow-strong: none;
  /* margin setting:top;right;bottom;left */
  --margin-h1: 2rem auto 3rem;
  --margin-h2: 2rem auto 1rem;
  --margin-h3: 1.5rem auto 1rem;
  --margin-h4: 1.5rem auto 1rem;
  --margin-h5: 1.5rem auto 1rem;
  --margin-h6: 1.5rem auto 1rem;
  --margin-text: 0.5rem 0rem;
  --margin-block: 1rem auto;
  /* padding-setting */
  --padding-text: 0px;
  --padding-block: 0.5rem;
  --base-margin: 0.5rem auto;
  --base-padding: 0px;
  --opt-padding: 0.5rem;
  --font-weight: 400;
  --font-size: 0.95rem;
  --kai-size: 1.05rem;
  --ol-size: 0.95rem;
  --line-height: 1.5rem;
  --font-title-h1: 900 2.2rem/2.6rem var(--font-title-cn);
  --font-title-h2: 800 1.8rem/2.4rem var(--font-title-cn);
  --font-title-h3: 600 1.4rem/2.3rem var(--font-title-cn);
  --font-title-h4: 500 1.3rem/2.2rem var(--font-hei-cn);
  --font-title-h5: 400 1.2rem/1.8rem var(--font-hei-cn);
  --font-title-h6: 400 1.2rem/1.8rem var(--font-hei-cn);
  --font-quote: 400 1.05rem/2.1rem var(--font-quota-cn);
  --font-code: 350 0.95rem/1.6rem var(--font-mono);
  --font-footnote: 400 0.875rem/1.75rem var(--font-kai-cn);
  --font-title-cn: var(--font-song-cn);
  --font-title-jp: var(--font-song-jp);
  --text-font-cn: var(--font-song-cn);
  --text-font-jp: var(--font-song-jp);
  --ol-font-cn: var(--font-song-cn);
  --ol-font-jp: var(--font-song-jp);
  --ul-font-cn: var(--font-song-cn);
  --ul-font-jp: var(--font-song-jp);
  --font-quota-cn: var(--font-kai-cn);
  --font-quota-jp: var(--font-kai-jp);
  --font-hei-cn: "Poppins", "Noto Sans CJK SC", sans-serif;
  --font-hei-jp: "Poppins", "Noto Sans CJK JP", sans-serif;
  --font-song-cn: "Sabon Next LT Pro", "Noto Serif CJK SC", serif;
  --font-song-jp: "Sabon Next LT Pro", "Yu Mincho", serif;
  --font-kai-cn: "EB Garamond", "TW-Kai", serif;
  --font-kai-jp: "EB Garamond", "EPSON 教科書体Ｍ", "TW-Kai", "kaiti", serif;
  --font-mono: "Cascadia Code", "Sarasa Term SC", Monaco, "Deja Vu Sans Mono", Consolas, "Lucida Console", "Andale Mono", Courier, "PingFang SC", "Noto Sans CJK SC";
  --font-fangsong: "Courier New", "方正仿宋_GBK","仿宋";
  --bookmark: url("data:image/svg+xml;utf8,%3Csvg%20width%3D%2220%22%20height%3D%2220%22%20viewBox%3D%220%200%2020%2020%22%20fill%3D%22none%22%20xmlns%3D%22http%3A//www.w3.org/2000/svg%22%3E%0A%3Cpath%20d%3D%22M4%204.5C4%203.11929%205.11929%202%206.5%202H13.5C14.8807%202%2016%203.11929%2016%204.5V17.5C16%2017.6881%2015.8945%2017.8602%2015.7269%2017.9456C15.5593%2018.0309%2015.358%2018.015%2015.2059%2017.9044L10%2014.1183L4.79409%2017.9044C4.64199%2018.015%204.4407%2018.0309%204.27311%2017.9456C4.10553%2017.8602%204%2017.6881%204%2017.5V4.5Z%22%20fill%3D%22%23311b92%22/%3E%0A%3C/svg%3E%0A");
  --light-bulb: url("data:image/svg+xml;utf8,%3Csvg%20width%3D%2220%22%20height%3D%2220%22%20viewBox%3D%220%200%2020%2020%22%20fill%3D%22none%22%20xmlns%3D%22http%3A//www.w3.org/2000/svg%22%3E%0A%3Cpath%20d%3D%22M13.073%2015L12.6891%2016.6051C12.5048%2017.3763%2011.8236%2017.935%2011.0181%2017.9947L10.8748%2018H9.12546C8.30655%2018%207.59%2017.4839%207.34866%2016.7385L7.31108%2016.6047L6.928%2015H13.073Z%22%20fill%3D%22%23b0791b%22/%3E%0A%3Cpath%20d%3D%22M10%202C13.3137%202%2016%204.59693%2016%207.80041C16%209.47737%2015.2546%2011.0164%2013.7961%2012.3942C13.7324%2012.4544%2013.6831%2012.5269%2013.6512%2012.6065L13.6251%2012.6883L13.311%2014H10.5002V9.49707C10.5002%209.22093%2010.2764%208.99707%2010.0002%208.99707C9.7241%208.99707%209.50024%209.22093%209.50024%209.49707V14H6.689L6.37626%2012.6886C6.34955%2012.5766%206.29016%2012.4745%206.20516%2012.3942C4.8153%2011.0819%204.07265%209.62354%204.00507%208.03903L4%207.80041L4.00321%207.60894C4.1077%204.49409%206.75257%202%2010%202ZM9.5%206.50238V7.50391C9.5%207.78005%209.72386%208.00391%2010%208.00391C10.2761%208.00391%2010.5%207.78005%2010.5%207.50391V6.50238C10.5%206.22624%2010.2761%206.00238%2010%206.00238C9.72386%206.00238%209.5%206.22624%209.5%206.50238ZM12.8506%207.44332C12.6553%207.24806%2012.3388%207.24806%2012.1435%207.44332L11.4353%208.15151C11.2401%208.34677%2011.2401%208.66335%2011.4353%208.85861C11.6306%209.05388%2011.9472%209.05388%2012.1424%208.85861L12.8506%208.15043C13.0459%207.95517%2013.0459%207.63858%2012.8506%207.44332ZM7.8521%207.44332C7.65684%207.24806%207.34026%207.24806%207.145%207.44332C6.94973%207.63858%206.94973%207.95517%207.145%208.15043L7.85318%208.85861C8.04844%209.05388%208.36503%209.05388%208.56029%208.85861C8.75555%208.66335%208.75555%208.34677%208.56029%208.15151L7.8521%207.44332Z%22%20fill%3D%22%23b0791b%22/%3E%0A%3C/svg%3E%0A");
  --star: url("data:image/svg+xml;utf8,%3Csvg%20width%3D%2220%22%20height%3D%2220%22%20viewBox%3D%220%200%2020%2020%22%20fill%3D%22none%22%20xmlns%3D%22http%3A//www.w3.org/2000/svg%22%3E%0A%3Cpath%20d%3D%22M9.10433%202.89874C9.47114%202.15549%2010.531%202.1555%2010.8978%202.89874L12.8282%206.81024L17.1448%207.43748C17.9651%207.55666%2018.2926%208.56464%2017.699%209.14317L14.5755%2012.1878L15.3129%2016.487C15.453%2017.3039%2014.5956%2017.9269%2013.8619%2017.5412L10.0011%2015.5114L6.14018%2017.5412C5.40655%2017.9269%204.54913%2017.3039%204.68924%2016.487L5.4266%2012.1878L2.30308%209.14317C1.70956%208.56463%202.03708%207.55666%202.8573%207.43748L7.17389%206.81024L9.10433%202.89874Z%22%20fill%3D%22%23044289%22/%3E%0A%3C/svg%3E%0A");
  --warn: url("data:image/svg+xml;utf8,%3Csvg%20width%3D%2220%22%20height%3D%2220%22%20viewBox%3D%220%200%2020%2020%22%20fill%3D%22none%22%20xmlns%3D%22http%3A//www.w3.org/2000/svg%22%3E%0A%3Cpath%20d%3D%22M8.68569%202.85232L2.12696%2014.7773C1.57714%2015.777%202.30038%2017.0002%203.44129%2017.0002H16.5587C17.6996%2017.0002%2018.4229%2015.777%2017.8731%2014.7773L11.3143%202.85232C10.7444%201.81615%209.25558%201.81616%208.68569%202.85232ZM10%206.75016C10.4142%206.75016%2010.75%207.08595%2010.75%207.50016V11.5002C10.75%2011.9144%2010.4142%2012.2502%2010%2012.2502C9.58579%2012.2502%209.25%2011.9144%209.25%2011.5002V7.50016C9.25%207.08595%209.58579%206.75016%2010%206.75016ZM10.75%2013.7502C10.75%2014.1644%2010.4142%2014.5002%2010%2014.5002C9.58579%2014.5002%209.25%2014.1644%209.25%2013.7502C9.25%2013.3359%209.58579%2013.0002%2010%2013.0002C10.4142%2013.0002%2010.75%2013.3359%2010.75%2013.7502Z%22%20fill%3D%22%238a2a0d%22/%3E%0A%3C/svg%3E%0A");
  --note: url("data:image/svg+xml;utf8,%3Csvg%20width%3D%2220%22%20height%3D%2220%22%20viewBox%3D%220%200%2020%2020%22%20fill%3D%22none%22%20xmlns%3D%22http%3A//www.w3.org/2000/svg%22%3E%0A%3Cpath%20d%3D%22M14%203C15.5977%203%2016.9037%204.24892%2016.9949%205.82373L17%206V10H13L12.8237%2010.0051C11.3072%2010.093%2010.093%2011.3072%2010.0051%2012.8237L10%2013V17H6C4.40232%2017%203.09634%2015.7511%203.00509%2014.1763L3%2014V6C3%204.40232%204.24892%203.09634%205.82373%203.00509L6%203H14ZM16.9007%2011.001C16.8232%2011.2376%2016.7018%2011.459%2016.5416%2011.6528L16.4142%2011.7929L11.7929%2016.4142C11.5687%2016.6384%2011.2968%2016.8039%2011.001%2016.9007L11%2013L11.0055%2012.8507C11.078%2011.8676%2011.8612%2011.0821%2012.8433%2011.006L13%2011L16.9007%2011.001Z%22%20fill%3D%22%23004d40%22/%3E%0A%3C/svg%3E%0A");
}

* {
  -webkit-font-smoothing: "auto";
  -webkit-text-stroke-width: calc(calc(40px - 1em) / 170);
}

html,
body {
  font-size: var(--font-size);
  font-weight: var(--font-weight);
  font-family: var(--text-font-cn);
  line-height: var(--line-height);
  background: var(--bg-contents);
  color: var(--color-text);
}

body {
  background: var(--bg-write);
  -webkit-font-smoothing: antialiased;
  margin: 2rem auto;
  padding: 2rem;
}

h1 *,
h2 *,
h3 *,
h4 *,
h5 *,
h6 * {
  color: var(--color-title) !important;
  text-decoration: none !important;
  border-bottom: none !important;
}

h1 {
  background: var(--bg-title-h1);
  color: var(--color-title-h1);
  font: var(--font-title-h1);
  margin: var(--margin-h1);
  text-transform: capitalize;
}

h1::after {
  content: "";
  display: block;
  border-bottom: 1px solid var(--theme-color);
  position: relative;
  top: 1rem;
  width: 50%;
}

h2 {
  background: var(--bg-title-h2);
  color: var(--color-title-h2);
  font: var(--font-title-h2);
  margin: var(--margin-h2);
  display: table;
  background: linear-gradient(to bottom, transparent 60%, hsl(0, 100%, 95%) 0) no-repeat;
  text-transform: capitalize;
}

h3 {
  background: var(--bg-title-h3);
  color: var(--color-title-h3);
  font: var(--font-title-h3);
  margin: var(--margin-h3);
}

h3:hover::before {
  content: "H3";
}

h4 {
  background: var(--bg-title-h4);
  color: var(--color-title-h4);
  font: var(--font-title-h4);
  margin: var(--margin-h4);
  border-left: var(--base-borderl);
  padding-left: 1rem;
}

h4:hover::before {
  content: "H4";
}

h5 {
  background: var(--bg-title-h5);
  color: var(--color-title-h5);
  font: var(--font-title-h5);
  margin: var(--margin-h5);
}

h5:hover::before {
  content: "H5";
}

h6 {
  background: var(--bg-title-h6);
  color: var(--color-title-h6);
  font: var(--font-title-h6);
  margin: var(--margin-h6);
}

h3,
h4,
h5,
h6 {
  position: relative;
}

h3:hover::before,
h4:hover::before,
h5:hover::before,
h6:hover::before {
  position: absolute;
  left: -2rem;
  font-size: 0.9rem !important;
  text-align: center;
  vertical-align: middle;
  margin-right: 0.5rem;
  border-radius: 5px;
  color: var(--theme-color);
}

blockquote,
pre,
table,
img {
  margin: var(--margin-block);
  padding: var(--padding-block);
  border-radius: 5px;
}

p {
  margin: var(--margin-text);
  line-height: var(--line-height);
}

p:not(li p) {
  text-indent: 2rem;
}

blockquote {
  background: var(--bg-quote);
  font: var(--font-quote);
  font-size: var(--kai-size);
  color: var(--color-quote);
  box-shadow: var(--block-shadow);
  border: var(--opt-borderb);
  counter-reset: section;
}

blockquote blockquote {
  padding: 0;
  border: none;
  padding-left: 1rem;
  border-left: var(--base-borderl);
  border-radius: 0;
  box-shadow: none;
}

blockquote p {
  margin: 0.5rem 0;
}

blockquote ul {
  font-size: 1rem;
}

blockquote li {
  font-size: var(--text-font-size);
}

blockquote em {
  font-family: var(--font-kai-jp);
}

blockquote h1,
blockquote h2,
blockquote h3,
blockquote h4,
blockquote h5 {
  background: var(--bg-title-h6);
  color: var(--color-title-h6);
  font: var(--font-title-h6);
  font-family: var(--font-hei-cn);
  font-weight: bold;
  margin: var(--margin-h6);
  text-align: center;
  margin: 0.5rem auto !important;
  color: var(--theme-color);
  border: none;
}

blockquote h2::before,
blockquote h3::before,
blockquote h4::before,
blockquote h5::before {
  padding-right: 1rem;
  background-repeat: no-repeat;
  vertical-align: middle;
  content: " ";
  width: 20px;
  height: 20px;
  display: inline-block;
}

blockquote h1::after {
  border-bottom: none;
}

blockquote h2 {
  color: #b0791b;
}

blockquote h2::before {
  background-image: var(--light-bulb);
}

blockquote h3 {
  color: #311b92;
}

blockquote h3::before {
  background-image: var(--bookmark);
}

blockquote h4 {
  color: #044289;
}

blockquote h4::before {
  background-image: var(--star);
}

blockquote h5 {
  color: #004d40;
}

blockquote h5::before {
  background-image: var(--note);
}

blockquote h6 {
  font-family: "975 朦胧黑体";
  font-size: x-large;
  font-weight: 400;
}

blockquote h6::before {
  background: none;
  position: relative;
  counter-increment: section;
  content: counter(section)!important;
  padding-right: 2rem;
  font-family: "Atilla";
  font-size: xx-large;
  left: 0;
  top: 0;
}

ul li::marker,
ol li::marker {
  font-variant-numeric: tabular-nums;
  font-variant-numeric: slashed-zero;
  color: var(--theme-color);
}

ul {
  list-style: disc;
}

ul li {
  font-family: var(--ul-font-cn);
}

ul li::marker {
  font-family: Arial, Helvetica, sans-serif;
  font-size: 14pt;
}

ul em {
  font-family: var(--text-font-jp);
}

ul img {
  padding: 0;
  box-shadow: var(--img-shadow);
}

ul ul {
  list-style: square;
}

ul ul ul {
  list-style: circle;
}

ol {
  list-style: decimal-leading-zero;
}

ol em {
  font-family: var(--ol-font-jp);
}

ol ol {
  list-style: lower-latin;
}

ol ol ol {
  list-style: lower-roman;
}

ol li,
ul ol li {
  font-family: var(--ol-font-cn);
  font-size: var(--ol-size);
}

img {
  margin: 0.5rem auto;
}

p img {
  margin-left: -2rem;
}

img[alt~="no-shadow"] {
  box-shadow: none !important;
}

img[alt~="normal"] {
  margin: 0 !important;
  box-shadow: none !important;
}

img[alt~="25%"] {
  height: 25%;
  width: 25%;
}

img[alt~="50%"] {
  height: 50%;
  width: 50%;
}

img[alt~="75%"] {
  height: 75%;
  width: 75%;
}

img[alt~="85%"] {
  height: 85%;
  width: 85%;
}

img[alt~="95%"] {
  height: 95%;
  width: 95%;
}

figure {
  text-align: center;
}

body {
  counter-reset: section;
}

h2 {
  counter-increment: section;
  counter-reset: subsection;
}

figcaption {
  font-family: var(--font-fangsong);
  text-align: center;
  counter-increment: subsection;
}

figcaption:before {
  content: "Section "counter(section) "."counter(subsection) " ";
}

hr {
  border: none;
  border-bottom: var(--base-border);
  margin: 3rem auto;
  height: 1px;
  width: 50%;
}

hr.pb {
  border-bottom: none;
  page-break-after: always;
}

code,
mark,
kbd,
samp,
tt,
var,
a,
strong,
em {
  padding: var(--padding-text);
}

#write a {
  background: var(--bg-link);
  color: var(--color-link);
  text-decoration: none;
  border-bottom: var(--base-borderb);
}

#write a:hover {
  border-bottom-color: var(--color-link);
  color: var(--link-hover-color);
  text-decoration: none;
}

a[href^="http://"]:after {
  content: " ("attr(href) ") ";
}

strong {
  background: var(--bg-strong);
  color: var(--color-strong);
}

em {
  background: var(--bg-italic);
  color: var(--color-italic);
  font-style: normal;
  font-family: var(--text-font-jp);
}

strong,
em strong,
strong em {
  font-weight: 800 !important;
  font-style: normal;
  font-family: inherit;
}

del,
s {
  color: var(--color-strike);
  background: var(--bg-strike);
  display: none;
}

mark {
  font: var(--font-highlight);
  background: var(--bg-highlight);
  color: var(--color-highlight);
}

samp {
  font-family: var(--font-fangsong);
}

ins,
div.kpt,
div.practice {
  display: block;
  border-left: 4px solid red;
  margin: 1rem auto;
  padding: 0.5rem;
  text-decoration: none;
}

ins {
  background: hsl(0, 100%, 95%);
}

div.kpt {
  background: #f6f7fa;
}

div.practice {
  background: none;
  padding-left: 1rem;
  font-size: 1.1rem;
  font-weight: 600;
}

code,
tt,
kbd,
var {
  font: var(--font-code);
  background: var(--bg-code);
  color: var(--color-code);
  border-radius: 5px;
}

tt {
  color: var(--theme-color);
}

var {
  background-color: hsl(222, 100%, 70%);
  padding: 4px;
  border-radius: 0;
}

code {
  background-color: var(--bg-code);
  color: var(--color-code) !important;
}

kbd {
  background-color: #111;
  color: #fff;
  font-size: small;
  padding: 2px;
}

details {
  -webkit-box-shadow: 5px 5px 5px 0px #ffe5e5;
  box-shadow: 5px 5px 5px 0px #ffe5e5;
  transition: all 0.2s ease;
  border: 1px solid transparent;
  border-radius: 4px;
  padding: 1rem;
  margin: 1.5rem auto;
  background: var(--bg-quote);
}

div.intro {
  font-family: var(--font-kai-cn);
}

div.intro em {
  font-family: var(--font-kai-jp) !important;
}

div.intro p {
  font-size: large;
}

ruby {
  font-family: var(--font-kai-cn) !important;
  font-size: large;
}

em ruby,
em rt {
  font-family: var(--font-kai-jp) !important;
}

div.ptb tr {
  border: 1px solid #fff;
}

div.ptb tr:nth-child(2n) {
  background: #fff;
}

div.ptb tr,
div.ptb td,
div.ptb th {
  border: 1px solid #fff;
}

table {
  width: 100%;
  border-collapse: collapse;
}

table caption {
  border-bottom: none;
}

table th {
  font-weight: 800;
}

table th,
table td {
  padding: 0.5rem 1rem;
  background: transparent;
}

table td {
  white-space: nowrap;
}

table tr,
table td,
table th {
  border-left: 1px solid var(--theme-color-weak);
}

table thead tr {
  text-align: left;
  background: var(--bg-thead);
}

table thead tr:hover {
  background: var(--bg-thead-hover);
  color: var(--color-thead-hover);
}

table tr {
  background: var(--bg-tbody);
  color: var(--tbody-color);
  border: 1px solid var(--theme-color-weak);
}

table tr:nth-child(2n) {
  background: var(--bg-tbody-opt);
  color: var(--tbody-color-opt);
}

table tr:hover {
  background: var(--bg-tbody-hover);
  color: var(--color-tbody-hover);
}

@media print {

  html,
  body {
    margin: 0;
    padding: 0;
  }

  @page {
    size: A4;
    margin-top: 10mm;
    margin-bottom: 5mm;
    margin-right: 5mm;
  }

  * {
    -webkit-text-stroke: 0px;
  }

  :root {
    --font-size: 11pt;
    --kai-size: 12pt;
    --line-height: 17pt;
    --font-title-h1: 900 2.2rem/2.6rem var(--font-title-cn);
    --font-title-h2: 800 1.8rem/2.4rem var(--font-title-cn);
    --font-title-h3: 600 1.4rem/2.3rem var(--font-title-cn);
    --font-title-h4: 500 1.3rem/2.2rem var(--font-hei-cn);
    --font-title-h5: 400 1.2rem/1.8rem var(--font-hei-cn);
    --font-title-h6: 400 1.2rem/1.8rem var(--font-hei-cn);
    --font-quote: 400 1.05rem/2.1rem var(--font-quota-cn);
    --font-code: 350 0.95rem/1.6rem var(--font-mono);
    --font-footnote: 400 10.5pt/21pt var(--font-kai-cn);
  }
}

 :root {--mermaid-font-zoom:1em ;} 
</style><title>算法 学习笔记</title>
</head>
<body class='typora-export os-windows'><div class='typora-export-content'>
<div id='write'  class=''><h2 id='算法-学习笔记'><span>算法 学习笔记</span></h2><h3 id='遍历法'><span>遍历法</span></h3><h4 id='双指针'><span>双指针</span></h4><h5 id='141环形链表----快慢指针'><span>141.环形链表    (快慢指针)</span></h5><p><span>给定一个链表，判断链表中是否有环。如果链表中有某个节点，可以通过连续跟踪 next 指针再次到达，则链表中存在环。 为了表示给定链表中的环，我们使用整数 </span><code>pos</code><span> 来表示链表尾连接到链表中的位置（索引从 0 开始）。 如果 </span><code>pos</code><span> 是 -1，则在该链表中没有环。注意：</span><code>pos</code><span> 不作为参数进行传递，仅仅是为了标识链表的实际情况。如果链表中存在环，则返回 </span><code>true</code><span> 。 否则，返回 </span><code>false</code><span> 。</span></p><pre class="md-fences md-end-block ty-contain-cm modeLoaded" spellcheck="false" lang="python"><div class="CodeMirror cm-s-inner cm-s-null-scroll CodeMirror-wrap" lang="python"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 10px; left: 4px;"><textarea autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" style="position: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; outline: none;"></textarea></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1"><div class="CodeMirror-sizer" style="margin-left: 0px; margin-bottom: 0px; border-right-width: 0px; padding-right: 0px; padding-bottom: 0px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines" role="presentation"><div role="presentation" style="position: relative; outline: none;"><div class="CodeMirror-measure"></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-code" role="presentation" style="text-rendering: auto;"><div class="CodeMirror-activeline" style="position: relative;"><div class="CodeMirror-activeline-background CodeMirror-linebackground"></div><div class="CodeMirror-gutter-background CodeMirror-activeline-gutter" style="left: 0px; width: 0px;"></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-keyword">class</span> <span class="cm-def">Solution</span>:</span></pre></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp;<span class="cm-keyword">def</span> <span class="cm-def">hasCycle</span>(<span class="cm-variable-2">self</span>, <span class="cm-variable">head</span>: <span class="cm-variable">ListNode</span>) <span class="cm-operator">-&gt;</span> <span class="cm-builtin">bool</span>:</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">if</span> <span class="cm-keyword">not</span> <span class="cm-variable">head</span> <span class="cm-keyword">or</span> <span class="cm-keyword">not</span> <span class="cm-variable">head</span>.<span class="cm-property">next</span>:</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">return</span> <span class="cm-keyword">False</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable">fast</span> = <span class="cm-variable">slow</span> = <span class="cm-variable">head</span> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-comment"># 创建 fast 和 slow 两个指针</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">while</span> <span class="cm-variable">fast</span> <span class="cm-keyword">and</span> <span class="cm-variable">fast</span>.<span class="cm-property">next</span>: &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="cm-comment"># 每次循环，fast指针走两步，slow走一步</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable">fast</span> = <span class="cm-variable">fast</span>.<span class="cm-property">next</span>.<span class="cm-property">next</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable">slow</span> = <span class="cm-variable">slow</span>.<span class="cm-property">next</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">if</span> <span class="cm-variable">fast</span> == <span class="cm-variable">slow</span>: &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-comment"># 如果某次循环中两指针相遇，则说明存在闭环</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">return</span> <span class="cm-keyword">True</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">return</span> <span class="cm-keyword">False</span></span></pre></div></div></div></div></div><div style="position: absolute; height: 0px; width: 1px; border-bottom: 0px solid transparent; top: 264px;"></div><div class="CodeMirror-gutters" style="display: none; height: 264px;"></div></div></div></pre><h5 id='881救生艇-对撞指针）'><span>881.救生艇 （对撞指针）</span></h5><p><span>第 </span><code>i</code><span> 个人的体重为 </span><code>people[ i ]</code><span>，每艘船可以承载的最大重量为 </span><code>limit</code><span>。每艘船最多可同时载两人，但条件是这些人的重量之和最多为 </span><code>limit</code><span>。返回载到每一个人所需的最小船数。(保证每个人都能被船载)。 </span></p><pre class="md-fences md-end-block ty-contain-cm modeLoaded" spellcheck="false" lang="python" style="break-inside: unset;"><div class="CodeMirror cm-s-inner cm-s-null-scroll CodeMirror-wrap" lang="python"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 10px; left: 4px;"><textarea autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" style="position: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; outline: none;"></textarea></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1"><div class="CodeMirror-sizer" style="margin-left: 0px; margin-bottom: 0px; border-right-width: 0px; padding-right: 0px; padding-bottom: 0px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines" role="presentation"><div role="presentation" style="position: relative; outline: none;"><div class="CodeMirror-measure"><pre><span>xxxxxxxxxx</span></pre></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-code" role="presentation" style="text-rendering: auto;"><div class="CodeMirror-activeline" style="position: relative;"><div class="CodeMirror-activeline-background CodeMirror-linebackground"></div><div class="CodeMirror-gutter-background CodeMirror-activeline-gutter" style="left: 0px; width: 0px;"></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-keyword">class</span> <span class="cm-def">Solution</span>:</span></pre></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp;<span class="cm-keyword">def</span> <span class="cm-def">numRescueBoats</span>(<span class="cm-variable-2">self</span>, <span class="cm-variable">people</span>: <span class="cm-variable">List</span>[<span class="cm-builtin">int</span>], <span class="cm-variable">limit</span>: <span class="cm-builtin">int</span>) <span class="cm-operator">-&gt;</span> <span class="cm-builtin">int</span>:</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable">a</span>=<span class="cm-builtin">sorted</span>(<span class="cm-variable">people</span>)</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-comment">#对list中的元素进行排序，也可以用people.sort(),时间复杂度为O(NlogN) </span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable">nums</span>=<span class="cm-number">0</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable">i</span> , <span class="cm-variable">j</span>=<span class="cm-number">0</span>, <span class="cm-builtin">len</span>(<span class="cm-variable">people</span>)<span class="cm-operator">-</span><span class="cm-number">1</span> &nbsp; <span class="cm-comment">#建立前后两个指针</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">while</span> <span class="cm-variable">i</span><span class="cm-operator">&lt;</span><span class="cm-variable">j</span>:</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">if</span> <span class="cm-variable">a</span>[<span class="cm-variable">i</span>]<span class="cm-operator">+</span><span class="cm-variable">a</span>[<span class="cm-variable">j</span>]<span class="cm-operator">&lt;</span>= <span class="cm-variable">limit</span>: &nbsp; <span class="cm-comment">#两指针同时向中间靠拢</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable">nums</span>+=<span class="cm-number">1</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable">i</span>+=<span class="cm-number">1</span> </span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable">j</span>-=<span class="cm-number">1</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">else</span> :</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable">j</span>-=<span class="cm-number">1</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">return</span> <span class="cm-variable">nums</span><span class="cm-operator">+</span>(<span class="cm-builtin">len</span>(<span class="cm-variable">people</span>)<span class="cm-operator">-</span><span class="cm-number">2</span><span class="cm-operator">*</span><span class="cm-variable">nums</span>)</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; </span></pre></div></div></div></div></div><div style="position: absolute; height: 0px; width: 1px; border-bottom: 0px solid transparent; top: 360px;"></div><div class="CodeMirror-gutters" style="display: none; height: 360px;"></div></div></div></pre><hr /><h4 id='二分查找法'><span>二分查找法</span></h4><p><span>二分查找法需要记好三个遍历关键点，熟练套用公式解题</span></p><h5 id='704二分查找'><span>704.二分查找</span></h5><p><span>给定一个 n 个元素有序的（升序）整型数组 </span><code>nums</code><span> 和一个目标值 </span><code>target</code><span>  ，写一个函数搜索 </span><code>nums</code><span> 中的 </span><code>target</code><span>，如果目标值存在返回下标，否则返回 -1。</span></p><pre class="md-fences md-end-block ty-contain-cm modeLoaded" spellcheck="false" lang="python" style="break-inside: unset;"><div class="CodeMirror cm-s-inner cm-s-null-scroll CodeMirror-wrap" lang="python"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 10px; left: 4px;"><textarea autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" style="position: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; outline: none;"></textarea></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1"><div class="CodeMirror-sizer" style="margin-left: 0px; margin-bottom: 0px; border-right-width: 0px; padding-right: 0px; padding-bottom: 0px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines" role="presentation"><div role="presentation" style="position: relative; outline: none;"><div class="CodeMirror-measure"><span><span>​</span>x</span></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-code" role="presentation" style="text-rendering: auto;"><div class="CodeMirror-activeline" style="position: relative;"><div class="CodeMirror-activeline-background CodeMirror-linebackground"></div><div class="CodeMirror-gutter-background CodeMirror-activeline-gutter" style="left: 0px; width: 0px;"></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-keyword">class</span> <span class="cm-def">Solution</span>: &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="cm-comment">#【写法2】</span></span></pre></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp;<span class="cm-keyword">def</span> <span class="cm-def">search</span>(<span class="cm-variable-2">self</span>, <span class="cm-variable">nums</span>: <span class="cm-variable">List</span>[<span class="cm-builtin">int</span>], <span class="cm-variable">target</span>: <span class="cm-builtin">int</span>) <span class="cm-operator">-&gt;</span> <span class="cm-builtin">int</span>:</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable">l</span>=<span class="cm-number">0</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable">r</span>= <span class="cm-builtin">len</span>(<span class="cm-variable">nums</span>)<span class="cm-operator">-</span><span class="cm-number">1</span> &nbsp; &nbsp;<span class="cm-comment">#若左闭右开，改为 r = len(nums) 【写法1】</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">while</span> <span class="cm-variable">l</span> <span class="cm-operator">&lt;</span>= <span class="cm-variable">r</span>: &nbsp; &nbsp; &nbsp; &nbsp; <span class="cm-comment">#改为l &lt; r </span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable">m</span>=(<span class="cm-variable">l</span><span class="cm-operator">+</span><span class="cm-variable">r</span>)<span class="cm-operator">//</span><span class="cm-number">2</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">if</span> <span class="cm-variable">nums</span>[<span class="cm-variable">m</span>]<span class="cm-operator">&gt;</span><span class="cm-variable">target</span>:</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable">r</span>=<span class="cm-variable">m</span><span class="cm-operator">-</span><span class="cm-number">1</span> &nbsp; &nbsp; &nbsp; &nbsp; <span class="cm-comment">#改为 r = m </span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">elif</span> <span class="cm-variable">nums</span>[<span class="cm-variable">m</span>] <span class="cm-operator">&lt;</span> <span class="cm-variable">target</span>:</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable">l</span>=<span class="cm-variable">m</span><span class="cm-operator">+</span><span class="cm-number">1</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">else</span>:</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">return</span> <span class="cm-variable">m</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">return</span> <span class="cm-operator">-</span><span class="cm-number">1</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp;<span class="cm-comment"># 分析：由于//的运算机制问题，左边边界始终为闭，不管右边是开是闭，始终不影响左边界的值，输出时以左边界为准即可</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp;<span class="cm-comment">#  写法1为左闭右开的结构，结束循环时l=r，且nums[l] 的输出总是一个大于目标值的数，nums[l-1]总是一个小于目标值的数。（此方法优先考虑）</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp;<span class="cm-comment">#  写法2为双边闭合结构，结束循环时为 l=r的下一次循环，nums[l]为大于目标值的数，nums[r]为小于目标值的数。</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span cm-text="" cm-zwsp="">
</span></span></pre></div></div></div></div></div><div style="position: absolute; height: 0px; width: 1px; border-bottom: 0px solid transparent; top: 456px;"></div><div class="CodeMirror-gutters" style="display: none; height: 456px;"></div></div></div></pre><h5 id='162寻找峰值'><span>162.寻找峰值</span></h5><p><span>峰值元素是指其值大于左右相邻值的元素。给你一个输入数组 nums，找到峰值元素并返回其索引。数组可能包含多个峰值，在这种情况下，返回 任何一个峰值 所在位置即可。你可以假设 nums[-1] = nums[n] = -∞ 。且相邻两个数的值不相等！</span></p><pre class="md-fences md-end-block ty-contain-cm modeLoaded" spellcheck="false" lang="python"><div class="CodeMirror cm-s-inner cm-s-null-scroll CodeMirror-wrap" lang="python"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 10px; left: 4px;"><textarea autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" style="position: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; outline: none;"></textarea></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1"><div class="CodeMirror-sizer" style="margin-left: 0px; margin-bottom: 0px; border-right-width: 0px; padding-right: 0px; padding-bottom: 0px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines" role="presentation"><div role="presentation" style="position: relative; outline: none;"><div class="CodeMirror-measure"><pre><span>xxxxxxxxxx</span></pre></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-code" role="presentation" style="text-rendering: auto;"><div class="CodeMirror-activeline" style="position: relative;"><div class="CodeMirror-activeline-background CodeMirror-linebackground"></div><div class="CodeMirror-gutter-background CodeMirror-activeline-gutter" style="left: 0px; width: 0px;"></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-keyword">class</span> <span class="cm-def">Solution</span>:</span></pre></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp;<span class="cm-keyword">def</span> <span class="cm-def">findPeakElement</span>(<span class="cm-variable-2">self</span>, <span class="cm-variable">nums</span>: <span class="cm-variable">List</span>[<span class="cm-builtin">int</span>]) <span class="cm-operator">-&gt;</span> <span class="cm-builtin">int</span>:</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable">nums</span>.<span class="cm-property">append</span>(<span class="cm-operator">-</span><span class="cm-builtin">float</span>(<span class="cm-string">"inf"</span>)) &nbsp; <span class="cm-comment">#注意这里！</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable">lo</span>, <span class="cm-variable">hi</span> = <span class="cm-number">0</span>, <span class="cm-builtin">len</span>(<span class="cm-variable">nums</span>) <span class="cm-operator">-</span> <span class="cm-number">1</span> &nbsp; &nbsp; &nbsp; </span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-comment">#由于nums[n]= - inf ,所以肯定不纳入范围，实际上还是两边都是闭</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">while</span> <span class="cm-variable">lo</span> <span class="cm-operator">&lt;</span> <span class="cm-variable">hi</span>:</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable">mid</span> = (<span class="cm-variable">lo</span> <span class="cm-operator">+</span> <span class="cm-variable">hi</span>) <span class="cm-operator">//</span> <span class="cm-number">2</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">if</span> <span class="cm-variable">nums</span>[<span class="cm-variable">mid</span>] <span class="cm-operator">&lt;</span> <span class="cm-variable">nums</span>[<span class="cm-variable">mid</span> <span class="cm-operator">+</span> <span class="cm-number">1</span>]:</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable">lo</span> = <span class="cm-variable">mid</span> <span class="cm-operator">+</span> <span class="cm-number">1</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">else</span>:</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable">hi</span> = <span class="cm-variable">mid</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">return</span> <span class="cm-variable">lo</span> </span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp;  <span class="cm-tab" role="presentation" cm-text="	">    </span><span class="cm-comment">#二分查找时间复杂度都是 O(nlogn）</span></span></pre></div></div></div></div></div><div style="position: absolute; height: 0px; width: 1px; border-bottom: 0px solid transparent; top: 312px;"></div><div class="CodeMirror-gutters" style="display: none; height: 312px;"></div></div></div></pre><h5 id='74搜索二维矩阵二维数组二分法）'><span>74.搜索二维矩阵（二维数组二分法）</span></h5><p><span>编写一个高效的算法来判断 m x n 矩阵中，是否存在一个目标值。该矩阵具有如下特性：</span></p><ul><li><span>每行中的整数从左到右按升序排列。</span></li><li><span>每行的第一个整数大于前一行的最后一个整数。</span></li></ul><pre class="md-fences md-end-block ty-contain-cm modeLoaded" spellcheck="false" lang="python" style="break-inside: unset;"><div class="CodeMirror cm-s-inner cm-s-null-scroll CodeMirror-wrap" lang="python"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 10px; left: 4px;"><textarea autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" style="position: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; outline: none;"></textarea></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1"><div class="CodeMirror-sizer" style="margin-left: 0px; margin-bottom: 0px; border-right-width: 0px; padding-right: 0px; padding-bottom: 0px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines" role="presentation"><div role="presentation" style="position: relative; outline: none;"><div class="CodeMirror-measure"><pre><span>xxxxxxxxxx</span></pre></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-code" role="presentation" style="text-rendering: auto;"><div class="CodeMirror-activeline" style="position: relative;"><div class="CodeMirror-activeline-background CodeMirror-linebackground"></div><div class="CodeMirror-gutter-background CodeMirror-activeline-gutter" style="left: 0px; width: 0px;"></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-keyword">class</span> <span class="cm-def">Solution</span>:</span></pre></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp;<span class="cm-keyword">def</span> <span class="cm-def">searchMatrix</span>(<span class="cm-variable-2">self</span>, <span class="cm-variable">matrix</span>: <span class="cm-variable">List</span>[<span class="cm-variable">List</span>[<span class="cm-builtin">int</span>]], <span class="cm-variable">target</span>: <span class="cm-builtin">int</span>) <span class="cm-operator">-&gt;</span> <span class="cm-builtin">bool</span>:</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable">m</span> = <span class="cm-builtin">len</span>(<span class="cm-variable">matrix</span>)</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable">n</span> = <span class="cm-builtin">len</span>(<span class="cm-variable">matrix</span>[<span class="cm-number">0</span>])</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable">l</span>,<span class="cm-variable">r</span>=<span class="cm-number">0</span>, <span class="cm-variable">m</span><span class="cm-operator">*</span><span class="cm-variable">n</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">while</span> <span class="cm-variable">l</span><span class="cm-operator">&lt;</span><span class="cm-variable">r</span> :</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable">mi</span> = (<span class="cm-variable">l</span><span class="cm-operator">+</span><span class="cm-variable">r</span>)<span class="cm-operator">//</span><span class="cm-number">2</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">if</span> <span class="cm-variable">matrix</span>[(<span class="cm-variable">mi</span><span class="cm-operator">//</span><span class="cm-variable">n</span>)][<span class="cm-variable">mi</span> <span class="cm-operator">%</span> <span class="cm-variable">n</span>] == <span class="cm-variable">target</span>:</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">return</span> <span class="cm-keyword">True</span> &nbsp; </span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">elif</span> <span class="cm-variable">matrix</span>[(<span class="cm-variable">mi</span><span class="cm-operator">//</span><span class="cm-variable">n</span>)][<span class="cm-variable">mi</span> <span class="cm-operator">%</span> <span class="cm-variable">n</span>] <span class="cm-operator">&gt;</span> <span class="cm-variable">target</span>:</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable">r</span> = <span class="cm-variable">mi</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">else</span>:</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable">l</span> = <span class="cm-variable">mi</span><span class="cm-operator">+</span><span class="cm-number">1</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">return</span> <span class="cm-keyword">False</span></span></pre></div></div></div></div></div><div style="position: absolute; height: 0px; width: 1px; border-bottom: 0px solid transparent; top: 336px;"></div><div class="CodeMirror-gutters" style="display: none; height: 336px;"></div></div></div></pre><hr /><h4 id='滑动窗口法'><span>滑动窗口法</span></h4><p><span>处理连续几个数的问题</span></p><h5 id='209长度最小的子数组基于双指针实现的滑动窗口）'><span>209.长度最小的子数组（基于双指针实现的滑动窗口）</span></h5><p><span>给定一个含有 n 个正整数的数组和一个正整数 </span><code>target</code><span> 。</span></p><p><span>找出该数组中满足其和 ≥ target 的长度最小的 连续子数组</span><code>[numsl, numsl+1, ..., numsr-1, numsr]</code><span> ，并返回其长度。如果不存在符合条件的子数组，返回 </span><code>0</code><span> 。</span></p><pre class="md-fences md-end-block ty-contain-cm modeLoaded" spellcheck="false" lang="python" style="break-inside: unset;"><div class="CodeMirror cm-s-inner cm-s-null-scroll CodeMirror-wrap" lang="python"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 10px; left: 4px;"><textarea autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" style="position: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; outline: none;"></textarea></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1"><div class="CodeMirror-sizer" style="margin-left: 0px; margin-bottom: 0px; border-right-width: 0px; padding-right: 0px; padding-bottom: 0px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines" role="presentation"><div role="presentation" style="position: relative; outline: none;"><div class="CodeMirror-measure"><pre><span>xxxxxxxxxx</span></pre></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-code" role="presentation" style="text-rendering: auto;"><div class="CodeMirror-activeline" style="position: relative;"><div class="CodeMirror-activeline-background CodeMirror-linebackground"></div><div class="CodeMirror-gutter-background CodeMirror-activeline-gutter" style="left: 0px; width: 0px;"></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-keyword">class</span> <span class="cm-def">Solution</span>:</span></pre></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp;<span class="cm-keyword">def</span> <span class="cm-def">minSubArrayLen</span>(<span class="cm-variable-2">self</span>, <span class="cm-variable">target</span>: <span class="cm-builtin">int</span>, <span class="cm-variable">nums</span>: <span class="cm-variable">List</span>[<span class="cm-builtin">int</span>]) <span class="cm-operator">-&gt;</span> <span class="cm-builtin">int</span>:</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable">i</span>,<span class="cm-variable">j</span>=<span class="cm-number">0</span>,<span class="cm-number">0</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable">total</span>=<span class="cm-number">0</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable">result</span>=<span class="cm-builtin">len</span>(<span class="cm-variable">nums</span>)<span class="cm-operator">+</span><span class="cm-number">1</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">while</span> <span class="cm-variable">j</span><span class="cm-operator">&lt;</span> <span class="cm-builtin">len</span>(<span class="cm-variable">nums</span>):</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable">total</span>+= <span class="cm-variable">nums</span>[<span class="cm-variable">j</span>]</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable">j</span>+=<span class="cm-number">1</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">while</span> <span class="cm-variable">total</span> <span class="cm-operator">&gt;</span>= <span class="cm-variable">target</span> :</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable">result</span> = <span class="cm-builtin">min</span>(<span class="cm-variable">result</span>,<span class="cm-variable">j</span><span class="cm-operator">-</span><span class="cm-variable">i</span>)</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable">total</span> =<span class="cm-variable">total</span> <span class="cm-operator">-</span> <span class="cm-variable">nums</span>[<span class="cm-variable">i</span>]</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable">i</span>+=<span class="cm-number">1</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">return</span> <span class="cm-number">0</span> <span class="cm-keyword">if</span> <span class="cm-variable">result</span> == <span class="cm-builtin">len</span>(<span class="cm-variable">nums</span>)<span class="cm-operator">+</span><span class="cm-number">1</span> <span class="cm-keyword">else</span> <span class="cm-variable">result</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span cm-text="" cm-zwsp="">
</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-comment"># 此题也可以用前缀和+二分查找来做</span></span></pre></div></div></div></div></div><div style="position: absolute; height: 0px; width: 1px; border-bottom: 0px solid transparent; top: 360px;"></div><div class="CodeMirror-gutters" style="display: none; height: 360px;"></div></div></div></pre><h5 id='1456定长字串中的元音最大数目基于队列实现的滑动窗口）'><span>1456.定长字串中的元音最大数目（基于队列实现的滑动窗口）</span></h5><p><span>给你字符串 </span><code>s</code><span> 和整数 </span><code>k</code><span> 。</span></p><p><span>请返回字符串 </span><code>s</code><span> 中长度为 </span><code>k</code><span> 的单个子字符串中可能包含的最大元音字母数。</span></p><p><span>英文中的 元音字母 为</span><code>（a, e, i, o, u）</code><span>。</span></p><pre class="md-fences md-end-block ty-contain-cm modeLoaded" spellcheck="false" lang="python" style="break-inside: unset;"><div class="CodeMirror cm-s-inner cm-s-null-scroll CodeMirror-wrap" lang="python"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 10px; left: 4px;"><textarea autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" style="position: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; outline: none;"></textarea></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1"><div class="CodeMirror-sizer" style="margin-left: 0px; margin-bottom: 0px; border-right-width: 0px; padding-right: 0px; padding-bottom: 0px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines" role="presentation"><div role="presentation" style="position: relative; outline: none;"><div class="CodeMirror-measure"><pre><span>xxxxxxxxxx</span></pre></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-code" role="presentation" style="text-rendering: auto;"><div class="CodeMirror-activeline" style="position: relative;"><div class="CodeMirror-activeline-background CodeMirror-linebackground"></div><div class="CodeMirror-gutter-background CodeMirror-activeline-gutter" style="left: 0px; width: 0px;"></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-keyword">class</span> <span class="cm-def">Solution</span>:</span></pre></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp;<span class="cm-keyword">def</span> <span class="cm-def">maxVowels</span>(<span class="cm-variable-2">self</span>, <span class="cm-variable">s</span>: <span class="cm-builtin">str</span>, <span class="cm-variable">k</span>: <span class="cm-builtin">int</span>) <span class="cm-operator">-&gt;</span> <span class="cm-builtin">int</span>:</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable">yuan</span>=[<span class="cm-string">'a'</span>,<span class="cm-string">'e'</span>,<span class="cm-string">'i'</span>,<span class="cm-string">'o'</span>,<span class="cm-string">'u'</span>]</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable">q</span>= <span class="cm-variable">deque</span>()</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable">re</span>=<span class="cm-number">0</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable">temp</span>=<span class="cm-number">0</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">for</span> <span class="cm-variable">i</span> <span class="cm-keyword">in</span> <span class="cm-builtin">range</span>(<span class="cm-variable">k</span>):</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">if</span> <span class="cm-variable">s</span>[<span class="cm-variable">i</span>] <span class="cm-keyword">in</span> <span class="cm-variable">yuan</span>:</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable">re</span>+=<span class="cm-number">1</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable">temp</span>=<span class="cm-variable">re</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">for</span> <span class="cm-variable">j</span> <span class="cm-keyword">in</span> <span class="cm-builtin">range</span>(<span class="cm-variable">k</span>,<span class="cm-builtin">len</span>(<span class="cm-variable">s</span>)):</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable">m</span>=<span class="cm-variable">j</span><span class="cm-operator">-</span><span class="cm-variable">k</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">if</span> <span class="cm-variable">s</span>[<span class="cm-variable">m</span>] <span class="cm-keyword">in</span> <span class="cm-variable">yuan</span>:</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable">temp</span>-=<span class="cm-number">1</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">if</span> <span class="cm-variable">s</span>[<span class="cm-variable">j</span>] <span class="cm-keyword">in</span> <span class="cm-variable">yuan</span>:</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable">temp</span>+=<span class="cm-number">1</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable">re</span>=<span class="cm-builtin">max</span>(<span class="cm-variable">re</span>,<span class="cm-variable">temp</span>)</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">return</span> <span class="cm-variable">re</span></span></pre></div></div></div></div></div><div style="position: absolute; height: 0px; width: 1px; border-bottom: 0px solid transparent; top: 432px;"></div><div class="CodeMirror-gutters" style="display: none; height: 432px;"></div></div></div></pre><h3 id='递归法'><span>递归法</span></h3><h4 id='普通递归'><span>普通递归</span></h4><h5 id='206反转链表'><span>206.反转链表</span></h5><p><span>给你单链表的头节点 </span><code>head</code><span> ，请你反转链表，并返回反转后的链表。</span></p><pre class="md-fences md-end-block ty-contain-cm modeLoaded" spellcheck="false" lang="python" style="break-inside: unset;"><div class="CodeMirror cm-s-inner cm-s-null-scroll CodeMirror-wrap" lang="python"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 10px; left: 4px;"><textarea autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" style="position: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; outline: none;"></textarea></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1"><div class="CodeMirror-sizer" style="margin-left: 0px; margin-bottom: 0px; border-right-width: 0px; padding-right: 0px; padding-bottom: 0px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines" role="presentation"><div role="presentation" style="position: relative; outline: none;"><div class="CodeMirror-measure"><pre><span>xxxxxxxxxx</span></pre></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-code" role="presentation" style="text-rendering: auto;"><div class="CodeMirror-activeline" style="position: relative;"><div class="CodeMirror-activeline-background CodeMirror-linebackground"></div><div class="CodeMirror-gutter-background CodeMirror-activeline-gutter" style="left: 0px; width: 0px;"></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-comment"># Definition for singly-linked list.</span></span></pre></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-comment"># class ListNode:</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-comment"># &nbsp; &nbsp; def __init__(self, val=0, next=None):</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-comment"># &nbsp; &nbsp; &nbsp; &nbsp; self.val = val</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-comment"># &nbsp; &nbsp; &nbsp; &nbsp; self.next = next</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-keyword">class</span> <span class="cm-def">Solution</span>:</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp;<span class="cm-keyword">def</span> <span class="cm-def">reverseList</span>(<span class="cm-variable-2">self</span>, <span class="cm-variable">head</span>: <span class="cm-variable">ListNode</span>) <span class="cm-operator">-&gt;</span> <span class="cm-variable">ListNode</span>:</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">if</span> <span class="cm-keyword">not</span> <span class="cm-variable">head</span> <span class="cm-keyword">or</span> <span class="cm-keyword">not</span> <span class="cm-variable">head</span>.<span class="cm-property">next</span>:</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">return</span> <span class="cm-variable">head</span> <span class="cm-tab" role="presentation" cm-text="	">    </span><span class="cm-tab" role="presentation" cm-text="	">    </span><span class="cm-tab" role="presentation" cm-text="	">    </span><span class="cm-tab" role="presentation" cm-text="	">    </span><span class="cm-comment"># 找到下行的最后一个元素 </span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable">p</span>=<span class="cm-variable-2">self</span>.<span class="cm-property">reverseList</span>(<span class="cm-variable">head</span>.<span class="cm-property">next</span>) <span class="cm-tab" role="presentation" cm-text="	">  </span><span class="cm-comment">#下行不断深入</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable">head</span>.<span class="cm-property">next</span>.<span class="cm-property">next</span>=<span class="cm-variable">head</span> <span class="cm-tab" role="presentation" cm-text="	">    </span><span class="cm-tab" role="presentation" cm-text="	">    </span><span class="cm-tab" role="presentation" cm-text="	">    </span><span class="cm-comment">#碰触到截止条件后开始上行</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable">head</span>.<span class="cm-property">next</span> = <span class="cm-keyword">None</span> <span class="cm-tab" role="presentation" cm-text="	">   </span><span class="cm-tab" role="presentation" cm-text="	">    </span><span class="cm-tab" role="presentation" cm-text="	">    </span><span class="cm-tab" role="presentation" cm-text="	">    </span><span class="cm-comment">#注意 python中没有null，是None，N大写</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">return</span> <span class="cm-variable">p</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span cm-text="" cm-zwsp="">
</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-comment">#利用python快速赋值方法</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-keyword">class</span> <span class="cm-def">Solution</span>:</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp;<span class="cm-keyword">def</span> <span class="cm-def">reverseList</span>(<span class="cm-variable-2">self</span>, <span class="cm-variable">head</span>: <span class="cm-variable">ListNode</span>) <span class="cm-operator">-&gt;</span> <span class="cm-variable">ListNode</span>:</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable">pre</span> = <span class="cm-keyword">None</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable">cur</span> = <span class="cm-variable">head</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">while</span> <span class="cm-variable">cur</span>:</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable">pre</span>,<span class="cm-variable">pre</span>.<span class="cm-property">next</span>,<span class="cm-variable">cur</span>=<span class="cm-variable">cur</span>,<span class="cm-variable">pre</span>,<span class="cm-variable">cur</span>.<span class="cm-property">next</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">return</span> <span class="cm-variable">pre</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> </span></pre></div></div></div></div></div><div style="position: absolute; height: 0px; width: 1px; border-bottom: 0px solid transparent; top: 552px;"></div><div class="CodeMirror-gutters" style="display: none; height: 552px;"></div></div></div></pre><h5 id='169多数元素'><span>169.多数元素</span></h5><p><span>给定一个大小为 n 的数组，找到其中的多数元素。多数元素是指在数组中出现次数 大于 ⌊ n/2 ⌋ 的元素。你可以假设数组是非空的，并且给定的数组总是存在多数元素。</span></p><pre class="md-fences md-end-block ty-contain-cm modeLoaded" spellcheck="false" lang="python" style="break-inside: unset;"><div class="CodeMirror cm-s-inner cm-s-null-scroll CodeMirror-wrap" lang="python"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 10px; left: 4px;"><textarea autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" style="position: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; outline: none;"></textarea></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1"><div class="CodeMirror-sizer" style="margin-left: 0px; margin-bottom: 0px; border-right-width: 0px; padding-right: 0px; padding-bottom: 0px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines" role="presentation"><div role="presentation" style="position: relative; outline: none;"><div class="CodeMirror-measure"><pre><span>xxxxxxxxxx</span></pre></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-code" role="presentation" style="text-rendering: auto;"><div class="CodeMirror-activeline" style="position: relative;"><div class="CodeMirror-activeline-background CodeMirror-linebackground"></div><div class="CodeMirror-gutter-background CodeMirror-activeline-gutter" style="left: 0px; width: 0px;"></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-keyword">class</span> <span class="cm-def">Solution</span>:</span></pre></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp;<span class="cm-keyword">def</span> <span class="cm-def">majorityElement</span>(<span class="cm-variable-2">self</span>, <span class="cm-variable">nums</span>: <span class="cm-variable">List</span>[<span class="cm-builtin">int</span>]) <span class="cm-operator">-&gt;</span> <span class="cm-builtin">int</span>:</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable">count</span> = <span class="cm-number">0</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable">key</span> = <span class="cm-number">0</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">for</span> <span class="cm-variable">i</span> <span class="cm-keyword">in</span> <span class="cm-builtin">range</span>(<span class="cm-builtin">len</span>(<span class="cm-variable">nums</span>)):</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">if</span> <span class="cm-variable">count</span> == <span class="cm-number">0</span>:</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable">key</span>=<span class="cm-variable">nums</span>[<span class="cm-variable">i</span>]</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable">count</span>+=<span class="cm-number">1</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">elif</span> <span class="cm-variable">key</span> == <span class="cm-variable">nums</span>[<span class="cm-variable">i</span>]:</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable">count</span> +=<span class="cm-number">1</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">else</span>:</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable">count</span>-=<span class="cm-number">1</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">return</span> <span class="cm-variable">key</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; </span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-comment cm-error"># 经典的议员投票问题，让全部其他元素都来对抗多数元素，若多数元素占三分之一，则任选两个元素，其他元素一个当两个用...以此类推</span></span></pre></div></div></div></div></div><div style="position: absolute; height: 0px; width: 1px; border-bottom: 0px solid transparent; top: 384px;"></div><div class="CodeMirror-gutters" style="display: none; height: 384px;"></div></div></div></pre><h4 id='分治法'><span>分治法</span></h4><h5 id='53-最大子序和'><span>53. 最大子序和</span></h5><p><span>给定一个整数数组 </span><code>nums</code><span> ，找到一个具有最大和的连续子数组（子数组最少包含一个元素），返回其最大和。</span></p><pre class="md-fences md-end-block ty-contain-cm modeLoaded" spellcheck="false" lang="python" style="break-inside: unset;"><div class="CodeMirror cm-s-inner cm-s-null-scroll CodeMirror-wrap" lang="python"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 10px; left: 4px;"><textarea autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" style="position: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; outline: none;"></textarea></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1"><div class="CodeMirror-sizer" style="margin-left: 0px; margin-bottom: 0px; border-right-width: 0px; padding-right: 0px; padding-bottom: 0px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines" role="presentation"><div role="presentation" style="position: relative; outline: none;"><div class="CodeMirror-measure"><pre><span>xxxxxxxxxx</span></pre></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-code" role="presentation" style="text-rendering: auto;"><div class="CodeMirror-activeline" style="position: relative;"><div class="CodeMirror-activeline-background CodeMirror-linebackground"></div><div class="CodeMirror-gutter-background CodeMirror-activeline-gutter" style="left: 0px; width: 0px;"></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-comment">#分治法</span></span></pre></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-comment">#当把整个数列分为两半的时候，最大子数列的和就等于max(左数列和，右数列和，中间和)</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span cm-text="" cm-zwsp="">
</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-keyword">class</span> <span class="cm-def">Solution</span>:</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp;<span class="cm-keyword">def</span> <span class="cm-def">maxSubArray</span>(<span class="cm-variable-2">self</span>, <span class="cm-variable">nums</span>: <span class="cm-variable">List</span>[<span class="cm-builtin">int</span>]) <span class="cm-operator">-&gt;</span> <span class="cm-builtin">int</span>:</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable">l</span>= <span class="cm-number">0</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable">r</span>= <span class="cm-builtin">len</span>(<span class="cm-variable">nums</span>)<span class="cm-operator">-</span><span class="cm-number">1</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable">S</span>=<span class="cm-variable-2">self</span>.<span class="cm-property">Sum</span>(<span class="cm-variable">l</span>,<span class="cm-variable">r</span>,<span class="cm-variable">nums</span>)</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">return</span> <span class="cm-variable">S</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span cm-text="" cm-zwsp="">
</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp;<span class="cm-keyword">def</span> <span class="cm-def">Sum</span>(<span class="cm-variable-2">self</span>,<span class="cm-variable">l</span>,<span class="cm-variable">r</span>,<span class="cm-variable">nums</span>): <span class="cm-comment">#求左右两边的最大和的方法</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">if</span> <span class="cm-variable">l</span>==<span class="cm-variable">r</span>:</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">return</span> <span class="cm-variable">nums</span>[<span class="cm-variable">l</span>]</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable">m</span>=(<span class="cm-variable">l</span><span class="cm-operator">+</span><span class="cm-variable">r</span>)<span class="cm-operator">//</span><span class="cm-number">2</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable">LeftSum</span>=<span class="cm-variable-2">self</span>.<span class="cm-property">Sum</span>(<span class="cm-variable">l</span>,<span class="cm-variable">m</span>,<span class="cm-variable">nums</span>)</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable">RightSum</span>=<span class="cm-variable-2">self</span>.<span class="cm-property">Sum</span>(<span class="cm-variable">m</span><span class="cm-operator">+</span><span class="cm-number">1</span>,<span class="cm-variable">r</span>,<span class="cm-variable">nums</span>)</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable">MiddleSum</span>= <span class="cm-variable-2">self</span>.<span class="cm-property">MiddleSum</span>(<span class="cm-variable">l</span>,<span class="cm-variable">r</span>,<span class="cm-variable">nums</span>)</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">return</span> <span class="cm-builtin">max</span>(<span class="cm-variable">LeftSum</span>,<span class="cm-variable">RightSum</span>,<span class="cm-variable">MiddleSum</span>)</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span cm-text="" cm-zwsp="">
</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp;<span class="cm-keyword">def</span> <span class="cm-def">MiddleSum</span>(<span class="cm-variable-2">self</span>,<span class="cm-variable">l</span>,<span class="cm-variable">r</span>,<span class="cm-variable">nums</span>): <span class="cm-comment">#求中间和的方法</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable">m</span>=(<span class="cm-variable">l</span><span class="cm-operator">+</span><span class="cm-variable">r</span>)<span class="cm-operator">//</span><span class="cm-number">2</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable">LSum</span>=<span class="cm-number">0</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable">LeftSum</span>=<span class="cm-variable">nums</span>[<span class="cm-variable">m</span>]</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">for</span> <span class="cm-variable">i</span> &nbsp;<span class="cm-keyword">in</span> <span class="cm-builtin">range</span>(<span class="cm-variable">m</span>,<span class="cm-variable">l</span><span class="cm-operator">-</span><span class="cm-number">1</span>,<span class="cm-operator">-</span><span class="cm-number">1</span>):</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable">LSum</span>+=<span class="cm-variable">nums</span>[<span class="cm-variable">i</span>]</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable">LeftSum</span> = <span class="cm-builtin">max</span>(<span class="cm-variable">LSum</span>,<span class="cm-variable">LeftSum</span>)</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable">RSum</span>=<span class="cm-number">0</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable">RightSum</span>=<span class="cm-variable">nums</span>[<span class="cm-variable">m</span><span class="cm-operator">+</span><span class="cm-number">1</span>]</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">for</span> <span class="cm-variable">i</span> &nbsp;<span class="cm-keyword">in</span> <span class="cm-builtin">range</span>(<span class="cm-variable">m</span><span class="cm-operator">+</span><span class="cm-number">1</span>,<span class="cm-variable">r</span><span class="cm-operator">+</span><span class="cm-number">1</span>):</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable">RSum</span>+=<span class="cm-variable">nums</span>[<span class="cm-variable">i</span>]</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable">RightSum</span> = <span class="cm-builtin">max</span>(<span class="cm-variable">RSum</span>,<span class="cm-variable">RightSum</span>)</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable">MiddleSum</span> = <span class="cm-variable">RightSum</span><span class="cm-operator">+</span><span class="cm-variable">LeftSum</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">return</span> <span class="cm-variable">MiddleSum</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span cm-text="" cm-zwsp="">
</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-comment"># 动态规划法</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-comment"># F(n)=max[F(n-1),0]+num[n]  F(n)为数组长度为n时，包含nums[n]的子序列的和的最大值</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span cm-text="" cm-zwsp="">
</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-keyword">class</span> <span class="cm-def">Solution</span>(<span class="cm-builtin">object</span>):</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp;<span class="cm-keyword">def</span> <span class="cm-def">maxSubArray</span>(<span class="cm-variable-2">self</span>, <span class="cm-variable">nums</span>):</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-string">"""</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-string"> &nbsp; &nbsp; &nbsp;  :type nums: List[int]</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-string"> &nbsp; &nbsp; &nbsp;  :rtype: int</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-string"> &nbsp; &nbsp; &nbsp; &nbsp; """</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">for</span> <span class="cm-variable">i</span> <span class="cm-keyword">in</span> <span class="cm-builtin">range</span>(<span class="cm-number">1</span>, <span class="cm-builtin">len</span>(<span class="cm-variable">nums</span>)):</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable">nums</span>[<span class="cm-variable">i</span>]= <span class="cm-variable">nums</span>[<span class="cm-variable">i</span>] <span class="cm-operator">+</span> <span class="cm-builtin">max</span>(<span class="cm-variable">nums</span>[<span class="cm-variable">i</span><span class="cm-operator">-</span><span class="cm-number">1</span>], <span class="cm-number">0</span>)</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">return</span> <span class="cm-builtin">max</span>(<span class="cm-variable">nums</span>)</span></pre></div></div></div></div></div><div style="position: absolute; height: 0px; width: 1px; border-bottom: 0px solid transparent; top: 1104px;"></div><div class="CodeMirror-gutters" style="display: none; height: 1104px;"></div></div></div></pre><h4 id='回溯法'><span>回溯法</span></h4><h5 id='22括号生成'><span>22.括号生成</span></h5><p><span>数字 </span><code>n</code><span> 代表生成括号的对数，请你设计一个函数，用于能够生成所有可能的并且 </span><strong><span>有效的</span></strong><span> 括号组合。有效括号组合需满足：左括号必须以正确的顺序闭合。</span></p><pre class="md-fences md-end-block ty-contain-cm modeLoaded" spellcheck="false" lang="python" style="break-inside: unset;"><div class="CodeMirror cm-s-inner cm-s-null-scroll CodeMirror-wrap" lang="python"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 10px; left: 4px;"><textarea autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" style="position: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; outline: none;"></textarea></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1"><div class="CodeMirror-sizer" style="margin-left: 0px; margin-bottom: 0px; border-right-width: 0px; padding-right: 0px; padding-bottom: 0px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines" role="presentation"><div role="presentation" style="position: relative; outline: none;"><div class="CodeMirror-measure"><pre><span>xxxxxxxxxx</span></pre></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-code" role="presentation" style="text-rendering: auto;"><div class="CodeMirror-activeline" style="position: relative;"><div class="CodeMirror-activeline-background CodeMirror-linebackground"></div><div class="CodeMirror-gutter-background CodeMirror-activeline-gutter" style="left: 0px; width: 0px;"></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-keyword">class</span> <span class="cm-def">Solution</span>:</span></pre></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp;<span class="cm-keyword">def</span> <span class="cm-def">generateParenthesis</span>(<span class="cm-variable-2">self</span>, <span class="cm-variable">n</span>: <span class="cm-builtin">int</span>) <span class="cm-operator">-&gt;</span> <span class="cm-variable">List</span>[<span class="cm-builtin">str</span>]:</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable">a</span>=[]</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable">res</span>=[]</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable-2">self</span>.<span class="cm-property">bt</span>(<span class="cm-variable">n</span>,<span class="cm-number">0</span>,<span class="cm-number">0</span>,<span class="cm-string">''</span>,<span class="cm-variable">res</span>)</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">return</span> <span class="cm-variable">res</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span cm-text="" cm-zwsp="">
</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp;<span class="cm-keyword">def</span> <span class="cm-def">bt</span>(<span class="cm-variable-2">self</span>,<span class="cm-variable">n</span>,<span class="cm-variable">l</span>,<span class="cm-variable">r</span>,<span class="cm-variable">a</span>,<span class="cm-variable">res</span>):</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">if</span> <span class="cm-variable">l</span>==<span class="cm-variable">r</span>==<span class="cm-variable">n</span>:</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable">res</span>.<span class="cm-property">append</span>(<span class="cm-variable">a</span>) <span class="cm-comment">#遍历完成终止条件</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">return</span> </span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">if</span> <span class="cm-variable">r</span><span class="cm-operator">&gt;</span><span class="cm-variable">l</span>: &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="cm-comment">#中途中断,回溯</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">return</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">if</span> <span class="cm-variable">l</span> <span class="cm-operator">&lt;</span> <span class="cm-variable">n</span>:</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable-2">self</span>.<span class="cm-property">bt</span>(<span class="cm-variable">n</span>,<span class="cm-variable">l</span><span class="cm-operator">+</span><span class="cm-number">1</span>,<span class="cm-variable">r</span>,<span class="cm-variable">a</span><span class="cm-operator">+</span><span class="cm-string">'('</span>,<span class="cm-variable">res</span>) <span class="cm-comment">#添加左分支</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">if</span> <span class="cm-variable">l</span> <span class="cm-operator">&gt;</span> <span class="cm-variable">r</span>: </span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable-2">self</span>.<span class="cm-property">bt</span>(<span class="cm-variable">n</span>,<span class="cm-variable">l</span>,<span class="cm-variable">r</span><span class="cm-operator">+</span><span class="cm-number">1</span>,<span class="cm-variable">a</span><span class="cm-operator">+</span><span class="cm-string">")"</span>,<span class="cm-variable">res</span>) <span class="cm-comment">#添加右分支</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span cm-text="" cm-zwsp="">
</span></span></pre></div></div></div></div></div><div style="position: absolute; height: 0px; width: 1px; border-bottom: 0px solid transparent; top: 432px;"></div><div class="CodeMirror-gutters" style="display: none; height: 432px;"></div></div></div></pre><h5 id='78子集'><span>78.子集</span></h5><p><span>给你一个整数数组 </span><code>nums</code><span> ，数组中的元素 </span><strong><span>互不相同</span></strong><span> 。返回该数组所有可能的子集（幂集）。</span></p><p><span>解集 </span><strong><span>不能</span></strong><span> 包含重复的子集。你可以按 </span><strong><span>任意顺序</span></strong><span> 返回解集。</span></p><pre class="md-fences md-end-block ty-contain-cm modeLoaded md-focus" spellcheck="false" lang="python" style="break-inside: unset;"><div class="CodeMirror cm-s-inner cm-s-null-scroll CodeMirror-wrap CodeMirror-focused" lang="python"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 10px; left: 208.648px;"><textarea autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" style="position: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; outline: none;"></textarea></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1"><div class="CodeMirror-sizer" style="margin-left: 0px; margin-bottom: 0px; border-right-width: 0px; padding-right: 0px; padding-bottom: 0px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines" role="presentation"><div role="presentation" style="position: relative; outline: none;"><div class="CodeMirror-measure"><pre><span>xxxxxxxxxx</span></pre></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-code" role="presentation" style="text-rendering: auto;"><div class="CodeMirror-activeline" style="position: relative;"><div class="CodeMirror-activeline-background CodeMirror-linebackground"></div><div class="CodeMirror-gutter-background CodeMirror-activeline-gutter" style="left: 0px; width: 0px;"></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-comment"># 回溯法：根据子集的大小遍历</span></span></pre></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span cm-text="" cm-zwsp="">
</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-keyword">class</span> <span class="cm-def">Solution</span>:</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp;<span class="cm-keyword">def</span> <span class="cm-def">subsets</span>(<span class="cm-variable-2">self</span>, <span class="cm-variable">nums</span>: <span class="cm-variable">List</span>[<span class="cm-builtin">int</span>]) <span class="cm-operator">-&gt;</span> <span class="cm-variable">List</span>[<span class="cm-variable">List</span>[<span class="cm-builtin">int</span>]]:</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable">res</span>=[[]]</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">for</span> <span class="cm-variable">i</span> <span class="cm-keyword">in</span> <span class="cm-builtin">range</span>(<span class="cm-number">1</span>,<span class="cm-builtin">len</span>(<span class="cm-variable">nums</span>)<span class="cm-operator">+</span><span class="cm-number">1</span>):</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable-2">self</span>.<span class="cm-property">Count</span>(<span class="cm-variable">res</span>,<span class="cm-variable">nums</span>,<span class="cm-variable">i</span>,<span class="cm-number">0</span>,[]) <span class="cm-comment"># 长度可以从1取到整个数组长度</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">return</span> <span class="cm-variable">res</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span cm-text="" cm-zwsp="">
</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp;<span class="cm-keyword">def</span> <span class="cm-def">Count</span>(<span class="cm-variable-2">self</span>,<span class="cm-variable">res</span>,<span class="cm-variable">nums</span>,<span class="cm-variable">length</span>,<span class="cm-variable">index</span>,<span class="cm-variable">sub</span>):</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">if</span> <span class="cm-builtin">len</span>(<span class="cm-variable">sub</span>)==<span class="cm-variable">length</span>:</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable">res</span>.<span class="cm-property">append</span>(<span class="cm-variable">sub</span>[:])<span class="cm-comment">#注意！sub[:]是不更新的，sub会更新</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">return</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">for</span> <span class="cm-variable">i</span> <span class="cm-keyword">in</span> <span class="cm-builtin">range</span>(<span class="cm-variable">index</span>,<span class="cm-builtin">len</span>(<span class="cm-variable">nums</span>)): </span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-comment">#默认不回头，一旦前一个元素取了nums[i],后面的元素只能在i之后取，防止重复</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable">sub</span>.<span class="cm-property">append</span>(<span class="cm-variable">nums</span>[<span class="cm-variable">i</span>])</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable-2">self</span>.<span class="cm-property">Count</span>(<span class="cm-variable">res</span>,<span class="cm-variable">nums</span>,<span class="cm-variable">length</span>,<span class="cm-variable">i</span><span class="cm-operator">+</span><span class="cm-number">1</span>,<span class="cm-variable">sub</span>)</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable">sub</span>.<span class="cm-property">pop</span>()</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span cm-text="" cm-zwsp="">
</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-comment"># 动态规划: n+1的子集是【n的子集】+【n的子集+第n+1个元素】</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span cm-text="" cm-zwsp="">
</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-keyword">class</span> <span class="cm-def">Solution</span>:</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp;<span class="cm-keyword">def</span> <span class="cm-def">subsets</span>(<span class="cm-variable-2">self</span>, <span class="cm-variable">nums</span>: <span class="cm-variable">List</span>[<span class="cm-builtin">int</span>]) <span class="cm-operator">-&gt;</span> <span class="cm-variable">List</span>[<span class="cm-variable">List</span>[<span class="cm-builtin">int</span>]]:</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable">res</span> = [[]]</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">for</span> <span class="cm-variable">i</span> <span class="cm-keyword">in</span> <span class="cm-builtin">range</span>(<span class="cm-builtin">len</span>(<span class="cm-variable">nums</span>)<span class="cm-operator">-</span><span class="cm-number">1</span>, <span class="cm-operator">-</span><span class="cm-number">1</span>, <span class="cm-operator">-</span><span class="cm-number">1</span>):</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">for</span> <span class="cm-variable">subres</span> <span class="cm-keyword">in</span> <span class="cm-variable">res</span>[:]: <span class="cm-variable">res</span>.<span class="cm-property">append</span>(<span class="cm-variable">subres</span><span class="cm-operator">+</span>[<span class="cm-variable">nums</span>[<span class="cm-variable">i</span>]])</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">return</span> <span class="cm-variable">res</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp;</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span cm-text="" cm-zwsp="">
</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-comment"># DFS 深度优先算法：[1]-&gt;[1,2]-&gt;[1,2,3] ···</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span cm-text="" cm-zwsp="">
</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-keyword">class</span> <span class="cm-def">Solution</span>:</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp;<span class="cm-keyword">def</span> <span class="cm-def">subsets</span>(<span class="cm-variable-2">self</span>, <span class="cm-variable">nums</span>: <span class="cm-variable">List</span>[<span class="cm-builtin">int</span>]) <span class="cm-operator">-&gt;</span> <span class="cm-variable">List</span>[<span class="cm-variable">List</span>[<span class="cm-builtin">int</span>]]:</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable">ans</span> = []</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">def</span> <span class="cm-def">backtrack</span>(<span class="cm-variable">temp</span>,<span class="cm-variable">idx</span>):</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">if</span> <span class="cm-variable">idx</span> == <span class="cm-builtin">len</span>(<span class="cm-variable">nums</span>):</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable">ans</span>.<span class="cm-property">append</span>(<span class="cm-variable">temp</span>)</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">return</span> </span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable">backtrack</span>(<span class="cm-variable">temp</span> <span class="cm-operator">+</span> [<span class="cm-variable">nums</span>[<span class="cm-variable">idx</span>]],<span class="cm-variable">idx</span><span class="cm-operator">+</span><span class="cm-number">1</span>)</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable">backtrack</span>(<span class="cm-variable">temp</span>,<span class="cm-variable">idx</span><span class="cm-operator">+</span><span class="cm-number">1</span>)</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable">backtrack</span>([],<span class="cm-number">0</span>)</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">return</span> <span class="cm-variable">ans</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span cm-text="" cm-zwsp="">
</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span cm-text="" cm-zwsp="">
</span></span></pre></div></div></div></div></div><div style="position: absolute; height: 0px; width: 1px; border-bottom: 0px solid transparent; top: 1104px;"></div><div class="CodeMirror-gutters" style="display: none; height: 1104px;"></div></div></div></pre><h4 id='dfs-深度优先算法'><span>DFS 深度优先算法</span></h4><h5 id='938-二叉搜索树的范围和'><span>938. 二叉搜索树的范围和</span></h5><p><span>给定二叉搜索树的根结点 </span><code>root</code><span>，返回值位于范围 </span><em><code>[low, high]</code></em><span> 之间的所有结点的值的和。</span></p><pre class="md-fences md-end-block ty-contain-cm modeLoaded" spellcheck="false" lang="python" style="break-inside: unset;"><div class="CodeMirror cm-s-inner cm-s-null-scroll CodeMirror-wrap" lang="python"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 10px; left: 4px;"><textarea autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" style="position: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; outline: none;"></textarea></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1"><div class="CodeMirror-sizer" style="margin-left: 0px; margin-bottom: 0px; border-right-width: 0px; padding-right: 0px; padding-bottom: 0px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines" role="presentation"><div role="presentation" style="position: relative; outline: none;"><div class="CodeMirror-measure"><pre><span>xxxxxxxxxx</span></pre></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-code" role="presentation" style="text-rendering: auto;"><div class="CodeMirror-activeline" style="position: relative;"><div class="CodeMirror-activeline-background CodeMirror-linebackground"></div><div class="CodeMirror-gutter-background CodeMirror-activeline-gutter" style="left: 0px; width: 0px;"></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-comment"># 深度优先搜索</span></span></pre></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span cm-text="" cm-zwsp="">
</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-keyword">class</span> <span class="cm-def">Solution</span>:</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp;<span class="cm-builtin">sum</span>=<span class="cm-number">0</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp;<span class="cm-keyword">def</span> <span class="cm-def">rangeSumBST</span>(<span class="cm-variable-2">self</span>, <span class="cm-variable">root</span>: <span class="cm-variable">TreeNode</span>, <span class="cm-variable">low</span>: <span class="cm-builtin">int</span>, <span class="cm-variable">high</span>: <span class="cm-builtin">int</span>) <span class="cm-operator">-&gt;</span> <span class="cm-builtin">int</span>:</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">def</span> <span class="cm-def">Count</span>(<span class="cm-variable">r</span>):</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">if</span> <span class="cm-variable">r</span> == <span class="cm-keyword">None</span>:</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">return</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">elif</span> <span class="cm-variable">r</span>.<span class="cm-property">val</span> <span class="cm-operator">&lt;</span>= <span class="cm-variable">high</span> <span class="cm-keyword">and</span> <span class="cm-variable">r</span>.<span class="cm-property">val</span> <span class="cm-operator">&gt;</span>= <span class="cm-variable">low</span>:</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="cm-variable-2">self</span>.<span class="cm-property">sum</span> += <span class="cm-variable">r</span>.<span class="cm-property">val</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="cm-variable cm-error">Count</span>(<span class="cm-variable">r</span>.<span class="cm-property">left</span>)</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="cm-variable">Count</span>(<span class="cm-variable">r</span>.<span class="cm-property">right</span>)</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">else</span>:</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable">Count</span>(<span class="cm-variable">r</span>.<span class="cm-property">left</span>)</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable">Count</span>(<span class="cm-variable">r</span>.<span class="cm-property">right</span>)</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable">Count</span>(<span class="cm-variable">root</span>)</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span cm-text="" cm-zwsp="">
</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">return</span> <span class="cm-variable-2">self</span>.<span class="cm-property">sum</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp;</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> <span class="cm-comment"># 广度优先搜索</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span cm-text="" cm-zwsp="">
</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-keyword">class</span> <span class="cm-def">Solution</span>:</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp;<span class="cm-keyword">def</span> <span class="cm-def">rangeSumBST</span>(<span class="cm-variable-2">self</span>, <span class="cm-variable">root</span>: <span class="cm-variable">TreeNode</span>, <span class="cm-variable">low</span>: <span class="cm-builtin">int</span>, <span class="cm-variable">high</span>: <span class="cm-builtin">int</span>) <span class="cm-operator">-&gt;</span> <span class="cm-builtin">int</span>:</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable">total</span> = <span class="cm-number">0</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable">q</span> = <span class="cm-variable">collections</span>.<span class="cm-property">deque</span>([<span class="cm-variable">root</span>])</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">while</span> <span class="cm-variable">q</span>:</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable">node</span> = <span class="cm-variable">q</span>.<span class="cm-property">popleft</span>()</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">if</span> <span class="cm-keyword">not</span> <span class="cm-variable">node</span>:</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">continue</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">if</span> <span class="cm-variable">node</span>.<span class="cm-property">val</span> <span class="cm-operator">&gt;</span> <span class="cm-variable">high</span>:</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable">q</span>.<span class="cm-property">append</span>(<span class="cm-variable">node</span>.<span class="cm-property">left</span>)</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">elif</span> <span class="cm-variable">node</span>.<span class="cm-property">val</span> <span class="cm-operator">&lt;</span> <span class="cm-variable">low</span>:</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable">q</span>.<span class="cm-property">append</span>(<span class="cm-variable">node</span>.<span class="cm-property">right</span>)</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">else</span>:</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable">total</span> += <span class="cm-variable">node</span>.<span class="cm-property">val</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable">q</span>.<span class="cm-property">append</span>(<span class="cm-variable">node</span>.<span class="cm-property">left</span>)</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable">q</span>.<span class="cm-property">append</span>(<span class="cm-variable">node</span>.<span class="cm-property">right</span>)</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span cm-text="" cm-zwsp="">
</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">return</span> <span class="cm-variable">total</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span cm-text="" cm-zwsp="">
</span></span></pre></div></div></div></div></div><div style="position: absolute; height: 0px; width: 1px; border-bottom: 0px solid transparent; top: 984px;"></div><div class="CodeMirror-gutters" style="display: none; height: 984px;"></div></div></div></pre><p>&nbsp;</p><h4 id='bfs广度优先搜索'><span>BFS广度优先搜索</span></h4><h5 id='102-二叉树的层序遍历该题可用作模板）'><span>102. 二叉树的层序遍历（该题可用作模板）</span></h5><p><span>给你一个二叉树，请你返回其按 </span><strong><span>层序遍历</span></strong><span> 得到的节点值。 （即逐层地，从左到右访问所有节点）。</span></p><pre class="md-fences md-end-block ty-contain-cm modeLoaded" spellcheck="false" lang="python" style="break-inside: unset;"><div class="CodeMirror cm-s-inner cm-s-null-scroll CodeMirror-wrap" lang="python"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 10px; left: 4px;"><textarea autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" style="position: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; outline: none;"></textarea></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1"><div class="CodeMirror-sizer" style="margin-left: 0px; margin-bottom: 0px; border-right-width: 0px; padding-right: 0px; padding-bottom: 0px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines" role="presentation"><div role="presentation" style="position: relative; outline: none;"><div class="CodeMirror-measure"><pre><span>xxxxxxxxxx</span></pre></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-code" role="presentation" style="text-rendering: auto;"><div class="CodeMirror-activeline" style="position: relative;"><div class="CodeMirror-activeline-background CodeMirror-linebackground"></div><div class="CodeMirror-gutter-background CodeMirror-activeline-gutter" style="left: 0px; width: 0px;"></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-comment"># Definition for a binary tree node.</span></span></pre></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-comment"># class TreeNode:</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-comment"># &nbsp; &nbsp; def __init__(self, val=0, left=None, right=None):</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-comment"># &nbsp; &nbsp; &nbsp; &nbsp; self.val = val</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-comment"># &nbsp; &nbsp; &nbsp; &nbsp; self.left = left</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-comment"># &nbsp; &nbsp; &nbsp; &nbsp; self.right = right</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span cm-text="" cm-zwsp="">
</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span cm-text="" cm-zwsp="">
</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-comment"># BFS 法</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-keyword">class</span> <span class="cm-def">Solution</span>:</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp;<span class="cm-keyword">def</span> <span class="cm-def">levelOrder</span>(<span class="cm-variable-2">self</span>, <span class="cm-variable">root</span>: <span class="cm-variable">TreeNode</span>) <span class="cm-operator">-&gt;</span> <span class="cm-variable">List</span>[<span class="cm-variable">List</span>[<span class="cm-builtin">int</span>]]:</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable">res</span> =[]</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">if</span> <span class="cm-variable">root</span> <span class="cm-keyword">is</span> <span class="cm-keyword">None</span>: </span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">return</span> <span class="cm-variable">res</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable">q</span> = <span class="cm-variable">deque</span>([]) &nbsp; &nbsp;<span class="cm-comment">#用队列，好处是遵循先入先出原则，保证从左到右的顺序</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable">q</span>.<span class="cm-property">append</span>(<span class="cm-variable">root</span>)</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">while</span> <span class="cm-builtin">len</span>(<span class="cm-variable">q</span>) <span class="cm-operator">&gt;</span> <span class="cm-number">0</span>:</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable">size</span>=<span class="cm-builtin">len</span>(<span class="cm-variable">q</span>)</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable">ls</span> = []</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">while</span> <span class="cm-variable">size</span> <span class="cm-operator">&gt;</span> <span class="cm-number">0</span>:</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable">cur</span> = <span class="cm-variable">q</span>.<span class="cm-property">popleft</span>() &nbsp; &nbsp;<span class="cm-comment"># 把上一层元素一一出队，同时按顺序将下一层元素入队</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable">ls</span>.<span class="cm-property">append</span>(<span class="cm-variable">cur</span>.<span class="cm-property">val</span>)</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">if</span> <span class="cm-variable">cur</span>.<span class="cm-property">left</span> <span class="cm-keyword">is</span> <span class="cm-keyword">not</span> <span class="cm-keyword">None</span>:</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable">q</span>.<span class="cm-property">append</span>(<span class="cm-variable">cur</span>.<span class="cm-property">left</span>)</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">if</span> <span class="cm-variable">cur</span>.<span class="cm-property">right</span> <span class="cm-keyword">is</span> <span class="cm-keyword">not</span> <span class="cm-keyword">None</span>:</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable">q</span>.<span class="cm-property">append</span>(<span class="cm-variable">cur</span>.<span class="cm-property">right</span>)</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable">size</span> = <span class="cm-variable">size</span><span class="cm-operator">-</span><span class="cm-number">1</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable">res</span>.<span class="cm-property">append</span>(<span class="cm-variable">ls</span>[:])</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">return</span> <span class="cm-variable">res</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp;</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-comment"># DFS 法</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span cm-text="" cm-zwsp="">
</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp;<span class="cm-keyword">class</span> <span class="cm-def">Solution</span>:</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp;<span class="cm-keyword">def</span> <span class="cm-def">levelOrder</span>(<span class="cm-variable-2">self</span>, <span class="cm-variable">root</span>: <span class="cm-variable">TreeNode</span>) <span class="cm-operator">-&gt;</span> <span class="cm-variable">List</span>[<span class="cm-variable">List</span>[<span class="cm-builtin">int</span>]]:</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable">res</span>=[]</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable-2">self</span>.<span class="cm-property">count</span>(<span class="cm-number">0</span>,<span class="cm-variable">root</span>,<span class="cm-variable">res</span>)</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">return</span> <span class="cm-variable">res</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span cm-text="" cm-zwsp="">
</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp;<span class="cm-keyword">def</span> <span class="cm-def">count</span>(<span class="cm-variable-2">self</span>,<span class="cm-variable">layer</span>,<span class="cm-variable">r</span>,<span class="cm-variable">res</span>): &nbsp; &nbsp; &nbsp;</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">if</span> <span class="cm-variable">r</span> <span class="cm-keyword">is</span> <span class="cm-keyword">None</span>: <span class="cm-comment"># 一定注意这一行！！！ 排除[]的情况</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">return</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span cm-text="" cm-zwsp="">
</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">if</span> <span class="cm-variable">layer</span> <span class="cm-operator">&gt;</span> <span class="cm-builtin">len</span>(<span class="cm-variable">res</span>)<span class="cm-operator">-</span><span class="cm-number">1</span>:</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable">res</span>.<span class="cm-property">append</span>([])</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable">res</span>[<span class="cm-variable">layer</span>].<span class="cm-property">append</span>(<span class="cm-variable">r</span>.<span class="cm-property">val</span>)</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span cm-text="" cm-zwsp="">
</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">if</span> <span class="cm-variable">r</span>.<span class="cm-property">left</span> <span class="cm-keyword">is</span> <span class="cm-keyword">not</span> <span class="cm-keyword">None</span>:</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable-2">self</span>.<span class="cm-property">count</span>(<span class="cm-variable">layer</span><span class="cm-operator">+</span><span class="cm-number">1</span>,<span class="cm-variable">r</span>.<span class="cm-property">left</span>,<span class="cm-variable">res</span>)</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">if</span> <span class="cm-variable">r</span>.<span class="cm-property">right</span> <span class="cm-keyword">is</span> <span class="cm-keyword">not</span> <span class="cm-keyword">None</span>:</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable-2">self</span>.<span class="cm-property">count</span>(<span class="cm-variable">layer</span><span class="cm-operator">+</span><span class="cm-number">1</span>,<span class="cm-variable">r</span>.<span class="cm-property">right</span>,<span class="cm-variable">res</span>)</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span></pre></div></div></div></div></div><div style="position: absolute; height: 0px; width: 1px; border-bottom: 0px solid transparent; top: 1272px;"></div><div class="CodeMirror-gutters" style="display: none; height: 1272px;"></div></div></div></pre><h5 id='200岛屿数量'><span>200.岛屿数量</span></h5><p><span>给你一个由 &#39;1&#39;（陆地）和 &#39;0&#39;（水）组成的的二维网格，请你计算网格中岛屿的数量。岛屿总是被水包围，并且每座岛屿只能由水平方向和/或竖直方向上相邻的陆地连接形成。此外，你可以假设该网格的四条边均被水包围。</span></p><pre class="md-fences md-end-block ty-contain-cm modeLoaded" spellcheck="false" lang="python" style="break-inside: unset;"><div class="CodeMirror cm-s-inner cm-s-null-scroll CodeMirror-wrap" lang="python"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 10px; left: 4px;"><textarea autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" style="position: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; outline: none;"></textarea></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1"><div class="CodeMirror-sizer" style="margin-left: 0px; margin-bottom: 0px; border-right-width: 0px; padding-right: 0px; padding-bottom: 0px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines" role="presentation"><div role="presentation" style="position: relative; outline: none;"><div class="CodeMirror-measure"><pre><span>xxxxxxxxxx</span></pre></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-code" role="presentation" style="text-rendering: auto;"><div class="CodeMirror-activeline" style="position: relative;"><div class="CodeMirror-activeline-background CodeMirror-linebackground"></div><div class="CodeMirror-gutter-background CodeMirror-activeline-gutter" style="left: 0px; width: 0px;"></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-comment"># 另类DFS：定义传染函数，每碰到一个1就把它周围的1都变成0</span></span></pre></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span cm-text="" cm-zwsp="">
</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-keyword">class</span> <span class="cm-def">Solution</span>:</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp;<span class="cm-keyword">def</span> <span class="cm-def">numIslands</span>(<span class="cm-variable-2">self</span>, <span class="cm-variable">grid</span>: <span class="cm-variable">List</span>[<span class="cm-variable">List</span>[<span class="cm-builtin">str</span>]]) <span class="cm-operator">-&gt;</span> <span class="cm-builtin">int</span>:</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable">m</span>,<span class="cm-variable">n</span>=<span class="cm-builtin">len</span>(<span class="cm-variable">grid</span>),<span class="cm-builtin">len</span>(<span class="cm-variable">grid</span>[<span class="cm-number">0</span>])</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable">ans</span>=<span class="cm-number">0</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span cm-text="" cm-zwsp="">
</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">def</span> <span class="cm-def">dfs</span>(<span class="cm-variable">i</span>,<span class="cm-variable">j</span>):</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">if</span> <span class="cm-number">0</span><span class="cm-operator">&lt;</span>=<span class="cm-variable">i</span><span class="cm-operator">&lt;</span><span class="cm-variable">m</span> <span class="cm-keyword">and</span> <span class="cm-number">0</span><span class="cm-operator">&lt;</span>=<span class="cm-variable">j</span><span class="cm-operator">&lt;</span><span class="cm-variable">n</span> <span class="cm-keyword">and</span> <span class="cm-variable">grid</span>[<span class="cm-variable">i</span>][<span class="cm-variable">j</span>]==<span class="cm-string">'1'</span>:</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable">grid</span>[<span class="cm-variable">i</span>][<span class="cm-variable">j</span>] = <span class="cm-string">'0'</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span cm-text="" cm-zwsp="">
</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable">dfs</span>(<span class="cm-variable">i</span><span class="cm-operator">+</span><span class="cm-number">1</span>,<span class="cm-variable">j</span>)</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable">dfs</span>(<span class="cm-variable">i</span><span class="cm-operator">-</span><span class="cm-number">1</span>,<span class="cm-variable">j</span>)</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable">dfs</span>(<span class="cm-variable">i</span>,<span class="cm-variable">j</span><span class="cm-operator">+</span><span class="cm-number">1</span>)</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable">dfs</span>(<span class="cm-variable">i</span>,<span class="cm-variable">j</span><span class="cm-operator">-</span><span class="cm-number">1</span>)</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">for</span> <span class="cm-variable">i</span> <span class="cm-keyword">in</span> <span class="cm-builtin">range</span>(<span class="cm-variable">m</span>):</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">for</span> <span class="cm-variable">j</span> <span class="cm-keyword">in</span> <span class="cm-builtin">range</span>(<span class="cm-variable">n</span>):</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">if</span> <span class="cm-variable">grid</span>[<span class="cm-variable">i</span>][<span class="cm-variable">j</span>]==<span class="cm-string">'1'</span>:</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable">ans</span> += <span class="cm-number">1</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable">dfs</span>(<span class="cm-variable">i</span>,<span class="cm-variable">j</span>)</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">return</span> <span class="cm-variable">ans</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span cm-text="" cm-zwsp="">
</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-comment"># 比较麻烦的并查集</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp;</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-keyword">class</span> <span class="cm-def">UnionFind</span>:</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp;<span class="cm-keyword">def</span> <span class="cm-def">__init__</span>(<span class="cm-variable-2">self</span>, <span class="cm-variable">grid</span>):</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable">m</span>, <span class="cm-variable">n</span> = <span class="cm-builtin">len</span>(<span class="cm-variable">grid</span>), <span class="cm-builtin">len</span>(<span class="cm-variable">grid</span>[<span class="cm-number">0</span>])</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable-2">self</span>.<span class="cm-property">count</span> = <span class="cm-number">0</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable-2">self</span>.<span class="cm-property">parent</span> = [<span class="cm-operator">-</span><span class="cm-number">1</span>] <span class="cm-operator">*</span> (<span class="cm-variable">m</span> <span class="cm-operator">*</span> <span class="cm-variable">n</span>)</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable-2">self</span>.<span class="cm-property">rank</span> = [<span class="cm-number">0</span>] <span class="cm-operator">*</span> (<span class="cm-variable">m</span> <span class="cm-operator">*</span> <span class="cm-variable">n</span>)</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">for</span> <span class="cm-variable">i</span> <span class="cm-keyword">in</span> <span class="cm-builtin">range</span>(<span class="cm-variable">m</span>):</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">for</span> <span class="cm-variable">j</span> <span class="cm-keyword">in</span> <span class="cm-builtin">range</span>(<span class="cm-variable">n</span>):</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">if</span> <span class="cm-variable">grid</span>[<span class="cm-variable">i</span>][<span class="cm-variable">j</span>] == <span class="cm-string">"1"</span>:</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable-2">self</span>.<span class="cm-property">parent</span>[<span class="cm-variable">i</span> <span class="cm-operator">*</span> <span class="cm-variable">n</span> <span class="cm-operator">+</span> <span class="cm-variable">j</span>] = <span class="cm-variable">i</span> <span class="cm-operator">*</span> <span class="cm-variable">n</span> <span class="cm-operator">+</span> <span class="cm-variable">j</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable-2">self</span>.<span class="cm-property">count</span> += <span class="cm-number">1</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp;</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp;<span class="cm-keyword">def</span> <span class="cm-def">find</span>(<span class="cm-variable-2">self</span>, <span class="cm-variable">i</span>):</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">if</span> <span class="cm-variable-2">self</span>.<span class="cm-property">parent</span>[<span class="cm-variable">i</span>] <span class="cm-operator">!</span>= <span class="cm-variable">i</span>:</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable-2">self</span>.<span class="cm-property">parent</span>[<span class="cm-variable">i</span>] = <span class="cm-variable-2">self</span>.<span class="cm-property">find</span>(<span class="cm-variable-2">self</span>.<span class="cm-property">parent</span>[<span class="cm-variable">i</span>])</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">return</span> <span class="cm-variable-2">self</span>.<span class="cm-property">parent</span>[<span class="cm-variable">i</span>]</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp;</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp;<span class="cm-keyword">def</span> <span class="cm-def">union</span>(<span class="cm-variable-2">self</span>, <span class="cm-variable">x</span>, <span class="cm-variable">y</span>):</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable">rootx</span> = <span class="cm-variable-2">self</span>.<span class="cm-property">find</span>(<span class="cm-variable">x</span>)</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable">rooty</span> = <span class="cm-variable-2">self</span>.<span class="cm-property">find</span>(<span class="cm-variable">y</span>)</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">if</span> <span class="cm-variable">rootx</span> <span class="cm-operator">!</span>= <span class="cm-variable">rooty</span>:</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">if</span> <span class="cm-variable-2">self</span>.<span class="cm-property">rank</span>[<span class="cm-variable">rootx</span>] <span class="cm-operator">&lt;</span> <span class="cm-variable-2">self</span>.<span class="cm-property">rank</span>[<span class="cm-variable">rooty</span>]:</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable">rootx</span>, <span class="cm-variable">rooty</span> = <span class="cm-variable">rooty</span>, <span class="cm-variable">rootx</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable-2">self</span>.<span class="cm-property">parent</span>[<span class="cm-variable">rooty</span>] = <span class="cm-variable">rootx</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">if</span> <span class="cm-variable-2">self</span>.<span class="cm-property">rank</span>[<span class="cm-variable">rootx</span>] == <span class="cm-variable-2">self</span>.<span class="cm-property">rank</span>[<span class="cm-variable">rooty</span>]:</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable-2">self</span>.<span class="cm-property">rank</span>[<span class="cm-variable">rootx</span>] += <span class="cm-number">1</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable-2">self</span>.<span class="cm-property">count</span> -= <span class="cm-number">1</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp;</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp;<span class="cm-keyword">def</span> <span class="cm-def">getCount</span>(<span class="cm-variable-2">self</span>):</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">return</span> <span class="cm-variable-2">self</span>.<span class="cm-property">count</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span cm-text="" cm-zwsp="">
</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-keyword">class</span> <span class="cm-def">Solution</span>:</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp;<span class="cm-keyword">def</span> <span class="cm-def">numIslands</span>(<span class="cm-variable-2">self</span>, <span class="cm-variable">grid</span>: <span class="cm-variable">List</span>[<span class="cm-variable">List</span>[<span class="cm-builtin">str</span>]]) <span class="cm-operator">-&gt;</span> <span class="cm-builtin">int</span>:</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable">nr</span> = <span class="cm-builtin">len</span>(<span class="cm-variable">grid</span>)</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">if</span> <span class="cm-variable">nr</span> == <span class="cm-number">0</span>:</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">return</span> <span class="cm-number">0</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable">nc</span> = <span class="cm-builtin">len</span>(<span class="cm-variable">grid</span>[<span class="cm-number">0</span>])</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span cm-text="" cm-zwsp="">
</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable">uf</span> = <span class="cm-variable">UnionFind</span>(<span class="cm-variable">grid</span>)</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable">num_islands</span> = <span class="cm-number">0</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">for</span> <span class="cm-variable">r</span> <span class="cm-keyword">in</span> <span class="cm-builtin">range</span>(<span class="cm-variable">nr</span>):</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">for</span> <span class="cm-variable">c</span> <span class="cm-keyword">in</span> <span class="cm-builtin">range</span>(<span class="cm-variable">nc</span>):</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">if</span> <span class="cm-variable">grid</span>[<span class="cm-variable">r</span>][<span class="cm-variable">c</span>] == <span class="cm-string">"1"</span>:</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable">grid</span>[<span class="cm-variable">r</span>][<span class="cm-variable">c</span>] = <span class="cm-string">"0"</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">for</span> <span class="cm-variable">x</span>, <span class="cm-variable">y</span> <span class="cm-keyword">in</span> [(<span class="cm-variable">r</span> <span class="cm-operator">-</span> <span class="cm-number">1</span>, <span class="cm-variable">c</span>), (<span class="cm-variable">r</span> <span class="cm-operator">+</span> <span class="cm-number">1</span>, <span class="cm-variable">c</span>), (<span class="cm-variable">r</span>, <span class="cm-variable">c</span> <span class="cm-operator">-</span> <span class="cm-number">1</span>), (<span class="cm-variable">r</span>, <span class="cm-variable">c</span> <span class="cm-operator">+</span> <span class="cm-number">1</span>)]:</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">if</span> <span class="cm-number">0</span> <span class="cm-operator">&lt;</span>= <span class="cm-variable">x</span> <span class="cm-operator">&lt;</span> <span class="cm-variable">nr</span> <span class="cm-keyword">and</span> <span class="cm-number">0</span> <span class="cm-operator">&lt;</span>= <span class="cm-variable">y</span> <span class="cm-operator">&lt;</span> <span class="cm-variable">nc</span> <span class="cm-keyword">and</span> <span class="cm-variable">grid</span>[<span class="cm-variable">x</span>][<span class="cm-variable">y</span>] == <span class="cm-string">"1"</span>:</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable">uf</span>.<span class="cm-property">union</span>(<span class="cm-variable">r</span> <span class="cm-operator">*</span> <span class="cm-variable">nc</span> <span class="cm-operator">+</span> <span class="cm-variable">c</span>, <span class="cm-variable">x</span> <span class="cm-operator">*</span> <span class="cm-variable">nc</span> <span class="cm-operator">+</span> <span class="cm-variable">y</span>)</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">return</span> <span class="cm-variable">uf</span>.<span class="cm-property">getCount</span>()</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span cm-text="" cm-zwsp="">
</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span cm-text="" cm-zwsp="">
</span></span></pre></div></div></div></div></div><div style="position: absolute; height: 0px; width: 1px; border-bottom: 0px solid transparent; top: 1800px;"></div><div class="CodeMirror-gutters" style="display: none; height: 1800px;"></div></div></div></pre><h5 id='322-零钱兑换'><span>322. 零钱兑换</span></h5><p><span>给你一个整数数组 </span><code>coins</code><span> ，表示不同面额的硬币；以及一个整数 </span><code>amount</code><span> ，表示总金额。计算并返回可以凑成总金额所需的 最少的硬币个数 。如果没有任何一种硬币组合能组成总金额，返回 -1 。你可以认为每种硬币的数量是无限的。</span></p><pre class="md-fences md-end-block ty-contain-cm modeLoaded" spellcheck="false" lang="python" style="break-inside: unset;"><div class="CodeMirror cm-s-inner cm-s-null-scroll CodeMirror-wrap" lang="python"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 10px; left: 4px;"><textarea autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" style="position: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; outline: none;"></textarea></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1"><div class="CodeMirror-sizer" style="margin-left: 0px; margin-bottom: 0px; border-right-width: 0px; padding-right: 0px; padding-bottom: 0px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines" role="presentation"><div role="presentation" style="position: relative; outline: none;"><div class="CodeMirror-measure"><pre><span>xxxxxxxxxx</span></pre></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-code" role="presentation" style="text-rendering: auto;"><div class="CodeMirror-activeline" style="position: relative;"><div class="CodeMirror-activeline-background CodeMirror-linebackground"></div><div class="CodeMirror-gutter-background CodeMirror-activeline-gutter" style="left: 0px; width: 0px;"></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-comment"># bfs 方法</span></span></pre></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-keyword">class</span> <span class="cm-def">Solution</span>:</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp;<span class="cm-variable">total</span>=<span class="cm-number">10001</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp;<span class="cm-keyword">def</span> <span class="cm-def">coinChange</span>(<span class="cm-variable-2">self</span>, <span class="cm-variable">coins</span>: <span class="cm-variable">List</span>[<span class="cm-builtin">int</span>], <span class="cm-variable">amount</span>: <span class="cm-builtin">int</span>) <span class="cm-operator">-&gt;</span> <span class="cm-builtin">int</span>:</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp;<span class="cm-variable cm-error">coins</span>.<span class="cm-property">sort</span>()</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp;<span class="cm-keyword">def</span> <span class="cm-def">bfs</span>(<span class="cm-variable">amount</span>): &nbsp;</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable">distance</span>=<span class="cm-number">0</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable">q</span> = [<span class="cm-number">0</span>]</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable">visited_list</span>=[<span class="cm-number">1</span>]<span class="cm-operator">+</span>[<span class="cm-number">0</span>]<span class="cm-operator">*</span><span class="cm-variable">amount</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">while</span> <span class="cm-variable">q</span>:</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable">tep</span> = []</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">while</span> <span class="cm-variable">q</span>: <span class="cm-comment">#出栈</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable">t</span>=<span class="cm-variable">q</span>.<span class="cm-property">pop</span>()</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">if</span> <span class="cm-variable">t</span>==<span class="cm-variable">amount</span>:</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">return</span> <span class="cm-variable">distance</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">for</span> <span class="cm-variable">i</span> <span class="cm-keyword">in</span> <span class="cm-variable">coins</span>:</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-builtin">next</span>=<span class="cm-variable">t</span><span class="cm-operator">+</span><span class="cm-variable">i</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">if</span> <span class="cm-builtin">next</span> <span class="cm-operator">&lt;</span>= <span class="cm-variable">amount</span> <span class="cm-keyword">and</span> <span class="cm-variable">visited_list</span>[<span class="cm-builtin">next</span>]==<span class="cm-number">0</span>:</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable">tep</span>.<span class="cm-property">append</span>(<span class="cm-builtin">next</span>) <span class="cm-comment">#入栈</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable">visited_list</span>[<span class="cm-builtin">next</span>]=<span class="cm-number">1</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable">distance</span>+=<span class="cm-number">1</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable">q</span>,<span class="cm-variable">tep</span> = <span class="cm-variable">tep</span>,<span class="cm-variable">q</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">return</span> <span class="cm-operator">-</span><span class="cm-number">1</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp;<span class="cm-keyword">return</span> <span class="cm-variable">bfs</span>(<span class="cm-variable">amount</span>)</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp;<span class="cm-comment"># bfs的思路为：一枚硬币可以解决吗？两枚呢？三枚呢？</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp;</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-comment"># 动态规划</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-keyword">class</span> <span class="cm-def">Solution</span>:</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span cm-text="" cm-zwsp="">
</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp;<span class="cm-keyword">def</span> <span class="cm-def">coinChange</span>(<span class="cm-variable-2">self</span>, <span class="cm-variable">coins</span>: <span class="cm-variable">List</span>[<span class="cm-builtin">int</span>], <span class="cm-variable">amount</span>: <span class="cm-builtin">int</span>) <span class="cm-operator">-&gt;</span> <span class="cm-builtin">int</span>:</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable">dp</span>=[<span class="cm-number">0</span>]<span class="cm-operator">+</span>[<span class="cm-number">10001</span>]<span class="cm-operator">*</span><span class="cm-variable">amount</span> </span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-comment">#可以中这种方法创建数组,取10001是保证数组中的数总比输入值大</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-comment">#dp[i]表示总金额为i的情况下的最小取值</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">for</span> <span class="cm-variable">coin</span> <span class="cm-keyword">in</span> <span class="cm-variable">coins</span>:</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">for</span> <span class="cm-variable">i</span> <span class="cm-keyword">in</span> <span class="cm-builtin">range</span>(<span class="cm-variable">coin</span>,<span class="cm-variable">amount</span><span class="cm-operator">+</span><span class="cm-number">1</span>):</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable">dp</span>[<span class="cm-variable">i</span>] = <span class="cm-builtin">min</span>(<span class="cm-variable">dp</span>[<span class="cm-variable">i</span>],<span class="cm-variable">dp</span>[<span class="cm-variable">i</span><span class="cm-operator">-</span><span class="cm-variable">coin</span>]<span class="cm-operator">+</span><span class="cm-number">1</span>)</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">return</span> <span class="cm-variable">dp</span>[<span class="cm-operator">-</span><span class="cm-number">1</span>] <span class="cm-keyword">if</span> <span class="cm-variable">dp</span>[<span class="cm-operator">-</span><span class="cm-number">1</span>]<span class="cm-operator">!</span>=<span class="cm-number">10001</span> <span class="cm-keyword">else</span> <span class="cm-operator">-</span><span class="cm-number">1</span> </span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span cm-text="" cm-zwsp="">
</span></span></pre></div></div></div></div></div><div style="position: absolute; height: 0px; width: 1px; border-bottom: 0px solid transparent; top: 912px;"></div><div class="CodeMirror-gutters" style="display: none; height: 912px;"></div></div></div></pre><h4 id='贪心算法'><span>贪心算法</span></h4><h5 id='1217玩筹码'><span>1217.玩筹码</span></h5><p><span>数轴上放置了一些筹码，每个筹码的位置存在数组 </span><code>chips</code><span> 当中。你可以对 任何筹码 执行下面两种操作之一（不限操作次数，0 次也可以）：</span></p><ul><li><span>将第 i 个筹码向左或者右移动 2 个单位，代价为 0。</span></li><li><span>将第 i 个筹码向左或者右移动 1 个单位，代价为 1。</span></li></ul><p><span>最开始的时候，同一位置上也可能放着两个或者更多的筹码。返回将所有筹码移动到同一位置（任意位置）上所需要的最小代价。</span></p><pre class="md-fences md-end-block ty-contain-cm modeLoaded" spellcheck="false" lang="python"><div class="CodeMirror cm-s-inner cm-s-null-scroll CodeMirror-wrap" lang="python"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 10px; left: 4px;"><textarea autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" style="position: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; outline: none;"></textarea></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1"><div class="CodeMirror-sizer" style="margin-left: 0px; margin-bottom: 0px; border-right-width: 0px; padding-right: 0px; padding-bottom: 0px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines" role="presentation"><div role="presentation" style="position: relative; outline: none;"><div class="CodeMirror-measure"><pre><span>xxxxxxxxxx</span></pre></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-code" role="presentation" style="text-rendering: auto;"><div class="CodeMirror-activeline" style="position: relative;"><div class="CodeMirror-activeline-background CodeMirror-linebackground"></div><div class="CodeMirror-gutter-background CodeMirror-activeline-gutter" style="left: 0px; width: 0px;"></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-comment"># 贪心算法</span></span></pre></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span cm-text="" cm-zwsp="">
</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-keyword">class</span> <span class="cm-def">Solution</span>:</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp;<span class="cm-keyword">def</span> <span class="cm-def">minCostToMoveChips</span>(<span class="cm-variable-2">self</span>, <span class="cm-variable">position</span>: <span class="cm-variable">List</span>[<span class="cm-builtin">int</span>]) <span class="cm-operator">-&gt;</span> <span class="cm-builtin">int</span>:</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable">odd</span> = <span class="cm-number">0</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable">even</span> = <span class="cm-number">0</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">for</span> <span class="cm-variable">i</span> <span class="cm-keyword">in</span> <span class="cm-variable">position</span>:</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">if</span> <span class="cm-variable">i</span><span class="cm-operator">%</span><span class="cm-number">2</span>==<span class="cm-number">0</span>:</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable">even</span>+=<span class="cm-number">1</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">else</span>:</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable">odd</span>+=<span class="cm-number">1</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">return</span> <span class="cm-builtin">min</span>(<span class="cm-variable">even</span>,<span class="cm-variable">odd</span>)</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span cm-text="" cm-zwsp="">
</span></span></pre></div></div></div></div></div><div style="position: absolute; height: 0px; width: 1px; border-bottom: 0px solid transparent; top: 312px;"></div><div class="CodeMirror-gutters" style="display: none; height: 312px;"></div></div></div></pre><h5 id='55跳跃游戏'><span>55.跳跃游戏</span></h5><p><span>给定一个非负整数数组 </span><code>nums</code><span> ，你最初位于数组的 第一个下标 。数组中的每个元素代表你在该位置可以跳跃的最大长度。判断你是否能够到达最后一个下标。</span></p><pre class="md-fences md-end-block ty-contain-cm modeLoaded" spellcheck="false" lang="python" style="break-inside: unset;"><div class="CodeMirror cm-s-inner cm-s-null-scroll CodeMirror-wrap" lang="python"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 10px; left: 4px;"><textarea autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" style="position: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; outline: none;"></textarea></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1"><div class="CodeMirror-sizer" style="margin-left: 0px; margin-bottom: 0px; border-right-width: 0px; padding-right: 0px; padding-bottom: 0px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines" role="presentation"><div role="presentation" style="position: relative; outline: none;"><div class="CodeMirror-measure"><pre><span>xxxxxxxxxx</span></pre></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-code" role="presentation" style="text-rendering: auto;"><div class="CodeMirror-activeline" style="position: relative;"><div class="CodeMirror-activeline-background CodeMirror-linebackground"></div><div class="CodeMirror-gutter-background CodeMirror-activeline-gutter" style="left: 0px; width: 0px;"></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-comment"># 贪心算法</span></span></pre></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span cm-text="" cm-zwsp="">
</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-keyword">class</span> <span class="cm-def">Solution</span>:</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp;<span class="cm-keyword">def</span> <span class="cm-def">canJump</span>(<span class="cm-variable-2">self</span>, <span class="cm-variable">nums</span>: <span class="cm-variable">List</span>[<span class="cm-builtin">int</span>]) <span class="cm-operator">-&gt;</span> <span class="cm-builtin">bool</span>:</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable">n</span> = <span class="cm-number">1</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">if</span> <span class="cm-variable">nums</span> == [<span class="cm-number">0</span>]:</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">return</span> <span class="cm-keyword">True</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">for</span> <span class="cm-variable">i</span> <span class="cm-keyword">in</span> <span class="cm-builtin">range</span>(<span class="cm-builtin">len</span>(<span class="cm-variable">nums</span>)<span class="cm-operator">-</span><span class="cm-number">2</span>,<span class="cm-operator">-</span><span class="cm-number">1</span>,<span class="cm-operator">-</span><span class="cm-number">1</span>): <span class="cm-comment">#从后往前，总是检查前面的数是否能跳过后面的数</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">if</span> <span class="cm-variable">nums</span>[<span class="cm-variable">i</span>]<span class="cm-operator">&gt;</span>=<span class="cm-variable">n</span>:</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable">n</span>=<span class="cm-number">1</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">else</span>:</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable">n</span>+=<span class="cm-number">1</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">if</span> <span class="cm-variable">i</span> == <span class="cm-number">0</span> <span class="cm-keyword">and</span> <span class="cm-variable">n</span><span class="cm-operator">&gt;</span><span class="cm-number">1</span>:</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">return</span> <span class="cm-keyword">False</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">return</span> <span class="cm-keyword">True</span></span></pre></div></div></div></div></div><div style="position: absolute; height: 0px; width: 1px; border-bottom: 0px solid transparent; top: 360px;"></div><div class="CodeMirror-gutters" style="display: none; height: 360px;"></div></div></div></pre><h4 id='动态规划'><span>动态规划</span></h4><h5 id='509斐波那契数列'><span>509.斐波那契数列</span></h5><p><span>斐波那契数，通常用 F(n) 表示，形成的序列称为 斐波那契数列 。该数列由 0 和 1 开始，后面的每一项数字都是前面两项数字的和。也就是：</span></p><p><span>F(0) = 0，F(1) = 1</span>
<span>F(n) = F(n - 1) + F(n - 2)，其中 n &gt; 1</span>
<span>给你 n ，请计算 F(n) 。</span></p><pre class="md-fences md-end-block ty-contain-cm modeLoaded" spellcheck="false" lang="python"><div class="CodeMirror cm-s-inner cm-s-null-scroll CodeMirror-wrap" lang="python"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 10px; left: 4px;"><textarea autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" style="position: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; outline: none;"></textarea></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1"><div class="CodeMirror-sizer" style="margin-left: 0px; margin-bottom: 0px; border-right-width: 0px; padding-right: 0px; padding-bottom: 0px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines" role="presentation"><div role="presentation" style="position: relative; outline: none;"><div class="CodeMirror-measure"><pre><span>xxxxxxxxxx</span></pre></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-code" role="presentation" style="text-rendering: auto;"><div class="CodeMirror-activeline" style="position: relative;"><div class="CodeMirror-activeline-background CodeMirror-linebackground"></div><div class="CodeMirror-gutter-background CodeMirror-activeline-gutter" style="left: 0px; width: 0px;"></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-keyword">class</span> <span class="cm-def">Solution</span>:</span></pre></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp;</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp;<span class="cm-keyword">def</span> <span class="cm-def">fib</span>(<span class="cm-variable-2">self</span>, <span class="cm-variable">n</span>: <span class="cm-builtin">int</span>) <span class="cm-operator">-&gt;</span> <span class="cm-builtin">int</span>:</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable">a</span>=<span class="cm-number">0</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable">b</span>=<span class="cm-number">1</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">if</span> <span class="cm-variable">n</span>==<span class="cm-number">0</span>:</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">return</span> <span class="cm-number">0</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">if</span> <span class="cm-variable">n</span>==<span class="cm-number">1</span>:</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">return</span> <span class="cm-number">1</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">for</span> <span class="cm-variable">i</span> <span class="cm-keyword">in</span> <span class="cm-builtin">range</span>(<span class="cm-number">2</span>,<span class="cm-variable">n</span><span class="cm-operator">+</span><span class="cm-number">1</span>):</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable">a</span>,<span class="cm-variable">b</span> = <span class="cm-variable">b</span>,<span class="cm-variable">a</span><span class="cm-operator">+</span><span class="cm-variable">b</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">if</span> <span class="cm-variable">i</span> == <span class="cm-variable">n</span>:</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">return</span> <span class="cm-variable">b</span></span></pre></div></div></div></div></div><div style="position: absolute; height: 0px; width: 1px; border-bottom: 0px solid transparent; top: 312px;"></div><div class="CodeMirror-gutters" style="display: none; height: 312px;"></div></div></div></pre><h5 id='62不同路径'><span>62.不同路径</span></h5><p><span>一个机器人位于一个 m x n 网格的左上角 （起始点在下图中标记为 “Start” ）。机器人每次只能向下或者向右移动一步。机器人试图达到网格的右下角（在下图中标记为 “Finish” ）。问总共有多少条不同的路径？</span></p><pre class="md-fences md-end-block ty-contain-cm modeLoaded" spellcheck="false" lang="python" style="break-inside: unset;"><div class="CodeMirror cm-s-inner cm-s-null-scroll CodeMirror-wrap" lang="python"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 10px; left: 4px;"><textarea autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" style="position: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; outline: none;"></textarea></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1"><div class="CodeMirror-sizer" style="margin-left: 0px; margin-bottom: 0px; border-right-width: 0px; padding-right: 0px; padding-bottom: 0px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines" role="presentation"><div role="presentation" style="position: relative; outline: none;"><div class="CodeMirror-measure"><pre><span>xxxxxxxxxx</span></pre></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-code" role="presentation" style="text-rendering: auto;"><div class="CodeMirror-activeline" style="position: relative;"><div class="CodeMirror-activeline-background CodeMirror-linebackground"></div><div class="CodeMirror-gutter-background CodeMirror-activeline-gutter" style="left: 0px; width: 0px;"></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-comment">#公式法</span></span></pre></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span cm-text="" cm-zwsp="">
</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-keyword">class</span> <span class="cm-def">Solution</span>:</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp;<span class="cm-keyword">def</span> <span class="cm-def">uniquePaths</span>(<span class="cm-variable-2">self</span>, <span class="cm-variable">m</span>: <span class="cm-builtin">int</span>, <span class="cm-variable">n</span>: <span class="cm-builtin">int</span>) <span class="cm-operator">-&gt;</span> <span class="cm-builtin">int</span>:</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">return</span> <span class="cm-variable">math</span>.<span class="cm-property">comb</span>(<span class="cm-variable">m</span><span class="cm-operator">+</span><span class="cm-variable">n</span><span class="cm-operator">-</span><span class="cm-number">2</span>,<span class="cm-variable">m</span><span class="cm-operator">-</span><span class="cm-number">1</span>)</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-comment">#动态规划</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span cm-text="" cm-zwsp="">
</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-keyword">class</span> <span class="cm-def">Solution</span>:</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp;<span class="cm-keyword">def</span> <span class="cm-def">uniquePaths</span>(<span class="cm-variable-2">self</span>, <span class="cm-variable">m</span>: <span class="cm-builtin">int</span>, <span class="cm-variable">n</span>: <span class="cm-builtin">int</span>) <span class="cm-operator">-&gt;</span> <span class="cm-builtin">int</span>:</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable">a</span>=[<span class="cm-number">0</span>]<span class="cm-operator">*</span><span class="cm-variable">n</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable">dp</span>=[<span class="cm-variable">a</span>]<span class="cm-operator">*</span><span class="cm-variable">m</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">for</span> <span class="cm-variable">i</span> <span class="cm-keyword">in</span> <span class="cm-builtin">range</span>(<span class="cm-variable">m</span>):</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">for</span> <span class="cm-variable">j</span> <span class="cm-keyword">in</span> <span class="cm-builtin">range</span>(<span class="cm-variable">n</span>):</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">if</span> <span class="cm-variable">i</span> == <span class="cm-number">0</span> <span class="cm-keyword">or</span> <span class="cm-variable">j</span>==<span class="cm-number">0</span>:</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable">dp</span>[<span class="cm-variable">i</span>][<span class="cm-variable">j</span>] = <span class="cm-number">1</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">else</span>:</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable">dp</span>[<span class="cm-variable">i</span>][<span class="cm-variable">j</span>]=<span class="cm-variable">dp</span>[<span class="cm-variable">i</span><span class="cm-operator">-</span><span class="cm-number">1</span>][<span class="cm-variable">j</span>]<span class="cm-operator">+</span><span class="cm-variable">dp</span>[<span class="cm-variable">i</span>][<span class="cm-variable">j</span><span class="cm-operator">-</span><span class="cm-number">1</span>]</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">return</span> <span class="cm-variable">dp</span>[<span class="cm-variable">m</span><span class="cm-operator">-</span><span class="cm-number">1</span>][<span class="cm-variable">n</span><span class="cm-operator">-</span><span class="cm-number">1</span>]</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span cm-text="" cm-zwsp="">
</span></span></pre></div></div></div></div></div><div style="position: absolute; height: 0px; width: 1px; border-bottom: 0px solid transparent; top: 456px;"></div><div class="CodeMirror-gutters" style="display: none; height: 456px;"></div></div></div></pre><p>&nbsp;</p></div></div>
</body>
</html>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[几种常见的句内关系]]></title>
        <id>https://lxykyle01.github.io/post/ji-chong-chang-jian-de-ju-nei-guan-xi/</id>
        <link href="https://lxykyle01.github.io/post/ji-chong-chang-jian-de-ju-nei-guan-xi/">
        </link>
        <updated>2020-06-26T21:57:30.000Z</updated>
        <content type="html"><![CDATA[<p>几种常见的句内关系</p>
<ul>
<li><span class="content mubu-node"
style="line-height: 24px; min-height: 24px; font-size: 16px; padding: 2px 0px; display: inline-block; vertical-align: top;">Parallelism</span><br>
<span class="note"
style="display: inline-block; color: rgb(136, 136, 136); line-height: 22px; min-height: 22px; font-size: 14px; padding-bottom: 2px;">Must<br>
be structurally and logically<br>
similar平行结构必须具有相同的结构形式和平行的逻辑关系​</span>
<ul>
<li><span class="content mubu-node"
style="line-height: 24px; min-height: 24px; font-size: 16px; padding: 2px 0px; display: inline-block; vertical-align: top;">Root<br>
phrase</span><br>
<span class="note"
style="display: inline-block; color: rgb(136, 136, 136); line-height: 22px; min-height: 22px; font-size: 14px; padding-bottom: 2px;">Parallelism<br>
element started by root phrase​</span></li>
<li><span class="content mubu-node"
style="line-height: 24px; min-height: 24px; font-size: 16px; padding: 2px 0px; display: inline-block; vertical-align: top;">Parallelism<br>
Markers</span>
<ul>
<li><span class="content mubu-node"
style="line-height: 24px; min-height: 24px; font-size: 16px; padding: 2px 0px; display: inline-block; vertical-align: top;">OPEN</span><br>
<span class="note"
style="display: inline-block; color: rgb(136, 136, 136); line-height: 22px; min-height: 22px; font-size: 14px; padding-bottom: 2px;">with<br>
a word between two parallel element</span>
<ul>
<li><span class="content mubu-node"
style="line-height: 24px; min-height: 24px; font-size: 16px; padding: 2px 0px; display: inline-block; vertical-align: top;">★<br>
And</span></li>
<li><span class="content mubu-node"
style="line-height: 24px; min-height: 24px; font-size: 16px; padding: 2px 0px; display: inline-block; vertical-align: top;">★<br>
Or</span></li>
<li><span class="content mubu-node"
style="line-height: 24px; min-height: 24px; font-size: 16px; padding: 2px 0px; display: inline-block; vertical-align: top;">★<br>
But </span></li>
<li><span class="content mubu-node"
style="line-height: 24px; min-height: 24px; font-size: 16px; padding: 2px 0px; display: inline-block; vertical-align: top;">Rather<br>
than</span></li>
</ul>
</li>
<li><span class="content mubu-node"
style="line-height: 24px; min-height: 24px; font-size: 16px; padding: 2px 0px; display: inline-block; vertical-align: top;">CLOSE</span><br>
<span class="note"
style="display: inline-block; color: rgb(136, 136, 136); line-height: 22px; min-height: 22px; font-size: 14px; padding-bottom: 2px;">with<br>
a word between two parallel element and also a word before<br>
first element​</span>
<ul>
<li><span class="content mubu-node"
style="line-height: 24px; min-height: 24px; font-size: 16px; padding: 2px 0px; display: inline-block; vertical-align: top;">Both...and;<br>
Ether...or;Nor..but;Not only..but also;From...to</span></li>
</ul>
</li>
</ul>
</li>
<li><span class="content mubu-node"
style="line-height: 24px; min-height: 24px; font-size: 16px; padding: 2px 0px; display: inline-block; vertical-align: top;">Parallel<br>
Elements</span>
<ul>
<li><span class="content mubu-node"
style="line-height: 24px; min-height: 24px; font-size: 16px; padding: 2px 0px; display: inline-block; vertical-align: top;">Nouns</span></li>
<li><span class="content mubu-node"
style="line-height: 24px; min-height: 24px; font-size: 16px; padding: 2px 0px; display: inline-block; vertical-align: top;">Adj.</span></li>
<li><span class="content mubu-node"
style="line-height: 24px; min-height: 24px; font-size: 16px; padding: 2px 0px; display: inline-block; vertical-align: top;">Working<br>
verbs</span></li>
<li><span class="content mubu-node"
style="line-height: 24px; min-height: 24px; font-size: 16px; padding: 2px 0px; display: inline-block; vertical-align: top;">Infinitive<br>
verbs(to do)</span></li>
<li><span class="content mubu-node"
style="line-height: 24px; min-height: 24px; font-size: 16px; padding: 2px 0px; display: inline-block; vertical-align: top;">Participle<br>
Modifiers(分词)</span></li>
<li><span class="content mubu-node"
style="line-height: 24px; min-height: 24px; font-size: 16px; padding: 2px 0px; display: inline-block; vertical-align: top;">Prepositional<br>
Phrases</span></li>
<li><span class="content mubu-node"
style="line-height: 24px; min-height: 24px; font-size: 16px; padding: 2px 0px; display: inline-block; vertical-align: top;">Subordinate<br>
Clauses(从句)</span></li>
</ul>
</li>
<li><span class="content mubu-node"
style="line-height: 24px; min-height: 24px; font-size: 16px; padding: 2px 0px; display: inline-block; vertical-align: top;">Idoioms<br>
with built-in parallel structure</span></li>
<li><span class="content mubu-node"
style="line-height: 24px; min-height: 24px; font-size: 16px; padding: 2px 0px; display: inline-block; vertical-align: top;">Parallel<br>
Meaning</span>
<ul>
<li><span class="content mubu-node"
style="line-height: 24px; min-height: 24px; font-size: 16px; padding: 2px 0px; display: inline-block; vertical-align: top;">Was;is...</span></li>
</ul>
</li>
</ul>
</li>
<li><span class="content mubu-node"
style="line-height: 24px; min-height: 24px; font-size: 16px; padding: 2px 0px; display: inline-block; vertical-align: top;">Comparisons</span><br>
<span class="note"
style="display: inline-block; color: rgb(136, 136, 136); line-height: 22px; min-height: 22px; font-size: 14px; padding-bottom: 2px;">Follow<br>
the same rules of parallelismBut need to be the same kind of<br>
things​</span>
<ul>
<li><span class="content mubu-node"
style="line-height: 24px; min-height: 24px; font-size: 16px; padding: 2px 0px; display: inline-block; vertical-align: top;">Comparition<br>
Markers</span>
<ul>
<li><span class="content mubu-node"
style="line-height: 24px; min-height: 24px; font-size: 16px; padding: 2px 0px; display: inline-block; vertical-align: top;">Like;Unlike;As;Than;Different<br>
from;In contract to/with</span></li>
</ul>
</li>
<li><span class="content mubu-node"
style="line-height: 24px; min-height: 24px; font-size: 16px; padding: 2px 0px; display: inline-block; vertical-align: top;">Omitted<br>
Words</span><br>
<span class="note"
style="display: inline-block; color: rgb(136, 136, 136); line-height: 22px; min-height: 22px; font-size: 14px; padding-bottom: 2px;">在不产生歧义的情况下，Y的部分内容可以被省略（名词，动词，甚至整个句子）​​</span></li>
<li><span class="content mubu-node"
style="line-height: 24px; min-height: 24px; font-size: 16px; padding: 2px 0px; display: inline-block; vertical-align: top;">Like<br>
VS AS</span>
<ul>
<li><span class="content mubu-node"
style="line-height: 24px; min-height: 24px; font-size: 16px; padding: 2px 0px; display: inline-block; vertical-align: top;">Like<br>
只能比较名词和名词短语；不能接介词短语和句子</span></li>
<li><span class="content mubu-node"
style="line-height: 24px; min-height: 24px; font-size: 16px; padding: 2px 0px; display: inline-block; vertical-align: top;">AS可以被用来比较两个句子，也可以比较名词</span></li>
<li><span class="content mubu-node"
style="line-height: 24px; min-height: 24px; font-size: 16px; padding: 2px 0px; display: inline-block; vertical-align: top;">两者在比较名词的时候，意思没有差别</span></li>
</ul>
</li>
</ul>
</li>
</ul>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[面试基础知识手册笔记]]></title>
        <id>https://lxykyle01.github.io/post/mian-shi-ji-chu-zhi-shi-shou-ce-bi-ji/</id>
        <link href="https://lxykyle01.github.io/post/mian-shi-ji-chu-zhi-shi-shou-ce-bi-ji/">
        </link>
        <updated>2020-02-09T05:11:53.000Z</updated>
        <content type="html"><![CDATA[<h2 id="1-算法基础知识">1. 算法基础知识</h2>
<h3 id="双指针遍历数组两个指针指向不同的元素协同完成任务">双指针(遍历数组，两个指针指向不同的元素，协同完成任务)</h3>
<p>（1）java数组的声明</p>
<pre><code class="language-java"> dataType[] arrayRefVar;
</code></pre>
<pre><code>      ``` java
      dataType[] arrayRefVar = new dataType[arraySize]; 
      ```
      数组编码从0开始，遍历数组时要注意遍历取值到 Array.length - 1 
      ``` java  
      for (int i = 0; i &lt; myList.length; i++) {
     System.out.println(myList[i] + &quot; &quot;);
  }
     ```</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[International Business Project]]></title>
        <id>https://lxykyle01.github.io/post/international-business-project/</id>
        <link href="https://lxykyle01.github.io/post/international-business-project/">
        </link>
        <updated>2019-12-29T05:06:17.000Z</updated>
        <content type="html"><![CDATA[ <iframe width='1000' height='1000' frameborder="0"src='https://www.jianguoyun.com/p/DfaWtJsQ4emvBxjS_7oC'></iframe>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Smart Home Project]]></title>
        <id>https://lxykyle01.github.io/post/smart-home-project/</id>
        <link href="https://lxykyle01.github.io/post/smart-home-project/">
        </link>
        <updated>2019-12-29T05:04:15.000Z</updated>
        <content type="html"><![CDATA[<iframe width='1000' height='1000' frameborder="0"src='https://www.jianguoyun.com/p/DfOD3dcQ4emvBxirhLsC'></iframe>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[IoT Project]]></title>
        <id>https://lxykyle01.github.io/post/iot-project/</id>
        <link href="https://lxykyle01.github.io/post/iot-project/">
        </link>
        <updated>2019-12-29T05:03:02.000Z</updated>
        <content type="html"><![CDATA[<iframe width='1000' height='1000' frameborder="0"src='https://www.jianguoyun.com/p/DX7JL5kQ4emvBxje_7oC'></iframe>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Useful Links]]></title>
        <id>https://lxykyle01.github.io/post/useful-links/</id>
        <link href="https://lxykyle01.github.io/post/useful-links/">
        </link>
        <updated>2019-12-28T21:57:47.000Z</updated>
        <content type="html"><![CDATA[<div class="post-content yue">
          <p>TensorFlow on Spark Github:<br>
<a href="https://github.com/yahoo/TensorFlowOnSpark">https://github.com/yahoo/TensorFlowOnSpark</a></p>
<p>Deep Learning with Apache Spark and TensorFlow:<br>
<a href="https://databricks.com/blog/2016/01/25/deep-learning-with-apache-spark-and-tensorflow.html">https://databricks.com/blog/2016/01/25/deep-learning-with-apache-spark-and-tensorflow.html</a></p>
<p>当Spark遇上TensorFlow分布式深度学习框架原理和实践<br>
<a href="https://juejin.im/post/5ad4b620f265da23a04a0ad0">https://juejin.im/post/5ad4b620f265da23a04a0ad0</a></p>
<p>Spark 随机森林算法原理、源码分析及案例实战<br>
<a href="https://www.ibm.com/developerworks/cn/opensource/os-cn-spark-random-forest/">https://www.ibm.com/developerworks/cn/opensource/os-cn-spark-random-forest/</a></p>
<p>Scalable-machine-learning<br>
<a href="https://docs.huihoo.com/machine-learning/scalable-machine-learning/">https://docs.huihoo.com/machine-learning/scalable-machine-learning/</a></p>
<h3 id="papers">Papers</h3>
<p>Spark: Cluster Computing with Working Sets, Matei Zaharia, Mosharaf Chowdhury, Michael J. Franklin, Scott Shenker, Ion Stoica. USENIX HotCloud (2010).<br>
<a href="http://people.csail.mit.edu/matei/papers/2010/hotcloud_spark.pdf">http://people.csail.mit.edu/matei/papers/2010/hotcloud_spark.pdf</a></p>
<p>Resilient Distributed Datasets: A Fault-Tolerant Abstraction for In-Memory Cluster Computing, Matei Zaharia, Mosharaf Chowdhury, Tathagata Das, Ankur Dave, Justin Ma, Murphy McCauley, Michael J. Franklin, Scott Shenker, Ion Stoica. NSDI (2012)<br>
<a href="https://www.usenix.org/system/files/conference/nsdi12/nsdi12-final138.pdf">https://www.usenix.org/system/files/conference/nsdi12/nsdi12-final138.pdf</a></p>
<p>MLlib: Machine Learning in Apache Spark, X. Meng, J. Bradley, B. Yuvaz, E. Sparks, S. Venkataraman, D. Liu, J. Freeman, D. Tsai, M. Amde, S. Owen, D. Xin, R. Xin, M. Franklin, R. Zadeh, M. Zaharia, A. Talwalkar. Preprint (2015).<br>
<a href="https://arxiv.org/pdf/1505.06807.pdf">https://arxiv.org/pdf/1505.06807.pdf</a></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[How to Deploy Hadoop with Ambari]]></title>
        <id>https://lxykyle01.github.io/post/ambari/</id>
        <link href="https://lxykyle01.github.io/post/ambari/">
        </link>
        <updated>2019-12-23T15:40:58.000Z</updated>
        <content type="html"><![CDATA[<h3 id="1-build-two-vmcentos-7">1. BUILD TWO VM(CentOS 7)</h3>
<figure data-type="image" tabindex="1"><img src="https://lxykyle01.github.io//post-images/1577645718725.png" alt="" loading="lazy"></figure>
<h3 id="2-ssh-connection">2. SSH CONNECTION</h3>
<p>Create public key in Xshell,then copy it to the google cloud server.(For Users)<br>
Change root code(For Root)</p>
<h3 id="3-remote-control">3. REMOTE CONTROL</h3>
<p>Install xfce for master</p>
<pre><code class="language-c"># sodu yum groupinstall xfce 
</code></pre>
<p>Use xstart to load this command /usr/bin/xfce4-session and use Xmanager to remote connect it.<br>
Choose default setting to set up the start window.</p>
<h3 id="4-hostname-and-hosts-config">4. HOSTNAME AND HOSTS CONFIG</h3>
<p>Change hostname to the name in <em>/ect/hosts</em><br>
Add node's hostname and ip in master's hosts file and add master's hostname and ip in node's hosts file.</p>
<pre><code class="language-c">centos 7 
[root@localhost ~]# hostnamectl set-hostname master #your hostname
[root@localhost ~]# vim /etc/sysconfig/network
-------------------------------------------------------------------
# Created by anaconda
NETWORKING=yes
HOSTNAME=master #your hostname
--------------------------------------------------------------------
[root@localhost ~]# vi  /etc/hosts
--------------------------------------------------------------------
192.168.192.154 master
192.168.192.155 node
#your master and nodes ip and hostname
</code></pre>
<h3 id="5-close-firewall">5. Close Firewall</h3>
<pre><code class="language-c">centos7
[root@localhost ~]# systemctl disable firewalld.service  
[root@localhost ~]# systemctl stop firewalld.service 
</code></pre>
<h3 id="6-close-selinux">6. Close SElinux</h3>
<pre><code class="language-c">[root@localhost ~]# vi /etc/sysconfig/selinux
----------------------------------------------------------------------
SELINUX=disabled
</code></pre>
<h3 id="7-clock-synchronise">7. Clock Synchronise</h3>
<pre><code class="language-c">[root@localhost ~] yum install -y ntp  
[root@localhost ~] chkconfig --list ntpd  
[root@localhost ~] systemctl is-enabled ntpd  
[root@localhost ~] systemctl enable ntpd  
[root@localhost ~] systemctl start ntpd 
</code></pre>
<h3 id="8-install-jdk18">8. Install JDK1.8</h3>
<pre><code class="language-c">[root@localhost ~]# cd /usr/local
[root@localhost local]# mkdir jdk8
[root@localhost local]# cd jdk8
[root@master jdk8]# tar -zxvf jdk-8u231-linux-x64.tar.gz 
[root@master jdk8]# vim /etc/profile
-----------------------------------------------------------------------
#java
export JAVA_HOME=/usr/local/jdk8/jdk1.8.0_231
export JRE_HOME=$JAVA_HOME/jre
export CLASSPATH=.:$JAVA_HOME/lib:$JRE_HOME/lib
export PATH=$PATH:$JAVA_HOME/bin
------------------------------------------------------------------------
[root@master jdk8]# source /etc/profile
[root@master jdk8]# java -version #Check it
</code></pre>
<h3 id="9install-other-services">9.Install Other Services</h3>
<pre><code class="language-c">[root@localhost ~]# umask 0022
[root@ambari01 ~]# yum -y install lrzsz
[root@ambari01 ~]# yum install -y openssh-clients
</code></pre>
<p>Steps 1~9 should be done in both master and node server</p>
<h3 id="10-ssh-login-without-using-password">10. SSH login Without Using Password</h3>
<pre><code class="language-c">[root@master ~]# ssh-keygen -t rsa
[root@master ~]# cd .ssh
[root@master .ssh]# ls
id_rsa  id_rsa.pub
[root@master ~]# ssh-copy-id -i ~/.ssh/id_rsa.pub root@192.168.192.155 #node ip address
[root@master ~]# ssh-copy-id -i ~/.ssh/id_rsa.pub root@192.168.192.156 #master ip address
[root@master ~]# ssh 192.168.192.155 #test
[root@node ~]# exit
</code></pre>
<h3 id="11-local-repo-configration">11. Local Repo Configration</h3>
<p>Download these three files to master.<br>
CentOS 7：<br>
http://public-repo-1.hortonworks.com/ambari/centos7/2.x/updates/2.5.0.3/ambari-2.5.0.3-centos7.tar.gz<br>
http://public-repo-1.hortonworks.com/HDP/centos7/2.x/updates/2.6.0.3/HDP-2.6.0.3-centos7-rpm.tar.gz<br>
http://public-repo-1.hortonworks.com/HDP-UTILS-1.1.0.21/repos/centos7/HDP-UTILS-1.1.0.21-centos7.tar.gz</p>
<pre><code class="language-c">[root@master ~]# yum install yum-utils createrepo yum-plugin-priorities -y
#Add gpgcheck=0
[root@master ~]# vi /etc/yum/pluginconf.d/priorities.conf
---------------------------------------------------------------------------
gpgcheck = 0
---------------------------------------------------------------------------
#check httpd 
[root@master ~]# yum list httpd
#install httpd
[root@master ~]# yum install httpd
#config HTTP 
[root@master ~]# chkconfig httpd on
[root@master ~]# service httpd start
#Creat local repo
[root@master ~]# cd /var/www/html/
[root@master html]# mkdir ambari
[root@master ambari]# cd ..
[root@master html]# mkdir hdp
#creat catalog and unzip

root@master Downloads]# ls
ambari-2.5.0.3-centos7.tar.gz   HDP-UTILS-1.1.0.21-centos7.tar.gz
HDP-2.6.0.3-centos7-rpm.tar.gz

[root@master Downloads]# tar -zxvf ambari-2.5.0.3-centos7.tar.gz -C /var/www/html/ambari
[root@master Downloads]# tar -zxvf HDP-2.6.0.3-centos7-rpm.tar.gz -C /var/www/html/hdp
[root@master Downloads]# tar -zxvf HDP-UTILS-1.1.0.21-centos7.tar.gz -C /var/www/html/hdp

#creat repo
[root@master Downloads]# cd /var/www/html/ambari/
[root@master ambari]# createrepo ./

[root@master Downloads]# cd /etc/yum.repos.d/
[root@master yum.repos.d]# ls
CentOS7-Base-163.repo    CentOS-Debuginfo.repo  CentOS-Sources.repo
CentOS-Base.repo.backup  CentOS-fasttrack.repo  CentOS-Vault.repo
CentOS-CR.repo           CentOS-Media.repo

[root@master yum.repos.d]# wget -nv http://public-repo-1.hortonworks.com/ambari/centos7/2.x/updates/2.5.0.3/ambari.repo
[root@master yum.repos.d]# vim ambari.repo 
------------------------------------------------------------------------------------
#VERSION_NUMBER=2.5.0.3-7
[ambari-2.5.0.3]
name=ambari Version - ambari-2.5.0.3
baseurl=http://master/ambari/ambari/centos7/
gpgcheck=0
gpgkey=http://master/ambari/ambari/centos7/RPM-GPG-KEY/RPM-GPG-KEY-Jenkins
enabled=1
priority=1
------------------------------------------------------------------------------------
[root@master yum.repos.d]# wget -nv http://public-repo-1.hortonworks.com/HDP/centos7/2.x/updates/2.6.0.3/hdp.repo
[root@master yum.repos.d]# vim hdp.repo 
------------------------------------------------------------------------------------
#VERSION_NUMBER=2.6.0.3-8
[HDP-2.6.0.3]
name=HDP Version - HDP-2.6.0.3
baseurl=http://master/hdp/HDP/centos7/
gpgcheck=0
gpgkey=http://master/hdp/HDP/centos7/HDP/centos7/RPM-GPG-KEY/RPM-GPG-KEY-Jenkins
enabled=1
priority=1

[HDP-UTILS-1.1.0.21]
name=HDP-UTILS Version - HDP-UTILS-1.1.0.21
baseurl=http://master/hdp/
gpgcheck=0
gpgkey=http://master/hdp/RPM-GPG-KEY/RPM-GPG-KEY-Jenkins
enabled=1
priority=1
-------------------------------------------------------------------------------------
# yum clean list
# yum update list
# yum makecache
# yum repolist
</code></pre>
<h3 id="12-check-masterhdp-and-masterambariambaricentos7">12. Check master/hdp/ and master/ambari/ambari/centos7/</h3>
<p><img src="https://lxykyle01.github.io//post-images/1577645825672.jpg" alt="" loading="lazy"><br>
###13. Install MySQL</p>
<pre><code class="language-c"># wget http://repo.mysql.com/mysql57-community-release-el7-8.noarch.rpm
# rpm -ivh mysql57-community-release-el7-8.noarch.rpm  --nodeps --force
# cd /etc/yum.repos.d
# ls -l
# yum install -y mysql-server
# systemctl start mysqld
# service mysqld status
# grep 'temporary password' /var/log/mysqld.log  #It will return a random password

# mysql -u root -p

mysql&gt; Enter password: # type the random passwor you got before
mysql&gt; set global validate_password_policy=0;
mysql&gt; set global validate_password_length=4;
mysql&gt; alter user 'root'@'localhost' identified by 'root-1234'; #Set your own password to replace root-1234
mysql&gt; flush privileges;
mysql&gt; quit;

# mysql -u root -p  # type the password you set before

mysql&gt; GRANT ALL PRIVILEGES ON *.* TO 'root'@'%' IDENTIFIED BY ' root-1234' WITH GRANT OPTION;
mysql&gt; FLUSH PRIVILEGES;

# yum install -y mysql-connector-java

mysql&gt; create database ambari character set utf8;
mysql&gt; CREATE USER 'ambari'@'%' IDENTIFIED BY 'ambari-1234'; #Set your own password to replace ambari-1234
mysql&gt; GRANT ALL PRIVILEGES ON *.* TO 'ambari'@'%';
mysql&gt; FLUSH PRIVILEGES;

mysql&gt; create database hive character set utf8;
mysql&gt; CREATE USER 'hive'@'%' IDENTIFIED BY 'hive-1234';  #Set your own password to replace hive-1234
mysql&gt; GRANT ALL PRIVILEGES ON *.* TO 'hive'@'%';
mysql&gt; FLUSH PRIVILEGES;
</code></pre>
<h3 id="14-install-ambari">14. Install Ambari</h3>
<pre><code class="language-c"># yum install -y ambari-server
# mysql -uroot -p

mysql&gt; use ambari;
mysql&gt; source /var/lib/ambari-server/resources/Ambari-DDL-MySQL-CREATE.sql;

# ambari-server setup
--------------------------------------------------------------------------------
Customize user account for ambari-server daemon [y/n] (n)? y
Enter user account for ambari-server daemon (root): root
Adjusting ambari-server permissions and ownership...
Checking JDK...Do you want to change Oracle JDK [y/n] (n)? y

[1] Oracle JDK 1.8 + Java Cryptography Extension (JCE) Policy Files 8
[2] Oracle JDK 1.7 + Java Cryptography Extension (JCE) Policy Files 7
[3] Custom JDK

==========================================

Enter choice (1): 3

JAVA_HOME=usr/local/jdk8/jdk1.8.0_231/
Configuring database...Enter advanced database configuration [y/n] (n)? y
Configuring database...
========================================

Choose one of the following options:

[1] - PostgreSQL (Embedded)
[2] - Oracle
[3] - MySQL
[4] - PostgreSQL
[5] - Microsoft SQL Server (Tech Preview)
[6] - SQL Anywhere

==========================================

Enter choice (1): 3

Hostname (localhost): ambari.server
Port (3306):
Database name (ambari):
Username (ambari):
Enter Database Password (ambari-1234):#password you set before
-------------------------------------------------------------------------------
</code></pre>
<h3 id="15-start-ambari">15. Start Ambari</h3>
<pre><code class="language-c"># ambari-server start
</code></pre>
<p>http://master:8080/#/login #USE firefox to open it</p>
<p>Username:admin<br>
Password:admin<br>
<img src="https://lxykyle01.github.io//post-images/1577645803691.jpg" alt="" loading="lazy"></p>
<p>Type cluster name: any name your want</p>
<p>Chose HDP-2.6(Defaut Version)<br>
Use local Repository<br>
<img src="https://lxykyle01.github.io//post-images/1577645785961.jpg" alt="" loading="lazy"></p>
<p>Target Hosts :Paste both master and node FQDN hostname here</p>
<p>For ssh private key: chose id_rsa from /root/.ssh(It is a hide file,you need click show hide files)</p>
<p>Next</p>
<p>Find : SSLError:Failed to connect.Please check openssl library versions.</p>
<p>Use below set for both master and node</p>
<pre><code class="language-c">vim /etc/python/cert-verification.cfg

[https]
verify=disable

vim /etc/ambari-agent/ambari-agent

[security]
force_https_protocol=PROTOCOL_TLSv1_2

# service ambari-server restart
</code></pre>
<p>And restart the webpage to retry before steps.</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Hello Gridea]]></title>
        <id>https://lxykyle01.github.io/post/hello-gridea/</id>
        <link href="https://lxykyle01.github.io/post/hello-gridea/">
        </link>
        <updated>2018-12-11T16:00:00.000Z</updated>
        <summary type="html"><![CDATA[<p>👏  欢迎使用 <strong>Gridea</strong> ！<br>
✍️  <strong>Gridea</strong> 一个静态博客写作客户端。你可以用它来记录你的生活、心情、知识、笔记、创意... ...</p>
]]></summary>
        <content type="html"><![CDATA[<p>👏  欢迎使用 <strong>Gridea</strong> ！<br>
✍️  <strong>Gridea</strong> 一个静态博客写作客户端。你可以用它来记录你的生活、心情、知识、笔记、创意... ...</p>
<!-- more -->
<p><a href="https://github.com/getgridea/gridea">Github</a><br>
<a href="https://gridea.dev/">Gridea 主页</a><br>
<a href="http://fehey.com/">示例网站</a></p>
<h2 id="特性">特性👇</h2>
<p>📝  你可以使用最酷的 <strong>Markdown</strong> 语法，进行快速创作</p>
<p>🌉  你可以给文章配上精美的封面图和在文章任意位置插入图片</p>
<p>🏷️  你可以对文章进行标签分组</p>
<p>📋  你可以自定义菜单，甚至可以创建外部链接菜单</p>
<p>💻  你可以在 <strong>Windows</strong>，<strong>MacOS</strong> 或 <strong>Linux</strong> 设备上使用此客户端</p>
<p>🌎  你可以使用 <strong>𝖦𝗂𝗍𝗁𝗎𝖻 𝖯𝖺𝗀𝖾𝗌</strong> 或 <strong>Coding Pages</strong> 向世界展示，未来将支持更多平台</p>
<p>💬  你可以进行简单的配置，接入 <a href="https://github.com/gitalk/gitalk">Gitalk</a> 或 <a href="https://github.com/SukkaW/DisqusJS">DisqusJS</a> 评论系统</p>
<p>🇬🇧  你可以使用<strong>中文简体</strong>或<strong>英语</strong></p>
<p>🌁  你可以任意使用应用内默认主题或任意第三方主题，强大的主题自定义能力</p>
<p>🖥  你可以自定义源文件夹，利用 OneDrive、百度网盘、iCloud、Dropbox 等进行多设备同步</p>
<p>🌱 当然 <strong>Gridea</strong> 还很年轻，有很多不足，但请相信，它会不停向前 🏃</p>
<p>未来，它一定会成为你离不开的伙伴</p>
<p>尽情发挥你的才华吧！</p>
<p>😘 Enjoy~</p>
]]></content>
    </entry>
</feed>